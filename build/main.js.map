{"version":3,"sources":["../../src/services/logger.ts","../../src/services/configuration-service.ts","../../src/db/dbms.ts","../../src/services/utils.ts","../../src/engine/engine-factory.ts","../../src/services/notifications.ts","../../src/data/records/transaction.ts","../../src/db/transaction.ts","../../src/data/records/category.ts","../../src/data/records/account.ts","../../src/data/records/bank-transaction.ts","../../src/services/replication-service.ts","../../src/db/record.ts","../../src/db/persistence-provider-manager.ts","../../src/db/transaction-serializer.ts","../../src/bank/bank-sync.ts","../../src/pages/budget/budget.ts","../../src/data/records/bank-link.ts","../../src/data/transactions/init-budget-transaction.ts","../../src/app/app-ready.ts","../../src/bank/bank-provider-registry.ts","../../src/bank/provider-interface.ts","../../src/bank/standard-host-interface.ts","../../src/pages/home/home.ts","../../src/services/autofocus.ts","../../src/modals/share-budget/share-budget.ts","../../src/data/records/budget.ts","../../src/data/transactions/init-category-simple-weekly-transaction.ts","../../src/modals/add-edit-split-transaction/add-edit-split-transaction.ts","../../src/services/logger-ui-notifier-appender.ts","../../src/app/build-info.ts","../../src/bank/bank-link-local.ts","../../src/modals/add-budget/add-budget.ts","../../src/modals/add-edit-category/add-edit-category.ts","../../src/services/editor-provider.ts","../../src/modals/add-edit-transaction/add-edit-transaction.ts","../../src/modals/add-edit-split-transfer/add-edit-split-transfer.ts","../../src/modals/add-edit-transfer/add-edit-transfer.ts","../../src/demo/demo-setup.ts","../../src/pages/dev/dev.ts","../../src/modals/add-edit-account/add-edit-account.ts","../../src/pages/bank-account/bank-account.ts","../../src/pages/bank-link/bank-link.ts","../../src/modals/add-edit-bank-link/add-edit-bank-link.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/db/no-persistence-provider.ts","../../src/pages/category/category.ts","../../src/services/currency-formatter.ts","../../src/components/currency-format.ts","../../src/data/transactions/init-category-transaction.ts","../../src/modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly.ts","../../src/engine/processor.ts","../../src/data/transactions/init-simple-transaction.ts","../../src/data/transactions/create-split-transaction.ts","../../src/modals/add-edit-split-transaction/add-edit-split-transaction-line.ts","../../src/data/transactions/create-split-transfer.ts","../../src/modals/add-edit-split-transfer/add-edit-split-transfer-line.ts","../../src/data/transactions/init-category-transfer-transaction.ts","../../src/data/transactions/create-account-transaction.ts","../../src/data/transactions/merge-bank-transactions.ts","../../src/data/transactions/create-transaction-reconciliation.ts","../../src/demo/demo-service.ts","../../src/demo/demo-player.ts","../../src/demo/demo-ui.ts","../../src/services/logger-storage-appender.ts","../../src/data/transactions/create-bank-link.ts","../../src/data/transactions/set-account-bank-link.ts","../../src/data/transactions/bank-transaction-ignore.ts","../../src/data/transactions/bank-transaction-delete.ts","../../src/pages/budget-settings/budget-settings.ts","../../src/pages/account/account.ts","../../src/bank/transaction-sync.ts","../../src/bank/in-app-browser-interface-factory.ts","../../src/bank/bank-sync-monitor.ts","../../src/modals/view-bank-transaction/view-bank-transaction.ts","../../src/services/secure-prompt.ts","../../src/pages/about/about.ts","../../src/services/update-check.ts","../../src/pages/settings/settings.ts","../../src/pages/notifications/notifications.ts","../../src/bank/bank-sync-utils.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/db/db.ts","../../src/db/transaction-processor.ts","../../src/services/chunked-task.ts","../../src/db/local-storage-persistence-provider.ts","../../src/db/sql-storage-persistence-provider.ts","../../node_modules/moment/locale ^/.*$","../../src/engine/engine.ts","../../src/data/processors/category-simple-weekly-processor.ts","../../src/data/processors/account-balance.ts","../../src/bank/providers/anz-mobile-web-1.ts","../../src/bank/providers/mock-data-provider.ts","../../src/data/records/transaction-reconciliation.ts","../../src/app/app-exception-handler.ts","../../src/bank/in-app-browser-interface.ts","../../src/bank/browser-interface.ts","../../src/components/main-menu-content/main-menu-content.ts","../../src/components/notification-list/notification-list.ts","../../src/components/main-menu-icon/main-menu-icon.ts","../../src/services/updated-check.ts","../../src/components/currency-field.ts","../../src/components/no-focus.ts","../../src/components/error-label.ts","../../src/components/replication-error-display.ts","../../src/components/currency-display.ts","../../src/components/price-format.ts","../../src/components/date-format.ts","../../src/components/cute-progress-bar.ts","../../src/bank/bank-auto-sync.ts","../../src/components/status/status.ts","../../src/services/reconciliation-status.ts"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;;;;;;;;;;;;;;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","file":"main.js","sourcesContent":["export class Logger {\r\n\r\n    public static root: Logger;\r\n    public static DEBUG = 1;\r\n    public static INFO = 2;\r\n    public static ERROR = 3;\r\n\r\n    private _config: LoggerConfig;\r\n\r\n    constructor(public name?: string) {\r\n        this._config = new LoggerConfig();\r\n    }\r\n\r\n    public static get(name?: string): Logger {\r\n        // TODO: Store in a static map for persistent per logger based configuration.\r\n        if (typeof name === 'undefined') return Logger.root;\r\n\r\n        let logger = new Logger();\r\n        logger.config.parent = Logger.root; // TODO A heirarchy based off . separators?\r\n        return logger;\r\n    }\r\n\r\n    get config(): LoggerConfig {\r\n        return this._config;\r\n    }\r\n\r\n    debug(...data: any[]) {\r\n        this.log(Logger.DEBUG, data);\r\n    }\r\n\r\n    info (...data: any[]) {\r\n        this.log(Logger.INFO, data);\r\n    }\r\n\r\n    error (...data: any[]) {\r\n        this.log(Logger.ERROR, data);\r\n    }\r\n\r\n    private log (level: number, data: any[]) {\r\n\r\n        if (this.config.level > level) return;\r\n\r\n        this.config.getAppenders().forEach(appender => {\r\n            appender.log(level, data);\r\n        });\r\n\r\n    }\r\n\r\n    public static stringValue(value: any): string {\r\n        if (typeof value === 'undefined') return 'undefined';\r\n        if (value === null) return 'null';\r\n        if (typeof value === 'string') return value;\r\n        if (typeof value === 'number') return value.toString();\r\n        if (typeof value === 'function') return Logger.stringValue(value());\r\n\r\n        if (value instanceof Error) {\r\n            // TODO: If Error then need to print a stack trace, message, etc\r\n            return \"[Error]: \" + value;\r\n        }\r\n\r\n        // TODO: Maybe return these as some kind of wrapped type so we can group logging on them, or log the object to console, but the string version to a file\r\n        // .. And the .toString() method will just return the string value of it, so it is kinda like just returning a string...\r\n        // TODO: Will implement as needed...\r\n\r\n        // TODO: ViewWrappedError\r\n\r\n        if (value === Object(value)) {\r\n            if (value instanceof Array) {\r\n                // TODO: Iterate it and run each of the values ?\r\n            }\r\n\r\n            if (typeof value.toLog === 'function') {\r\n                return value.toLog();\r\n            }\r\n\r\n            // TODO: test for certain kind of objects and run through the values of them ?.\r\n            let cache = [];\r\n            try {\r\n                let json = JSON.stringify(value, function(key, value) {\r\n                    if (typeof value === 'object' && value !== null) {\r\n                        if (cache.indexOf(value) !== -1) {\r\n                            // Circular reference found, discard key\r\n                            return '[circular]';\r\n                        }\r\n                        // Store value in our collection\r\n                        cache.push(value);\r\n                    }\r\n                    return value;\r\n                });\r\n                if (json.length > 2000) json = json.substr(0, 2000) + '...[truncated]';\r\n\r\n                return json;\r\n            } catch (err) {\r\n                return \"Error Stringifying value: \" + value;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport class LoggerConfig {\r\n    parent: Logger;\r\n    private _level: number;\r\n    private _appenders: LoggerAppender[] = [];\r\n\r\n    get level(): number {\r\n        if (typeof this._level === 'undefined') return this.parent.config.level;\r\n        return this._level;\r\n    }\r\n    set level(value: number) {\r\n        this._level = value;\r\n    }\r\n    getAppenders(): LoggerAppender[] {\r\n        if (typeof this.parent === 'undefined') return this._appenders;\r\n        return this._appenders.concat(this.parent.config.getAppenders());\r\n    }\r\n    addAppender(appender: LoggerAppender) {\r\n        return this._appenders.push(appender);\r\n    }\r\n\r\n    // Removing appenders - Do it when/if eventually needed\r\n\r\n    \r\n}\r\n\r\nexport interface LoggerAppender { \r\n    log (level: number, data: any[]);\r\n}\r\n\r\nexport class LoggerConsoleAppender implements LoggerAppender {\r\n     log (level: number, data: any[]) {\r\n\r\n        let message = data.length > 0 ? Logger.stringValue(data[0]) : '.';\r\n        let extradata: any[] = null;\r\n        if (message === data[0]) {\r\n            extradata = data.slice(1);\r\n        }\r\n\r\n        if (level === Logger.DEBUG || level === Logger.INFO) {\r\n            if (extradata !== null && extradata.length > 0) {\r\n                console.groupCollapsed(message);\r\n                console.info(extradata);\r\n                console.groupEnd();\r\n            } else {\r\n                console.info(message);\r\n            }\r\n        } else if (level === Logger.ERROR) {\r\n            if (extradata !== null && extradata.length > 0) {\r\n                console.groupCollapsed(message);\r\n                console.error(extradata);\r\n                console.groupEnd();\r\n            } else {\r\n                console.error(message);\r\n            }\r\n        }\r\n\r\n     }\r\n}\r\n\r\nLogger.root = new Logger();\r\nLogger.root.config.level = Logger.DEBUG;\r\nLogger.root.config.addAppender(new LoggerConsoleAppender());\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger.ts","import {Device} from '@ionic-native/device';\r\nimport {Platform} from 'ionic-angular';\r\nimport {Injectable} from '@angular/core';\r\nimport {PersistenceProviderManager} from '../db/persistence-provider-manager';\r\nimport {DbPersistenceProvider} from '../db/db-persistence-provider';\r\nimport {Logger} from './logger';\r\nimport {SecureStorage, SecureStorageObject} from '@ionic-native/secure-storage';\r\n\r\ntype ConfigurationOption = 'experimental.transaction.notifications'\r\n                         | 'latest-version'\r\n                         | 'experimental.modals.show-split-transaction'\r\n                         | 'experimental.accounts.enabled'\r\n                         | 'testing.secure-storage.enabled'\r\n                         ;\r\n\r\nexport interface BooleanValueAccessor {\r\n    value: boolean;\r\n}\r\n\r\nexport class SecureAccessor {\r\n    public keys: any = {};\r\n    \r\n    constructor(private configuration: Configuration, private scope: string) {\r\n    }\r\n    removeScope(): Promise<void> {\r\n        return this.configuration.removeSecure(this.scope).then(() => undefined);\r\n    }\r\n    async removeSecure(key: string): Promise<string> {\r\n        let scoped = await this.configuration.getSecure(this.scope);\r\n        if (scoped == null) scoped = {};\r\n        let originalValue = scoped[key];\r\n        delete scoped[key];\r\n        if (JSON.stringify(scoped).length < 7) {\r\n            await this.removeScope();\r\n        } else {\r\n            await this.configuration.setSecure(this.scope, scoped);\r\n        }\r\n        this.keys = {};\r\n        Object.keys(scoped).forEach(k => this.keys[k] = true);\r\n        return originalValue;\r\n    }\r\n    async setSecure(key: string, value: any): Promise<string> {\r\n        if (value == undefined) return this.removeSecure(key);\r\n        let scoped = await this.configuration.getSecure(this.scope);\r\n        if (scoped == null) scoped = {};\r\n        let originalValue = scoped[key];\r\n        scoped[key] = value;\r\n        await this.configuration.setSecure(this.scope, scoped);\r\n        this.keys = {};\r\n        Object.keys(scoped).forEach(k => this.keys[k] = true);\r\n        return originalValue;\r\n    }\r\n    async getSecure(key: string): Promise<string> {\r\n        let scoped = await this.configuration.getSecure(this.scope);\r\n        if (scoped == null) scoped = {};\r\n        return scoped[key];\r\n    }\r\n    async cacheKeys() {\r\n        let scoped = await this.configuration.getSecure(this.scope);\r\n        if (scoped == null) scoped = {};\r\n        this.keys = {};\r\n        Object.keys(scoped).forEach(k => this.keys[k] = true);\r\n    }\r\n}\r\n\r\n@Injectable()\r\nexport class Configuration {\r\n    secureInitialised: boolean;\r\n    private logger: Logger = Logger.get('Configuration');\r\n\r\n    private configured: boolean = false;\r\n    public installationId: string;\r\n    public deviceId: string;\r\n    public deviceName: string;\r\n    public deviceInstallationId: string;\r\n    public native: boolean;\r\n    public persistence: DbPersistenceProvider;\r\n    public cId: string = 'conf';\r\n    public temporary: any = {};\r\n    private secure: SecureStorageObject;\r\n    private inMemoryTestingSecure: any;\r\n\r\n    private booleanValueAccessor = class implements BooleanValueAccessor {\r\n        constructor(private option: string, private configuration: Configuration) {\r\n        }\r\n\r\n        get value(): boolean {\r\n            return this.configuration.persistence.keyStore(this.configuration.cId, this.option) === 'true';\r\n        }\r\n\r\n        set value(value: boolean) {\r\n            this.configuration.persistence.keyStore(this.configuration.cId, this.option, value === undefined ? undefined : value ? 'true' : 'false');\r\n        }\r\n    }\r\n\r\n    option(option: ConfigurationOption, value?: string): string {\r\n        return this.persistence.keyStore(this.cId, option, value);\r\n    }\r\n\r\n    optionBoolean(option: ConfigurationOption, value?: boolean): boolean {\r\n        return this.persistence.keyStore(this.cId, option, value === undefined ? undefined : value ? 'true' : 'false') === 'true';\r\n    }\r\n\r\n    optionBooleanAccessor(option: ConfigurationOption): BooleanValueAccessor {\r\n        return new this.booleanValueAccessor(option, this);\r\n    }\r\n\r\n    get loglevel(): string {\r\n        return this.persistence.keyStore(this.cId, 'loglevel');\r\n    }\r\n\r\n    set loglevel(value: string) {\r\n        this.persistence.keyStore(this.cId, 'loglevel', value);\r\n    }\r\n\r\n    secureAccessor(scope: string): SecureAccessor {\r\n        let secureAccessor = new SecureAccessor(this, scope);\r\n        secureAccessor.cacheKeys();\r\n        return secureAccessor;\r\n    }\r\n\r\n    async removeSecure(key: string): Promise<string> {\r\n        let secure = await this.getSecureInternal();\r\n        let originalValue = secure[key];\r\n        delete secure[key];\r\n        await this.setSecureInternal(secure);\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    async setSecure(key: string, value: any): Promise<String> {\r\n        if (value === undefined) {\r\n            return await this.removeSecure(key);\r\n        }\r\n\r\n        let secure = await this.getSecureInternal();\r\n        let originalValue = secure[key];\r\n        secure[key] = value;\r\n        await this.setSecureInternal(secure);\r\n\r\n        return originalValue;\r\n    }\r\n\r\n    getSecure(key: string): Promise<any> {\r\n        return this.getSecureInternal().then(secure => secure[key]);\r\n    }\r\n\r\n    secureAvailable(): boolean {\r\n        return this.secureInitialised;\r\n    }\r\n    \r\n    constructor(private persistenceProviderManager: PersistenceProviderManager, private platform: Platform, private device: Device, private secureStorage: SecureStorage) {\r\n\r\n    }\r\n    \r\n    configure(): Promise<void> {\r\n        // Note: This has already been initialised....\r\n\r\n        this.persistence = this.persistenceProviderManager.provide();\r\n\r\n        this.initLogLevel();\r\n\r\n        if (this.platform.is('cordova')) {\r\n        this.logger.info('Running cordova');\r\n            this.native = true;\r\n            this.logger.info('Device Info');\r\n            this.logger.info(\"name: \" +  Device.name);\r\n        }\r\n        if (!this.platform.is('cordova')) {\r\n        this.logger.info('Running web browser');\r\n            this.native = false;\r\n        } \r\n\r\n        // Device and install Ids\r\n        if (! this.persistence.keyStore(this.cId, 'installationId')) this.persistence.keyStore(this.cId, 'installationId', 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {var r = Math.random() * 16 | 0, v = c === 'x' ? r : r & 0x3 | 0x8; return v.toString(16); }));\r\n        this.installationId = this.persistence.keyStore(this.cId, 'installationId');\r\n        this.logger.info('Installation Id: ' + this.installationId);\r\n        this.deviceId = this.device.uuid ? this.device.uuid.toLowerCase() : this.installationId;\r\n        this.logger.info(\"Device id: \" +  this.deviceId);\r\n        this.deviceName = !this.native ? 'Web Browser' : this.device.model || 'Mobile Device';\r\n        if (this.deviceName.length <= 3) this.deviceName = this.deviceName + \"___\";\r\n        this.logger.info(\"Device name: \" +  this.deviceName);\r\n        if (! this.persistence.keyStore(this.cId, 'deviceId')) this.persistence.keyStore(this.cId, 'deviceId', this.deviceId);\r\n        // Unique to this device and installation\r\n        this.deviceInstallationId = this.deviceId + '-' + this.installationId;\r\n\r\n        this.configured = true;\r\n\r\n        if (this.optionBoolean('testing.secure-storage.enabled')) {\r\n            this.inMemoryTestingSecure = {};\r\n            this.secureInitialised = true;\r\n            return Promise.resolve();\r\n        } else {\r\n            return this.secureStorage.create('eBudget').then(secureStorageObject => {\r\n                this.secure = secureStorageObject;\r\n                if (!this.native) {\r\n                    throw new Error(\"Browser has no implementation of secure storage\");\r\n                }\r\n                return this.secure.keys();\r\n            }).then(keys => {\r\n                if (keys.indexOf('secure') >= 0) return this.secure.get('secure');\r\n                else {\r\n                    return this.secure.set('secure', '{}').then(() => '{}');\r\n                }\r\n            }).then(secureObjectString => {\r\n                JSON.parse(secureObjectString);\r\n                this.secureInitialised = true;\r\n                this.logger.info(\"Secure storage initialised\");\r\n            }).catch(reason => {\r\n                this.logger.info(\"Secure storage unable to be initialised\", reason);\r\n                //TODO: Store this reason for when we prompt secure\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    private getSecureInternal(): Promise<any> {\r\n        if (this.optionBoolean('testing.secure-storage.enabled')) {\r\n            return Promise.resolve(this.inMemoryTestingSecure);\r\n        }\r\n\r\n        return this.secure.get('secure').then(secure => JSON.parse(secure));\r\n    }\r\n\r\n    private setSecureInternal(secure: any): Promise<void> {\r\n        if (this.optionBoolean('testing.secure-storage.enabled')) {\r\n            this.inMemoryTestingSecure = secure;\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return this.secure.set('secure', JSON.stringify(secure));\r\n    }\r\n\r\n    initLogLevel() {\r\n        if (this.loglevel === 'Debug') {\r\n            Logger.root.config.level = Logger.DEBUG;\r\n        } else {\r\n            Logger.root.config.level = Logger.INFO;\r\n        }\r\n    }\r\n    \r\n    lastOpenedBudget(budgetId?: string): string {\r\n        if (!this.configured) return null;\r\n\r\n        return this.persistence.keyStore(this.cId, 'autoOpenBudgetId', budgetId);\r\n    }\r\n    \r\n    \r\n    \r\n}\r\n\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/configuration-service.ts","import {Injectable} from '@angular/core';\r\nimport {Db} from './db';\r\nimport {DbPersistenceProvider} from './db-persistence-provider';\r\nimport {PersistenceProviderManager} from './persistence-provider-manager';\r\nimport Loki from 'lokijs';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport { Utils } from \"../services/utils\";\r\nimport { Configuration } from \"../services/configuration-service\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\n\r\n@Injectable()\r\nexport class Dbms {\r\n    private _dbInitialisedObservable: Observable<Db>;\r\n    private dbInitialisedObserver: Subscriber<Db>;\r\n    \r\n    private loki: Loki;\r\n    private persistenceProvider: DbPersistenceProvider;\r\n    public dbs: Array<Db>;\r\n    private dbMap: Map<string, Db>;\r\n    public initialising: boolean;\r\n        \r\n    constructor(private transactionSerializer: TransactionSerializer, persistenceProviderManager: PersistenceProviderManager, public configuration: Configuration) {\r\n        this.persistenceProvider = persistenceProviderManager.provide();\r\n        this.dbs = [];\r\n        this.dbMap = new Map<string, Db>();\r\n        this._dbInitialisedObservable = new Observable<Db>(observer => this.dbInitialisedObserver = observer).share();\r\n    }\r\n    \r\n    init(): Promise<void> {\r\n        this.initialising = true;\r\n\r\n        this.dbs.length = 0;\r\n        this.dbMap.clear();\r\n        this.loki = new Loki(null);\r\n        this.loki.autosaveDisable();\r\n\r\n        let inits = new Array<Promise<any>>();\r\n\r\n        this.persistenceProvider.dbs().forEach((dbId) => {\r\n            inits.push(this.createDb(dbId));\r\n        });\r\n\r\n        // this.fireEvent(\"initialised\", true);\r\n\r\n        return Promise.all(inits).then(() => { this.initialising = false; });\r\n    }\r\n    \r\n    \r\n    getDb(id: string): Db {\r\n        return this.dbMap.get(id);\r\n    }\r\n\r\n    dbInitialisedObservable(): Observable<Db> {\r\n        return this._dbInitialisedObservable;\r\n    }\r\n    \r\n    createDb(id?: string): Promise<Db> {\r\n        \r\n        if (!id) id = Utils.randomChars(20);\r\n\r\n        let db = new Db(id, this, this.persistenceProvider, this.loki, this.transactionSerializer);\r\n        \r\n        this.dbs.push(db);\r\n        this.dbMap.set(id, db);\r\n\r\n        if (!this.initialising) {\r\n            return this.persistenceProvider.addDb(id).then(() => {\r\n                return db.init().then(() => {\r\n                    this.dbInitialisedObserver.next(db);\r\n                    return db;\r\n                });\r\n            });\r\n        } else {\r\n            return db.init().then(() => {\r\n                this.dbInitialisedObserver.next(db);\r\n                return db;\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    deleteDb(id: string) {\r\n        let db = this.getDb(id);\r\n        this.dbs.splice(this.dbs.indexOf(db), 1);\r\n        this.dbMap.delete(id);\r\n        db.deleteInternal();\r\n        this.persistenceProvider.unlinkDb(id);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/dbms.ts","import moment from 'moment';\r\n\r\nexport class Utils {\r\n    \r\n    public static readonly STANDARD_DATE_FORMAT = 'YYYYMMDD';\r\n\r\n    static nowIonic(): string {\r\n        return moment().format('YYYY-MM-DD');\r\n    }\r\n\r\n    static nowYYYYMMDD(): string {\r\n        return moment().format('YYYYMMDD');\r\n    }\r\n\r\n    static toYYYYMMDDFromIonic(uiValue: any): string {\r\n        return moment(uiValue.split('T')[0]).format('YYYYMMDD');\r\n    }\r\n\r\n    static toIonicFromYYYYMMDD(modelValue: string): any {\r\n        return moment(modelValue, 'YYYYMMDD').format('YYYY-MM-DD');\r\n    }\r\n\r\n    static javaScriptEscape(value: string): string {\r\n        return value.replace(/\\\\/g,'\\\\\\\\').replace(/'/g,\"\\\\'\").replace(/\"/g,'\\\\\"').replace(/\\r/g,'').replace(/\\n/g,'');\r\n    }\r\n\r\n    static randomChars(length: number) {\r\n        let text = \"\";\r\n        let possible = \"ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz23456789\";\r\n\r\n        for( let i=0; i < length; i++ )\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n\r\n        return text;        \r\n    }\r\n\r\n    static getQueryStringValue(key: string, url?: string) {\r\n        if (!url) url = window.location.href;\r\n        key = key.replace(/[\\[\\]]/g, \"\\\\$&\");\r\n        var regex = new RegExp(\"[?&]\" + key + \"(=([^&#]*)|&|#|$)\"),\r\n            results = regex.exec(url);\r\n        if (!results) return null;\r\n        if (!results[2]) return '';\r\n        return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/utils.ts","import {Injectable} from '@angular/core';\r\nimport {Engine} from './engine';\r\nimport {Db} from '../db/db';\r\nimport {Dbms} from '../db/dbms';\r\nimport {Notifications} from '../services/notifications';\r\nimport {Configuration} from '../services/configuration-service';\r\n\r\n\r\n@Injectable()\r\nexport class EngineFactory {\r\n    \r\n    constructor(private dbms: Dbms, private notifications: Notifications, private configuration: Configuration) {\r\n\r\n            // TODO: some kind of \"activate\" listener on Db to process transactions as they go? - Or better to do it afterwards, then incrementally do it ?\r\n        \r\n    }\r\n    \r\n    getEngineById(dbId: string): Engine {\r\n        return this.getEngine(this.dbms.getDb(dbId));\r\n    }\r\n\r\n    getEngine(db: Db): Engine {\r\n        if (!(<any> db).engine) {\r\n            \r\n            let engine = new Engine(db, this.notifications, this.configuration);\r\n            (<any> db).engine = engine;\r\n        }\r\n        \r\n        return (<any> db).engine;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/engine/engine-factory.ts","import {Injectable} from '@angular/core';\r\nimport {ToastController, Toast} from 'ionic-angular';\r\nimport {Logger} from './logger';\r\nimport {CurrencyFormatter} from './currency-formatter';\r\n\r\ntype ClickActionType = 'custom' | 'page-nav';\r\n\r\nexport class Notification {\r\n    message: string;\r\n    important?: boolean\r\n    category?: string;\r\n    popup?: boolean;\r\n    silent?: boolean;\r\n\r\n    budgetId?: string;\r\n\r\n    popupDone?: boolean;\r\n    read?: boolean;\r\n    acknowledged?: boolean;\r\n\r\n    clickAction?: {type: ClickActionType; data: any};\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class Notifications {\r\n    \r\n    private logger: Logger = Logger.get('Notifications');\r\n\r\n    acknowledged: boolean = true;\r\n    important: boolean = false;\r\n    notifications: Array<Notification> = [];\r\n    newNotifications: Array<Notification> = [];\r\n    currentToast: Toast;\r\n\r\n    constructor(private toastController: ToastController, private currencyFormatter: CurrencyFormatter) {\r\n\r\n    }\r\n\r\n    formatCurrency = (value: any): string => {\r\n        return this.currencyFormatter.format(value);\r\n    }\r\n\r\n    clear(number? : number) {\r\n        if (!number) {\r\n            this.newNotifications.length = 0;\r\n        } else {\r\n            this.newNotifications.splice(0, number);\r\n            this.newNotifications.forEach(n => {\r\n                n.acknowledged = true;\r\n            });\r\n        }\r\n        this.updateImportantFlag();\r\n        this.updateAcknowledgedFlag();\r\n    }\r\n\r\n    markRead(number : number = Number.MAX_SAFE_INTEGER) {\r\n        let count = 0;\r\n        this.notifications.some((n) => {\r\n            n.read = true;\r\n            n.acknowledged = true;\r\n            return ++count >= number;\r\n        })\r\n        this.updateImportantFlag();\r\n        this.updateAcknowledgedFlag();\r\n    }\r\n\r\n\r\n    show(notification: Notification) {\r\n\r\n        if (notification.popup === undefined) notification.popup = true;\r\n\r\n        notification.acknowledged = notification.silent;\r\n        \r\n        this.logger.debug(\"Notification: \" + notification.message);\r\n\r\n        this.notifications.unshift(notification);\r\n\r\n        if (!notification.important) {\r\n            let index = this.newNotifications.findIndex(n => !n.important);\r\n            if (index != -1) {\r\n                this.newNotifications.splice(index, 0, notification);\r\n            } else {\r\n                this.newNotifications.unshift(notification);\r\n            }\r\n        } else {\r\n            this.newNotifications.unshift(notification);\r\n        }\r\n\r\n        this.runPopupQueue();\r\n\r\n        this.updateImportantFlag();\r\n        this.updateAcknowledgedFlag();\r\n\r\n    }\r\n\r\n    remove(criteria: {category: string}) {\r\n        // TODO: Remove and update status, etc\r\n        let index = this.newNotifications.findIndex(n => n.category === criteria.category);\r\n        if (index != -1) this.newNotifications.splice(index, 1);\r\n        let index2 = this.notifications.findIndex(n => n.category === criteria.category);\r\n        if (index2 != -1) this.notifications.splice(index2, 1);\r\n        \r\n\r\n        this.updateImportantFlag();\r\n        this.updateAcknowledgedFlag();\r\n    }\r\n\r\n    runPopupQueue() {\r\n\r\n        // TODO: Combine popups for a group and put a delay on running the queue (to allow any processes to generate multiple notifications that can be combined)\r\n\r\n        if (this.currentToast) return;\r\n\r\n        this.notifications.some((notification) => {\r\n            if (notification.popup && !notification.popupDone) {\r\n                this.currentToast = this.toastController.create({message: (notification.important ? ' ! ' : '') + notification.message, duration: 5000, showCloseButton: true, closeButtonText: 'X'});\r\n\r\n                this.currentToast.onDidDismiss(() => {\r\n                    this.currentToast = null;\r\n                    this.runPopupQueue();\r\n                });\r\n\r\n                this.currentToast.present();\r\n                notification.popupDone = true;\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n       });\r\n\r\n    }\r\n\r\n    updateAcknowledgedFlag() {\r\n        this.acknowledged = true;\r\n        this.newNotifications.some((n) => {\r\n            this.acknowledged = n.acknowledged;\r\n            return !n.acknowledged;\r\n        });\r\n    }\r\n\r\n\r\n    updateImportantFlag() {\r\n        this.important = false;\r\n        this.newNotifications.some((n) => {\r\n            this.important = n.important && !n.acknowledged;\r\n            return n.important;\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/notifications.ts","import {Record} from '../../db/record';\r\nimport { Big } from \"big.js\";\r\n\r\nexport class Transaction extends Record<Transaction> {\r\n    \r\n    public id: number;\r\n    public description: string;\r\n    public date: string;\r\n    public amount: Big;\r\n    public categoryId: number;\r\n    public accountId?: number;\r\n    public status?: 'realised' | 'anticipated';\r\n\r\n    tableName(): string {\r\n        return 'Transaction';\r\n    }\r\n\r\n    initTable(table: LokiCollection<Transaction>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n    \r\n    tableCreationOptions(): any {\r\n        return {'indices': ['categoryId']};\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/transaction.ts","import {TransactionProcessor} from './transaction-processor';\r\nimport {Record} from './record';\r\n\r\nexport abstract class DbTransaction {\r\n    public id: number;\r\n    public applied: boolean;\r\n    public deleted: boolean;\r\n    public typeId: string;\r\n    public x: any = {};\r\n    public records: Array<Record<any>>;\r\n    \r\n    constructor() {\r\n        this.typeId = this.getTypeId();\r\n    }\r\n    \r\n    abstract apply(tp: TransactionProcessor);\r\n    abstract update(tp: TransactionProcessor, original: DbTransaction);\r\n    abstract undo(tp: TransactionProcessor);\r\n    abstract getTypeId(): string;\r\n\r\n    abstract toHumanisedString(env: TransactionStringEnv): string;\r\n    \r\n    /**\r\n     * Objects are serialized and deserialised using JSON.stringify/parse. Parsed values are passed through this function to restore any type informmation.\r\n     */\r\n    abstract deserialize(field: string, value: any): any;\r\n}\r\n\r\nexport class TransactionStringEnv {\r\n    action: 'apply' | 'update' | 'undo';\r\n    currencyFormatter: (value: any) => string;\r\n    originalTransaction?: DbTransaction;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction.ts","import {Record} from '../../db/record';\r\nimport {Processor} from '../../engine/processor';\r\nimport { Big } from \"big.js\";\r\n\r\nexport class Category extends Record<Category> {\r\n    \r\n    public id: number;\r\n    public name: string;\r\n    public balance: Big;\r\n    public engine: {'processors': Processor[]} = {'processors': new Array<Processor>()};\r\n    \r\n    tableName(): string {\r\n        return 'Category';\r\n    }\r\n\r\n    initTable(table: LokiCollection<Category>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/category.ts","import {Record} from '../../db/record';\r\nimport {Processor} from '../../engine/processor';\r\nimport { Big } from \"big.js\";\r\n\r\nexport class Account extends Record<Account> {\r\n    \r\n    public id: number;\r\n    public name: string;\r\n    public balance: Big;\r\n    public accountType: 'Bank' | 'Cash';\r\n    public initialBalance: Big;\r\n    public bankLinkId: number;\r\n    public bankLinkConfiguration: any;\r\n    \r\n    processors: Processor[] = [];\r\n    \r\n    tableName(): string {\r\n        return 'Account';\r\n    }\r\n    \r\n    initTable(table: LokiCollection<Account>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/account.ts","import {Record} from '../../db/record';\r\nimport { Big } from \"big.js\";\r\n\r\nexport class BankTransaction extends Record<BankTransaction> {\r\n    \r\n    public id: number;\r\n    public description: string;\r\n    public date: string;\r\n    public amount: Big;\r\n    public balance: Big;\r\n    public balanceSequence: number;\r\n    public status: 'recent' | 'authorised' | 'processed';\r\n    public accountId: number;\r\n    public flagRemoved: boolean;\r\n\r\n    tableName(): string {\r\n        return 'BankTransaction';\r\n    }\r\n\r\n    initTable(table: LokiCollection<BankTransaction>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n    \r\n    tableCreationOptions(): any {\r\n        //return {'indices': ['categoryId']};\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/bank-transaction.ts","import {Injectable} from '@angular/core';\r\nimport {Http} from '@angular/http';\r\nimport {Dbms} from '../db/dbms';\r\nimport {Db} from '../db/db';\r\nimport {DbTransaction} from '../db/transaction';\r\nimport {TransactionSerializer} from '../db/transaction-serializer';\r\nimport stringify from 'json-stable-stringify';\r\nimport {Logger} from './logger';\r\nimport {Configuration} from './configuration-service';\r\n\r\n/**\r\n* The Repl service listens to the database transactions, add/edit/delete and generates replication records. It then \"syncs\" those. It also fetched remote replication records and creates transactions out of them for the database to process...\r\n**/\r\n@Injectable()\r\nexport class Replication {\r\n    private logger: Logger = Logger.get('Replication');\r\n\r\n    syncDelay: number = 1000; // 1 second\r\n    delayTimeout: number;\r\n    pollInterval: number = 15 * 60 * 1000; // 15 minutes\r\n    errorRetryInterval: number = 10 * 1000; // 10 seconds\r\n    syncing: { running?: boolean; q?: Promise<any>; nextTimeout?: number; lastSync?: number; lastResultSuccess?: boolean; lastError?: SyncErrorData; consecutiveErrorCount?: number; } = {}; // Holds the latest / current syncing info\r\n    queues = {};\r\n    heads = {};\r\n    incrementingReplId: number = 100;\r\n    processingTransaction: boolean;\r\n\r\n    constructor(private dbms: Dbms, private http: Http, private transactionSerializer: TransactionSerializer, private configuration: Configuration) {\r\n        \r\n        // TODO: Move the syncing promise to an observable, so we can just \"subscribe\" ?\r\n        \r\n        this.syncing.running = false; // Is there currently a sync running?\r\n        this.syncing.q = null; // The latest syncing call\r\n        this.syncing.nextTimeout = null;\r\n        this.syncing.lastSync = null;\r\n        this.syncing.lastResultSuccess = true;\r\n        this.syncing.lastError = null;\r\n        this.syncing.consecutiveErrorCount = 0;\r\n\r\n    }\r\n    \r\n    init() {\r\n        \r\n        this.dbms.dbs.forEach((db) => {\r\n            if (this.enabled(db)) {\r\n                this.processDb(db);\r\n                this.monitorDb(db);\r\n            }            \r\n        });\r\n\r\n\r\n        this.scheduleSync(this.syncDelay);\r\n\r\n    }\r\n\r\n    enable(db: Db, deviceReplId: string) {\r\n        db.localSetting('repl', '1');\r\n        db.transactionIdLocalGen(deviceReplId);\r\n        this.processDb(db);\r\n        this.monitorDb(db);\r\n        this.scheduleSync(this.syncDelay);\r\n    }\r\n\r\n    disable(db: Db) {\r\n        let deviceReplId = this.enabled(db);\r\n        db.localSetting('repl', '');\r\n\r\n        let dbDeviceReplId = db.id + '_' + deviceReplId;\r\n        delete this.heads[dbDeviceReplId];\r\n        delete this.queues[db.id];\r\n    }\r\n\r\n    enabled(db: Db): any {\r\n        return db.localSetting('repl') === '1' ? db.transactionIdLocalGen() + '' : false;\r\n    }\r\n\r\n    monitorDb(db: Db) {\r\n        db.addEventListener((dbEvent) => {\r\n            if (this.processingTransaction) return;\r\n            if (dbEvent.eventName === 'transaction-applied' || dbEvent.eventName === 'transaction-undone') {\r\n                this.processTransaction(db, dbEvent.data.transaction);\r\n            }\r\n            if (dbEvent.eventName === 'db-activated') {\r\n                // Add a head just incase initalised without any transactions (which happens on linking)\r\n                this.updateHead(db, { 'id': 0, 'deviceReplId': this.enabled(db) });\r\n                this.scheduleSync(10);\r\n            }\r\n            if (dbEvent.eventName === 'db-deleted') {\r\n                this.disable(db);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    processDb(db: Db) {\r\n\r\n        this.updateHead(db, { 'id': 0, 'deviceReplId': this.enabled(db) });\r\n        \r\n        let sortedDbTransactions = db.sortedTransactions.data();\r\n        for (let i = 0; i < sortedDbTransactions.length; i++) {\r\n            let t = sortedDbTransactions[i];\r\n            this.logger.debug('Initial transaction iterating: ', () => JSON.stringify(t));\r\n            this.processTransaction(db, t);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    * Process the transaction for replication (generate replication records as needed) and add them to the queue\r\n    * The queue is watched and \"pushed\" after a short timeout so that a push is batched\r\n    **/\r\n    processTransaction(db: Db, transaction: DbTransaction) {\r\n        if (!this.enabled(db)) return;\r\n\r\n        this.logger.debug('- Start Processing Transaction - ', () =>  JSON.stringify(transaction));\r\n\r\n        let transactionCopy = this.transactionSerializer.cloneTransaction(transaction);\r\n        delete transactionCopy.x.repl;\r\n\r\n        if (!transaction.x.repl) transaction.x.repl = [];\r\n        let checksum = this.checksumObject(transactionCopy);\r\n        let noReplRecords = transaction.x.repl.length === 0;\r\n        let checksumMismatch = transaction.x.repl.length > 0 && transaction.x.repl[0].checksum !== checksum;\r\n        let newReplRecord = noReplRecords || checksumMismatch;\r\n\r\n\r\n        // If none, or if they are older (different?), etc, then create a new one\r\n        if (newReplRecord) {\r\n            if (checksumMismatch) this.logger.debug('New Repl Record due to checksum mismatch - ' + transaction.x.repl[0].checksum + ': ' + checksum);\r\n\r\n            let r = new Repl();\r\n            let headId = transaction.x.repl.length ? transaction.x.repl[0].id : 0;\r\n            let nextId = this.nextReplId();\r\n            if (nextId < headId) {\r\n                nextId = headId + 1; // Make sure the one just generated is the latest for that transaction in the case of clock skew. Assume this will happen rarely and device clocks are fairly in-sync. Otherwise will need a better synchronisation system. Perhaps synced on the replication server would be the simplest. This current method also allows for a slight chance of duplicate replId in the future, but very slim, so not going to worry about it.\r\n            }\r\n            r.id = nextId;\r\n            r.timestamp = new Date().getTime();\r\n            r.deviceReplId = this.enabled(db);\r\n            r.synced = 0;\r\n            r.checksum = checksum;\r\n            // r.rollingChecksum = r.checksum + dbDeviceHeadChecksum;\r\n            r.transaction = transactionCopy;\r\n\r\n            transaction.x.repl.splice(0, 0, r);\r\n            try {\r\n                this.processingTransaction = true;\r\n                db.saveTransaction(transaction);\r\n            } finally {\r\n                this.processingTransaction = false;\r\n            }\r\n            this.logger.debug('inserted repl record:', () => JSON.stringify(transaction));\r\n        } \r\n\r\n        for (let i = 0; i < transaction.x.repl.length; i++) {\r\n            let record = transaction.x.repl[i];\r\n            if (record.synced) this.updateHead(db, record);\r\n            if (!record.synced) this.queueRepl(db.id, record, transactionCopy);\r\n        }\r\n\r\n        this.logger.debug('- End Processing Transaction - ', () => JSON.stringify(transaction));\r\n\r\n\r\n    };\r\n\r\n    queueRepl (dbId: string, repl: Repl, transaction: DbTransaction) {\r\n        // Get the queue for the dbId (or create it)\r\n        if (!this.queues[dbId]) {\r\n            this.queues[dbId] = new Map();\r\n        }\r\n\r\n        let queue = this.queues[dbId];\r\n        queue.set(repl.id + '_' + repl.deviceReplId, repl);\r\n\r\n        this.logger.debug(() => 'queueRepl: ' + repl.id + '_' + repl.deviceReplId + ': ' + JSON.stringify(repl) + ': ' + JSON.stringify(queue.get(repl.id + '_' + repl.deviceReplId)));\r\n\r\n        if (this.delayTimeout) {\r\n            clearTimeout(this.delayTimeout);\r\n            this.delayTimeout = 0;\r\n        }\r\n        this.delayTimeout = setTimeout(() => { this.safeSync(); }, this.syncDelay);\r\n    };\r\n\r\n\r\n    updateHead(db: Db, repl) {\r\n        let dbDeviceReplId = db.id + '_' + repl.deviceReplId;\r\n        this.logger.debug(() => 'Check Repl Head: ' + dbDeviceReplId + ': ' + JSON.stringify({ 'replId': repl.id, 'deviceReplId': repl.deviceReplId, 'dbId': db.id }));\r\n\r\n        if (!this.heads[dbDeviceReplId] || repl.id > this.heads[dbDeviceReplId].replId) {\r\n\r\n            this.heads[dbDeviceReplId] = { 'replId': repl.id, 'deviceReplId': repl.deviceReplId, 'dbId': db.id }; // TODO: Checksum for rolling checksum?\r\n            this.logger.debug('Update Repl Head: ' + dbDeviceReplId + ': ', () =>  JSON.stringify(this.heads[dbDeviceReplId]));\r\n        }\r\n    };\r\n\r\n\r\n    nextReplId(): number {\r\n        this.incrementingReplId++;\r\n        if (this.incrementingReplId > 999) this.incrementingReplId = 100;\r\n        return (new Date().getTime() * 1000) + this.incrementingReplId;\r\n    }\r\n\r\n    checksumObject(o): number {\r\n        let i;\r\n        let chk = 0x12345678;\r\n        let s = stringify(o);\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            chk += (s.charCodeAt(i) * (i + 1));\r\n        }\r\n\r\n        return chk;\r\n    }\r\n\r\n\r\n    checksum(s): number {\r\n        let i;\r\n        let chk = 0x12345678;\r\n\r\n        for (i = 0; i < s.length; i++) {\r\n            chk += (s.charCodeAt(i) * (i + 1));\r\n        }\r\n\r\n        return chk;\r\n    }\r\n\r\n    scheduleSync(delay?: number) {\r\n\r\n        if (this.syncing.nextTimeout) {\r\n            clearTimeout(this.syncing.nextTimeout);\r\n            this.syncing.nextTimeout = null;\r\n        }\r\n\r\n\r\n        if (!delay) {\r\n            if (this.syncing.lastResultSuccess) {\r\n                delay = this.pollInterval;\r\n            } else {\r\n                delay = this.errorRetryInterval * this.syncing.consecutiveErrorCount;\r\n                if (this.errorRetryInterval > this.pollInterval) delay = this.pollInterval;\r\n            }\r\n        }\r\n\r\n        this.syncing.nextTimeout = setTimeout(() => { this.safeSync(); }, delay);\r\n    }\r\n\r\n    /** SafeSync will return success unless there is an internal error */\r\n\r\n    sync(safe: boolean = false): Promise<any> {\r\n        this.logger.debug('SYNC');\r\n\r\n\r\n        if (this.syncing.running) return this.syncing.q;\r\n\r\n        this.syncing.running = true;\r\n        this.syncing.lastSync = new Date().getTime();\r\n        if (this.syncing.nextTimeout) {\r\n            clearTimeout(this.syncing.nextTimeout);\r\n            this.syncing.nextTimeout = null;\r\n        }\r\n        let syncing = this.syncing;\r\n\r\n        this.syncing.q = new Promise((success, fail) => {\r\n\r\n            this.doSync(() => {\r\n                syncing.running = false;\r\n                this.logger.debug('SYNC: Success');\r\n                syncing.lastResultSuccess = true;\r\n                syncing.consecutiveErrorCount = 0;\r\n                this.scheduleSync();\r\n                success();\r\n            }, (error) => {\r\n                syncing.running = false;\r\n                syncing.lastResultSuccess = false;\r\n                if (syncing.lastError && ((syncing.lastError.connectionIssue && !error.connectionIssue) || (syncing.lastError.serverIssue && !error.serverIssue) || (syncing.lastError.internalIssue && !error.internalIssue))) syncing.consecutiveErrorCount = 0;\r\n                syncing.lastError = error;\r\n                syncing.consecutiveErrorCount++;\r\n                this.logger.debug('SYNC: Fail - ', syncing);\r\n                this.scheduleSync();\r\n                if (!safe || error.internalIssue) {\r\n                    fail(error);\r\n                } else {\r\n                    success();\r\n                }\r\n            });\r\n        });\r\n        return this.syncing.q;\r\n\r\n    }\r\n    /** SafeSync will return success unless there is an internal error */\r\n    safeSync(): Promise<any> {\r\n        return this.sync(true);\r\n    }\r\n\r\n    private doSync(success, error: (data: SyncErrorData) => any) {\r\n        let replData: any = {};\r\n\r\n        let totalPushCount = 0;\r\n\r\n        Object.keys(this.queues).forEach((dbId) => {\r\n            let replMap = this.queues[dbId];\r\n            if (replMap.length !== 0) {\r\n                if (!replData.push) replData.push = [];\r\n                let found = false;\r\n                for (var i = 0; i < replData.push.length; i++) { if (replData.push[i].dbId === dbId) { found = true; break; } }\r\n                let pushDb = found ? replData.push[i] : replData.push[replData.push.push({ 'dbId': dbId, 'repl': [] }) - 1];\r\n\r\n                replMap.forEach((r, key) => {\r\n                    let replDataRecord = { 'deviceReplId': r.deviceReplId, 'replData': stringify({ transaction: r.transaction, 'timestamp': r.timestamp, 'checksum': r.checksum }), 'id': r.id };\r\n                    pushDb.repl.push(replDataRecord);\r\n                    totalPushCount++;\r\n                });\r\n\r\n            }\r\n        });\r\n\r\n        Object.keys(this.heads).forEach((dbDeviceReplId) => {\r\n            let r = this.heads[dbDeviceReplId];\r\n            let headRecord = { 'replId': r.replId, 'deviceReplId': r.deviceReplId, 'dbId': r.dbId };\r\n            if (!replData.fetch) replData.fetch = [];\r\n            replData.fetch.push(headRecord);\r\n        });\r\n\r\n        this.logger.debug(() => replData);\r\n\r\n        if (!replData.push && !replData.fetch) {\r\n            success(); // no-op really\r\n            return;\r\n        }\r\n\r\n        if (totalPushCount) {\r\n            this.logger.info('Pushing ' + totalPushCount + ' Records');\r\n        }\r\n\r\n        this.http.post('https://api.freebudgetapp.com/sync', JSON.stringify(replData))\r\n        .map(res => res.json())\r\n        .subscribe((response) => {\r\n            this.logger.debug(() => response);\r\n            try {\r\n                if (this.configuration.temporary.simulateSyncError) throw new Error(\"Simulated Sync Error\");\r\n\r\n                // Process the data I got\r\n                if (response.processed) {\r\n                    let totalIncomingProcessed = 0;\r\n                    response.processed.forEach((dbProcessed) => {\r\n                        let dbId = dbProcessed.dbId;\r\n                        let db = this.dbms.getDb(dbId);\r\n                        let replMap = this.queues[dbId];\r\n                        if (dbProcessed && dbProcessed.processed) {\r\n                            dbProcessed.processed.forEach((replProcessed) => {\r\n                                if (replProcessed.success ) {\r\n                                    totalIncomingProcessed++;\r\n                                    if (replProcessed.success !== true) {\r\n                                        this.logger.error('Replication success status: ' + replProcessed.success);\r\n                                    }\r\n                                    let key = replProcessed.replId + '_' + replProcessed.deviceReplId;\r\n                                    let replRecord = replMap.get(key);\r\n                                    replRecord.synced = new Date().getTime();\r\n                                    let originalTransaction = db.getTransaction(replRecord.transaction.id);\r\n                                    try {\r\n                                        this.processingTransaction = true;\r\n                                        db.saveTransaction(originalTransaction);\r\n                                    } finally {\r\n                                        this.processingTransaction = false;\r\n                                    }\r\n                                    replMap.delete(key);\r\n                                    this.updateHead(db, replRecord);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                    if (totalIncomingProcessed > 0 || totalPushCount !== totalIncomingProcessed) {\r\n                        this.logger.info('Server responded ' + totalIncomingProcessed + ' records successfully processed');\r\n                    }\r\n                }\r\n\r\n            } catch (e) {\r\n                let errorData = new SyncErrorData();\r\n                errorData.error = e;\r\n                errorData.message = 'Internal Error in Handling Sync Processed Response';\r\n                errorData.internalIssue = true;\r\n                error(errorData);\r\n                return;\r\n            }\r\n\r\n            if (response.repl) {\r\n                this.logger.info('Processing ' + response.repl.length + ' Incoming Repl Records');\r\n\r\n                let processedCount = 0;\r\n                let skippedCount = 0;\r\n                let errorCalled = false;\r\n\r\n                response.repl.forEach((replRecord) => {\r\n\r\n                    try {\r\n\r\n                        replRecord.replId = parseInt(replRecord.replId);\r\n                        let dbId = replRecord.dbId;\r\n                        let db = this.dbms.getDb(dbId);\r\n                        \r\n                        if (db.isActivating()) {\r\n                            return false;\r\n                        }\r\n                        // dbId, replId, deviceReplId, replData\r\n                        // replData -> transaction, timestamp, checksum\r\n                        this.logger.debug('Processing incoming replRecord - ', () =>  JSON.stringify(replRecord));\r\n\r\n                        // Get the transaction by id from the db\r\n                        let replData = JSON.parse(replRecord.replData);\r\n                        let transaction = db.getTransaction(replData.transaction.id);\r\n                        let isExisting = transaction && true;\r\n                        this.logger.debug('Is Existing: ' + isExisting);\r\n                        this.logger.debug(() => JSON.stringify(transaction));\r\n                        if (!transaction) transaction = this.transactionSerializer.cloneTransaction(replData.transaction);\r\n                        if (!transaction.x.repl) transaction.x.repl = [];\r\n                        if (transaction.x.repl.some((e) => { \r\n                                this.logger.debug('Check: ' + e.id + ' === ' + replRecord.replId + ' && ' + e.deviceReplId + ' === ' + replRecord.deviceReplId);\r\n                                return e.id === replRecord.replId && e.deviceReplId === replRecord.deviceReplId; })) {\r\n                            // We've already got it... do something ? Like a checksum?\r\n                            // TODO: Can probably just drop it here, it is already in sync\r\n\r\n                            // TODO: What if it isn't the head repl record ? - that is ok, they should be sorted anyway....\r\n                            // TODO: Check all the checksums just to make sure we are good here.. foreach... this.checksumObject(transaction);\r\n                            \r\n                            this.logger.info('Repl record already exists for transaction. Skipping.', replRecord);\r\n                            skippedCount++;\r\n                            return true;\r\n                        } else {\r\n                            this.logger.debug('Adding repl record to transaction');\r\n\r\n                            // Reconstruct the repl record\r\n                            let r = new Repl();\r\n                            r.id = replRecord.replId;\r\n                            r.timestamp = replData.timestamp;\r\n                            r.deviceReplId = replRecord.deviceReplId;\r\n                            r.synced = new Date().getTime();\r\n                            r.checksum = replData.checksum;\r\n                            // this.checksumObject(transactionCopy); // TODO: Check this\r\n                            // r.rollingChecksum = r.checksum + dbDeviceHeadChecksum;\r\n                            r.transaction = replData.transaction;\r\n                            transaction.x.repl.splice(0, 0, r);\r\n\r\n                        }\r\n\r\n                        transaction.x.repl.sort((a, b) => {\r\n                            return b.id - a.id === 0 ? a.deviceReplId - b.deviceReplId : b.id - a.id;\r\n                        });\r\n\r\n                        this.logger.debug('Transaction after sorting - ', () =>  JSON.stringify(transaction));\r\n\r\n\r\n                        if (isExisting) {\r\n                            // Were copying fields from the updated transaction to the database attached one\r\n                            this.logger.debug('Updating transaction record in database');\r\n\r\n                            let updatedTransaction = transaction.x.repl[0].transaction;\r\n                            let repl = transaction.x.repl;\r\n\r\n                            Object.keys(transaction).forEach((key) => {\r\n                                if (key !== '$loki' && key !== 'meta' && key !== 'applied') delete transaction[key];\r\n                            });\r\n                            Object.keys(updatedTransaction).forEach((key) => {\r\n                                if (key !== '$loki' && key !== 'meta' && key !== 'applied')\r\n                                    transaction[key] = transaction.deserialize(key, JSON.parse(JSON.stringify(updatedTransaction[key])));\r\n                            });\r\n \r\n                            transaction.x.repl = repl;\r\n                        }\r\n\r\n                        this.logger.debug('Processing transaction record - ', () => JSON.stringify(transaction));\r\n\r\n                        try {\r\n                            this.processingTransaction = true;\r\n                            db.applyTransaction(transaction);\r\n                        } finally {\r\n                            this.processingTransaction = false;\r\n                        }\r\n\r\n                        this.updateHead(db, transaction.x.repl[0]);\r\n\r\n                        this.logger.debug('- End Processing incoming replRecord');\r\n                        processedCount++;\r\n\r\n                        return true; // Continue;\r\n                    } catch (e) {\r\n                        let errorData = new SyncErrorData();\r\n                        this.logger.info(\"Dump of internal error in repl\", e);\r\n                        errorData.error = e;\r\n                        errorData.message = 'Internal Error in Processing New Repl Record During Sync: ' + JSON.stringify(replRecord);\r\n                        errorData.internalIssue = true;\r\n                        error(errorData);\r\n                        errorCalled = true;\r\n                        return false; // Break;\r\n                    }\r\n\r\n\r\n                });\r\n\r\n                if (processedCount) this.logger.info('Processed ' + processedCount + ' Incoming Repl Records');\r\n                if (skippedCount) {\r\n                    this.logger.info('Skipped ' + skippedCount + ' Incoming Repl Records');\r\n                }\r\n\r\n                if (errorCalled) {\r\n                    return;\r\n                }\r\n\r\n            }\r\n\r\n\r\n            success();\r\n        }, (response) => {\r\n            let errorData = new SyncErrorData();\r\n            errorData.message = 'Server Error in Processing Sync Response: ' + response;\r\n            errorData.serverIssue = true;\r\n            error(errorData);\r\n        });\r\n    }\r\n    \r\n    \r\n}\r\n\r\nexport class Repl {\r\n    id: number;\r\n    timestamp: number;\r\n    deviceReplId: string;\r\n    synced: any;\r\n    checksum: number;\r\n    transaction: DbTransaction;\r\n\r\n}\r\n\r\nexport class SyncErrorData {\r\n    error: Error;\r\n    message: String;\r\n    connectionIssue: boolean = false;\r\n    internalIssue: boolean = false;\r\n    serverIssue: boolean = false;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/replication-service.ts","import {DbTransaction} from './transaction';\r\n\r\nexport abstract class Record<T> {\r\n    /**\r\n     * For the transaction to record map\r\n     */\r\n    public transactions: Array<DbTransaction>;\r\n\r\n    /**\r\n     * Place to store cached values for external processors, purely for performance and ease of lookup.\r\n     * This data could be found elsewhere (directly or by calculation) and shouldn't be used within the records or transactions themselves.\r\n     * Cheeky Note: I use this also for testing ideas so I can keep eXperimental data separate.\r\n     */\r\n    public x: any = {}; \r\n\r\n    tableCreationOptions(): any {};\r\n    abstract tableName(): string;\r\n    abstract initTable(table: LokiCollection<T>);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/record.ts","import {Injectable} from '@angular/core';\r\nimport {DbPersistenceProvider} from './db-persistence-provider';\r\nimport {LocalStoragePersistenceProvider} from './local-storage-persistence-provider';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport {SqlStoragePersistenceProvider} from './sql-storage-persistence-provider';\r\nimport {SQLite} from '@ionic-native/sqlite';\r\nimport {Platform} from 'ionic-angular';\r\nimport {Device} from '@ionic-native/device';\r\nimport { Utils } from \"../services/utils\";\r\nimport { NoPersistenceProvider } from \"./no-persistence-provider\";\r\n\r\n@Injectable()\r\nexport class PersistenceProviderManager  {\r\n\r\n    private persistenceProvider: DbPersistenceProvider;\r\n \r\n    constructor(private transactionSerializer: TransactionSerializer, private platform: Platform, private device: Device, private sqlite: SQLite) {\r\n    }\r\n\r\n    provide(): DbPersistenceProvider {\r\n        if (this.persistenceProvider == null) {\r\n            if (Utils.getQueryStringValue('demo')) {\r\n                this.persistenceProvider = new NoPersistenceProvider(this.transactionSerializer);\r\n            } else if (this.platform.is('cordova') && this.device.platform !== 'browser') {\r\n                this.persistenceProvider = new SqlStoragePersistenceProvider('A', this.transactionSerializer, this.sqlite);\r\n            } else {\r\n                this.persistenceProvider = new LocalStoragePersistenceProvider('A', this.transactionSerializer);\r\n            }\r\n        }\r\n\r\n        return this.persistenceProvider;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/persistence-provider-manager.ts","import {Injectable} from '@angular/core';\r\nimport {DbTransaction} from './transaction';\r\nimport {Logger} from '../services/logger';\r\n\r\n@Injectable()\r\nexport class TransactionSerializer {\r\n \r\n    private logger: Logger = Logger.get('TransactionSerializer');\r\n\r\n    private transactionTypeIdMap: Map<string, any> = new Map<string, any>();\r\n\r\n    registerType<T extends DbTransaction>(type: {new(): T}) {\r\n        this.transactionTypeIdMap.set(new type().getTypeId(), type);\r\n        this.logger.info('Registered Transaction Type ' + new type().getTypeId());\r\n    }\r\n    \r\n    newTransaction<T extends DbTransaction>(typeId: string, jsonObject?: Object): T {\r\n        var transactionType = this.transactionTypeIdMap.get(typeId);\r\n        if (!transactionType) {\r\n            this.logger.error({'msg': 'No transaction type available for ' + typeId, 'obj': jsonObject});\r\n        }\r\n        var t = <DbTransaction> new transactionType();\r\n        if (jsonObject) {\r\n            for (var key in jsonObject) {\r\n                t[key] = t.deserialize(key, JSON.parse(JSON.stringify(jsonObject[key])));\r\n            }\r\n        }\r\n        return <any> t;\r\n    }\r\n    \r\n    cloneTransaction<T extends DbTransaction>(transaction: T): T {\r\n        let recordsTemp = transaction.records;\r\n        transaction.records = null;        \r\n        let dataCopy = <DbTransaction> JSON.parse(JSON.stringify(transaction)); // Deep copy this so we aren't accidentally copying any references\r\n        transaction.records = recordsTemp;\r\n\r\n        delete (<any>dataCopy).$loki;\r\n        delete (<any>dataCopy).meta;\r\n        delete dataCopy.applied;\r\n        delete dataCopy.records;\r\n\r\n        return this.newTransaction<T>(transaction.typeId, dataCopy);\r\n    }\r\n    \r\n    toJson(transaction: DbTransaction): string {\r\n        return JSON.stringify(transaction);\r\n    }\r\n    \r\n    fromJson<T extends DbTransaction>(jsonString: string): T {\r\n        var obj = JSON.parse(jsonString);\r\n        return this.newTransaction<T>(obj.typeId, obj);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction-serializer.ts","import {Injectable} from '@angular/core';\r\nimport {StandardHostInterface} from './standard-host-interface';\r\nimport {TransactionSync} from './transaction-sync';\r\nimport {BankProviderRegistry} from './bank-provider-registry';\r\nimport {Account} from '../data/records/account';\r\nimport {Replication} from '../services/replication-service';\r\nimport {Engine} from '../engine/engine';\r\nimport { BankLink } from \"../data/records/bank-link\";\r\nimport { Configuration, SecureAccessor } from \"../services/configuration-service\";\r\nimport { Dbms } from \"../db/dbms\";\r\nimport { EngineFactory } from \"../engine/engine-factory\";\r\nimport { InAppBrowserInterfaceFactory } from \"./in-app-browser-interface-factory\";\r\nimport { ProviderRequiresBrowser, BrowserInterface } from \"./browser-interface\";\r\nimport { ProviderSchema, ProviderInterface } from \"./provider-interface\";\r\nimport { Logger, LoggerAppender } from \"../services/logger\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscription } from \"rxjs/Subscription\";\r\nimport { Observer } from \"rxjs/Observer\";\r\nimport \"rxjs/add/operator/filter\";\r\nimport \"rxjs/add/operator/share\";\r\nimport { BankLinkLocal } from \"./bank-link-local\";\r\nimport { Utils } from \"../services/utils\";\r\nimport { BankSyncMonitor } from \"./bank-sync-monitor\";\r\n\r\n\r\n@Injectable()\r\nexport class BankSync {\r\n\r\n    activeSyncs: BankSyncMonitor[] = [];\r\n\r\n\r\n    constructor(private standardHostInterface: StandardHostInterface, private transactionSync: TransactionSync, private bankProviderRegistry: BankProviderRegistry, private replication: Replication, private configuration: Configuration, private dbms: Dbms, private engineFactory: EngineFactory, private inAppBrowserInterfaceFactory: InAppBrowserInterfaceFactory, private bankLinkLocal: BankLinkLocal) {\r\n\r\n    }\r\n\r\n    sync(bankLink: BankLink, engine: Engine, accounts?: Account[], bankSyncMonitor = new BankSyncMonitor(), backgroundMode: boolean = false): BankSyncMonitor {        \r\n\r\n        if (bankSyncMonitor.logger == null) {\r\n            let logger = Logger.get(\"BankSync.BankLink.\" + bankLink.name.split(/[^0-9A-Za-z_]/).join());\r\n            logger.config.level = Logger.DEBUG;\r\n            logger.config.addAppender(new class implements LoggerAppender {\r\n                log(level: number, data: any[]) {\r\n                    if (data != null && data.length == 1) bankSyncMonitor.log.push(Logger.stringValue(data[0]));\r\n                    else bankSyncMonitor.log.push(Logger.stringValue(data));\r\n                }\r\n            });\r\n\r\n            bankSyncMonitor.logger = logger;\r\n        }\r\n\r\n        bankSyncMonitor.backgroundMode = backgroundMode;\r\n        bankSyncMonitor.bankLink = bankLink;\r\n        bankSyncMonitor.engine = engine;\r\n\r\n        if (!accounts) accounts = engine.getAccounts().filter(account => account.bankLinkId === bankLink.id);\r\n        if (accounts.length === 0) {\r\n            bankSyncMonitor.error(\"No Accounts Selected for Sync\");\r\n            return bankSyncMonitor;\r\n        }\r\n\r\n        bankSyncMonitor.accounts = accounts;\r\n        \r\n        // TODO: Get connected BankLinks in other budgets - this will be run off some kind of locally stored link map of bankLinks\r\n        //this.dbms.dbs.filter(db => db.isActive()).forEach(db => {\r\n        //})        \r\n        \r\n        let provider = this.bankProviderRegistry.newProvider(bankLink.provider);\r\n        let providerSchema = provider.getSchema();\r\n        bankSyncMonitor.provider = provider;\r\n        bankSyncMonitor.providerSchema = providerSchema;\r\n\r\n        let secureAccessor = this.configuration.secureAccessor(\"banklink_\" + bankLink.uuid);\r\n        provider.configure(bankLink, secureAccessor, this.standardHostInterface);\r\n\r\n        if (providerSchema.singleInstancePerBankLink) {\r\n            if (this.activeSyncs.find(m => m.bankLink.uuid == bankLink.uuid)) {\r\n                bankSyncMonitor.error(\"Bank Link \" + bankLink.name + \" is already active\");\r\n                return bankSyncMonitor;\r\n            }\r\n        }\r\n\r\n        this.activeSyncs.push(bankSyncMonitor);\r\n        bankSyncMonitor.startTime = Date.now();\r\n        bankSyncMonitor.running = true;\r\n\r\n        this.doSync(bankSyncMonitor);\r\n\r\n        return bankSyncMonitor;\r\n    }\r\n\r\n    private archiveSync(bankSyncMonitor: BankSyncMonitor) {\r\n        let index = this.activeSyncs.indexOf(bankSyncMonitor);\r\n        if (index == -1) return; // Already archived, or not current anyway...\r\n        this.activeSyncs.splice(index, 1);\r\n        // TODO: Move to sync history... AND write into local persistence!?\r\n    }\r\n\r\n\r\n    private async doSync(bankSyncMonitor: BankSyncMonitor) {\r\n        let browserInterface: BrowserInterface;\r\n        let autoClosing = false;\r\n\r\n        bankSyncMonitor.on('cancelled-state-change').subscribe(() => {\r\n            this.bankLinkLocal.updateInfo(bankSyncMonitor.bankLink.uuid, info => {\r\n                info.cancelledCount++;\r\n            });\r\n        });\r\n\r\n\r\n        try {\r\n            await this.replication.sync();\r\n\r\n            if (bankSyncMonitor.providerSchema.requireBrowser) {\r\n                bankSyncMonitor.logger.debug(\"Creating Browser\");\r\n                browserInterface = await this.inAppBrowserInterfaceFactory.createBrowser(bankSyncMonitor.logger, bankSyncMonitor.backgroundMode, bankSyncMonitor);\r\n                bankSyncMonitor.logger.debug(\"Created Browser\");\r\n                (<ProviderRequiresBrowser> <any> bankSyncMonitor.provider).setBrowser(browserInterface);\r\n\r\n                browserInterface.onLoadError().then(reason => {\r\n                    bankSyncMonitor.logger.info(\"Browser Load Error\", reason);\r\n                    bankSyncMonitor.error(\"Communications Error\");\r\n                    browserInterface.close();\r\n                    bankSyncMonitor.provider.interrupt();\r\n                    this.archiveSync(bankSyncMonitor);\r\n                    this.bankLinkLocal.updateInfo(bankSyncMonitor.bankLink.uuid, info => {\r\n                        info.errorCount++;\r\n                    });\r\n                });\r\n                browserInterface.onClose().then(() => {                    \r\n                    bankSyncMonitor.logger.info(\"Browser Closed\");\r\n                    // it is possible the final block is never run in our try/final, but this browser close will be run in that case, so we use the auto closing flag to coordinate.\r\n                    if (!autoClosing) {\r\n                        bankSyncMonitor.cancelled = true;\r\n                        bankSyncMonitor.running = false;\r\n                        bankSyncMonitor.provider.interrupt();\r\n                        this.archiveSync(bankSyncMonitor);\r\n                    }\r\n                });\r\n                // Not so sure this should be here, we interrupt the provider elsewhere\r\n                bankSyncMonitor.on('cancelling-state-change').subscribe(() => {\r\n                    if (bankSyncMonitor.cancelling) {\r\n                        browserInterface.close();\r\n                    }\r\n                });\r\n        \r\n            }\r\n\r\n            bankSyncMonitor.logger.debug(\"Connecting...\");\r\n\r\n            await bankSyncMonitor.provider.connect();\r\n            if (bankSyncMonitor.cancelled || bankSyncMonitor.cancelling) return;\r\n\r\n            bankSyncMonitor.logger.debug(\"Connected. Getting Accounts.\");\r\n\r\n            let bankAccounts = await bankSyncMonitor.provider.getAccounts();\r\n            if (bankSyncMonitor.cancelled || bankSyncMonitor.cancelling) return;\r\n            \r\n            bankSyncMonitor.logger.debug(\"Fetched Accounts \" + bankAccounts.map(b => b.accountNumber).join(\", \"));\r\n            \r\n            for (let account of bankSyncMonitor.accounts) {\r\n                let bankAccount = bankAccounts.find(b => bankSyncMonitor.provider.accountMatch(account.bankLinkConfiguration, b));\r\n                if (bankAccount == null) {\r\n                    bankSyncMonitor.logger.info(\"No Matching Bank Account found for Account \" + account.name);\r\n                    bankSyncMonitor.error(\"No Matching Bank Account found for Account\");\r\n                    continue;\r\n                }\r\n                bankSyncMonitor.logger.debug(\"Fetching Transactions for Account \" + bankAccount.accountNumber);\r\n                let transactions = await bankSyncMonitor.provider.getTransactions(bankAccount);\r\n                if (bankSyncMonitor.cancelled || bankSyncMonitor.cancelling) return;\r\n                bankSyncMonitor.logger.debug(\"Merging Transactions\");\r\n                this.transactionSync.merge(bankSyncMonitor.engine, account, bankAccount, transactions);\r\n            }\r\n\r\n            bankSyncMonitor.logger.debug(\"Closing Connection\");\r\n            \r\n            autoClosing = true;\r\n\r\n            await bankSyncMonitor.provider.close();\r\n\r\n            bankSyncMonitor.logger.debug(\"Complete\");\r\n            \r\n            bankSyncMonitor.complete = true;\r\n\r\n            this.bankLinkLocal.updateInfo(bankSyncMonitor.bankLink.uuid, info => {\r\n                info.errorCount = 0;\r\n                info.cancelledCount = 0;\r\n                info.lastSync = Date.now();\r\n            });\r\n\r\n        } catch (e) {\r\n            bankSyncMonitor.error(e + \"\");\r\n            // TODO differentiate between an error and an exception (unhandled)\r\n            bankSyncMonitor.logger.info(\"Bank sync aborted due to error\", e);\r\n            bankSyncMonitor.provider.interrupt();\r\n            this.bankLinkLocal.updateInfo(bankSyncMonitor.bankLink.uuid, info => {\r\n                info.errorCount++;\r\n            });\r\n        } finally {\r\n            bankSyncMonitor.running = false;\r\n            if (browserInterface != null && !browserInterface.closed) {\r\n                autoClosing = true;\r\n                browserInterface.close();\r\n            }\r\n            if (bankSyncMonitor.cancelling) bankSyncMonitor.cancelled = true;\r\n            this.archiveSync(bankSyncMonitor);\r\n        }\r\n    }\r\n\r\n\r\n    // This will have the method (sync: account) to do a sync of that account\r\n\r\n    // TODO: If the same bank account link occurs in mulitple \"budgets\", maybe can do them all at once? (Would require activating budgets...). This would need to be stored in the bank account manager.\r\n\r\n    // Controls concurrency\r\n\r\n    // Has an implementation of the HostInterface, eg, for popping up notices, etc (Actually, maybe inject that into here)\r\n    // HostInterface should Also provide a method for giving an InAppBrowser object to the provider if it request it, and managing requests from MULTIPLE in app browsers that are competing...\r\n    // (eg... if 1 is requested to be displayed while another is displayed, then wait)\r\n\r\n    // Can also have multiple inAppBrowsers - and manage each of them separately, track them and close appropriately\r\n\r\n    // Also, some interfaces MAY NOT NEED an in app browser, and may simply be an API Call.\r\n\r\n    // Also, the generic browser provider will need to be able to be configured, store data on it's configuration, etc.\r\n\r\n    // TODO: A need a standard, flexible, but trackable API for the app, and have flexibility in the provider - Provides good feedback of what it is doing, cancellable, inspectible, error reporting, \"transparent\" in that can feel confident you know what is going on.\r\n    // So for UI it means a current status - and ability to open browser if wanted (or view data transferred for an API), log the scripts, or API calls.\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-sync.ts","import {NavController, NavParams, ModalController} from 'ionic-angular';\r\nimport {Component, ChangeDetectorRef} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Db} from '../../db/db';\r\nimport {Category} from '../../data/records/category';\r\nimport {CategoryPage} from '../../pages/category/category';\r\nimport {Budget} from '../../data/records/budget';\r\nimport {AddEditCategoryModal} from '../../modals/add-edit-category/add-edit-category';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Engine} from '../../engine/engine';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {InitCategorySimpleWeeklyTransaction} from '../../data/transactions/init-category-simple-weekly-transaction';\r\nimport {Logger} from '../../services/logger';\r\n\r\n\r\n@Component({\r\n  templateUrl: 'budget.html'\r\n})\r\nexport class BudgetPage {\r\n\r\n  private logger: Logger = Logger.get('BudgetPage');\r\n\r\n  budget: Db;\r\n  budgetRecord: Budget;\r\n\r\n  activated: boolean;\r\n  activatedProgress: number;\r\n  activatedOf: number;\r\n\r\n  engine: Engine;\r\n  \r\n  constructor(private changeDetectorRef: ChangeDetectorRef, private nav: NavController, private dbms: Dbms, private params: NavParams, private engineFactory: EngineFactory, private modalController: ModalController, private configuration: Configuration) {\r\n    this.nav = nav;\r\n    this.dbms = dbms;\r\n    \r\n    this.budget = this.params.data.budget ? this.params.data.budget : dbms.getDb(this.params.data.budgetId);\r\n    this.engine = engineFactory.getEngine(this.budget);\r\n\r\n    this.activated = false;\r\n\r\n    this.logger.debug(\"Calling activate budget\");\r\n  }\r\n\r\n\r\n  \r\n  addCategory() {\r\n    let modal = this.modalController.create(AddEditCategoryModal, {budgetId: this.budget.id});\r\n    modal.present();\r\n\r\n  }\r\n  \r\n  openCategory(category: Category) {\r\n    this.nav.push(CategoryPage, {'budget': this.budget, 'categoryId': category.id});\r\n  }\r\n  \r\n  categoryWeeklyAmount(category: Category): any {\r\n    // TODO get cache it in the category record and get it straight from there\r\n    let t = this.budget.transactionProcessor.findTransactionsForRecord(category, InitCategorySimpleWeeklyTransaction)[0];\r\n    if (t) return t.weeklyAmount;\r\n  }\r\n\r\n\r\n  ionViewDidLeave() {\r\n    // TODO: CHeck this is called appropriately (ie. on a different setRoot(), but not on navigating to a child page)\r\n   // this.budget.deactivate();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.configuration.lastOpenedBudget(this.budget.id);\r\n\r\n    this.budget.activate(this.activateProgressCallback.bind(this)).then(() => {    \r\n      this.logger.debug(\"Activate Budget Resolved\");\r\n\r\n      this.budgetRecord = this.budget.transactionProcessor.single(Budget);\r\n\r\n      this.activated = true;\r\n    });\r\n\r\n  } \r\n\r\n  activateProgressCallback(value: number, of: number) {\r\n    this.activatedProgress = value;\r\n    this.activatedOf = of;\r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/budget/budget.ts","import {Record} from '../../db/record';\r\nimport {Processor} from '../../engine/processor';\r\n\r\nexport class BankLink extends Record<BankLink> {\r\n\r\n    public id: number;\r\n    public uuid: string;\r\n    public name: string;\r\n    public provider: string;\r\n    public configuration: any;\r\n\r\n    tableName(): string {\r\n        return \"BankLink\";\r\n    }\r\n\r\n    initTable(table: LokiCollection<BankLink>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/bank-link.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Budget} from '../records/budget';\r\nimport {Logger} from '../../services/logger';\r\n\r\nexport class InitBudgetTransaction extends DbTransaction {\r\n\r\n    budgetName: string;    \r\n\r\n    getTypeId(): string {\r\n        return 'InitBudgetTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n\r\n        let budget = tp.single(Budget);\r\n        budget.name = this.budgetName;\r\n        tp.table(Budget).update(budget);\r\n        tp.db.name(this.budgetName);\r\n\r\n        tp.mapTransactionAndRecord(this, budget);\r\n\r\n        Logger.get('InitBudgetTransaction').info(\"Applied InitBudgetTransaction for \" + budget.name);\r\n\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        tp.unsupported();\r\n    }\r\n\r\n\r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        return /*Created / Updated / Deleted */ \"budget \" + this.budgetName;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-budget-transaction.ts","import {Injectable} from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AppReady {\r\n\r\n    readyResolve: any;\r\n    ready: Promise<any>;\r\n\r\n    constructor() {\r\n        // Emulate deferred...\r\n        this.ready = new Promise((resolve, reject) => {this.readyResolve = resolve;});\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-ready.ts","import {Injectable} from '@angular/core';\r\nimport {ProviderInterface, ProviderSchema} from './provider-interface';\r\n\r\n@Injectable()\r\nexport class BankProviderRegistry {\r\n\r\n    private providers = new Map<string, {Provider: new() => ProviderInterface, schema: ProviderSchema}>();\r\n\r\n    registerProvider(Provider: new() => ProviderInterface) {\r\n        let schema  = new Provider().getSchema();\r\n        let providerName = schema.name;\r\n        if (this.providers.has(providerName)) {\r\n            throw new Error(\"Bank provider '\" + providerName + \"' is already registered\");\r\n        }\r\n        this.providers.set(providerName, {Provider: Provider, schema: schema});\r\n    }\r\n\r\n    newProvider(providerName: string): ProviderInterface {\r\n        let providerInfo = this.providers.get(providerName);\r\n        let provider = new providerInfo.Provider();\r\n\r\n        return provider;\r\n    }\r\n\r\n    getProviderNames(): string[] {\r\n        return Array.from(this.providers.keys());\r\n    }\r\n\r\n    getProviderSchema(providerName: string): ProviderSchema {\r\n        let providerInfo = this.providers.get(providerName);\r\n        return providerInfo.schema;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-provider-registry.ts","import {HostInterface} from './host-interface';\r\nimport { BankLink } from \"../data/records/bank-link\";\r\nimport { SecureAccessor } from \"../services/configuration-service\";\r\n\r\nexport class BankAccount {\r\n    public accountName: string;\r\n    public accountBalance: string;\r\n    public accountAvailableBalance: string;\r\n    public accountNumber: string;\r\n    public bsb: string;\r\n}\r\n\r\nexport class BankAccountTransaction {\r\n    public transactionDate: string;\r\n    public amount: string; // Big ?\r\n    public balance: string;\r\n    public description: string;\r\n    public status: 'processed' | 'recent' | 'authorised';\r\n    // TODO: Any \"extra\" information?. like balance, card used, etc?\r\n}\r\n\r\nexport class ProviderSchema {\r\n    name: string;\r\n    perAccountFields: string[];\r\n    configurationFields: string[];\r\n    secureConfigurationFields: string[];\r\n    requireBrowser?: boolean;\r\n    singleInstancePerBankLink: boolean = true;\r\n}\r\n\r\nexport interface ProviderInterface {\r\n    getSchema(): ProviderSchema;\r\n    accountMatch(perAccountFieldValues: object, bankAccount: BankAccount): boolean;\r\n    \r\n    configure(bankLink: BankLink, secure: SecureAccessor, hostInterface: HostInterface): void;\r\n\r\n    connect(): Promise<void>;\r\n    getAccounts(): Promise<BankAccount[]>;\r\n    getTransactions(account: BankAccount): Promise<BankAccountTransaction[]>;\r\n    close(): Promise<void>;\r\n    interrupt();\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/provider-interface.ts","import {Injectable} from '@angular/core';\r\nimport {HostInterface} from './host-interface';\r\nimport { Configuration } from \"../services/configuration-service\";\r\n\r\n@Injectable()\r\nexport class StandardHostInterface implements HostInterface {\r\n\r\n    constructor(private configuration: Configuration) {\r\n\r\n    }\r\n\r\n    prompt(){}\r\n    notify(){}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/standard-host-interface.ts","import {ModalController, NavController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {AddBudgetModal} from '../../modals/add-budget/add-budget';\r\nimport {ShareBudgetModal} from '../../modals/share-budget/share-budget';\r\nimport {BudgetPage} from '../../pages/budget/budget';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {InitBudgetTransaction} from '../../data/transactions/init-budget-transaction';\r\n\r\n@Component({\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n  \r\n  constructor(private nav: NavController, private dbms: Dbms, private modalController: ModalController) {\r\n    this.nav = nav;\r\n    this.dbms = dbms;\r\n  }\r\n  \r\n  addBudget() {\r\n    let modal = this.modalController.create(AddBudgetModal);\r\n\r\n    modal.onWillDismiss((data) => {\r\n      if (data && data.budgetName !== '') {\r\n        this.dbms.createDb().then(db => {\r\n          db.activate().then(() => {\r\n            let t = new InitBudgetTransaction();\r\n            t.budgetName = data.budgetName;\r\n            db.applyTransaction(t);\r\n            db.deactivate();\r\n\r\n            this.nav.setRoot(BudgetPage, {'budget' : db}, {animate: false});\r\n          });\r\n        });\r\n      }\r\n    });\r\n    \r\n\r\n    modal.present();\r\n  }\r\n  \r\n  linkBudget() {\r\n    let modal = this.modalController.create(ShareBudgetModal);\r\n    modal.onDidDismiss((data) => {\r\n      if (data && data.newBudget) {\r\n        this.nav.setRoot(BudgetPage, {'budget': data.newBudget});\r\n      }\r\n    });\r\n    modal.present();\r\n    \r\n  }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","export class Autofocus {\r\n\r\n    private _enabled: boolean = true;\r\n\r\n    public get enabled(): String {\r\n        return this._enabled ? '' : null;\r\n    }\r\n\r\n    public setEnabled(enabled: boolean) {\r\n        this._enabled = enabled;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/autofocus.ts","import {NavParams, ViewController, NavController, ActionSheetController, ToastController} from 'ionic-angular';\r\nimport {Clipboard as NativeClipboard} from '@ionic-native/clipboard';\r\nimport {FormBuilder, Validators, FormGroup} from '@angular/forms';\r\nimport {Subscription} from 'rxjs/Subscription';\r\nimport 'rxjs/add/operator/map';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Db} from '../../db/db';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Replication} from '../../services/replication-service';\r\nimport {Component} from '@angular/core';\r\nimport {Logger} from '../../services/logger';\r\nimport Clipboard from 'clipboard';\r\nimport {Observable} from 'rxjs/Observable';\r\n\r\n@Component({\r\n  templateUrl: 'share-budget.html'\r\n})\r\nexport class ShareBudgetModal {\r\n\r\n  private logger: Logger = Logger.get('ShareBudgetModal');\r\n\r\n  form: FormGroup;\r\n  budget: Db;\r\n  linkBudgetId: string;\r\n  newlyLinkedBudget: boolean;\r\n  linking: boolean;\r\n  linkingSubscription: Subscription;\r\n  sharing: boolean;\r\n  sharingSubscription: Subscription;\r\n  linkingError: boolean;\r\n  linkingErrorMessage: string;\r\n  sharingError: boolean;\r\n  sharingErrorMessage: string;\r\n  closed: boolean;\r\n  \r\n  constructor(public viewCtrl: ViewController, private formBuilder: FormBuilder, private http: Http, navParams: NavParams, private dbms: Dbms, private configuration: Configuration, private replication: Replication, private nav: NavController, private actionSheetCtrl: ActionSheetController, private toastCtrl: ToastController, private nativeClipboard: NativeClipboard) {\r\n    this.viewCtrl = viewCtrl;\r\n    this.form = formBuilder.group({\r\n      budgetName: ['', Validators.required]\r\n    });\r\n\r\n    if (navParams.data.budgetId) {\r\n      this.budget = dbms.getDb(navParams.data.budgetId);\r\n      \r\n    }\r\n    \r\n  }\r\n    \r\n  close() {\r\n    if (this.closed) return;\r\n    this.closed = true;\r\n\r\n    if (this.newlyLinkedBudget) {\r\n      this.viewCtrl.dismiss({'newBudget' : this.budget});\r\n    } else {\r\n      this.viewCtrl.dismiss();\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    if (this.newlyLinkedBudget) return;\r\n    if (this.linkingSubscription && !this.linkingSubscription.closed) {\r\n      this.linkingSubscription.unsubscribe();\r\n      delete this.linkingSubscription;\r\n    }\r\n    this.linking = false;\r\n    if (this.sharingSubscription && !this.sharingSubscription.closed) {\r\n      this.sharingSubscription.unsubscribe();\r\n      delete this.sharingSubscription;\r\n    }\r\n    this.sharing = false;\r\n  }\r\n  \r\n  isShared(): boolean {\r\n    return this.budget && this.replication.enabled(this.budget);\r\n  }\r\n  \r\n  tryLink(budgetId: string) {\r\n    this.linkingError = false;\r\n    this.doLink(budgetId, err => {\r\n      }, budget => {\r\n        setTimeout(() => this.close(), 3000);\r\n      });\r\n  }\r\n\r\n  doLink(budgetId: string, errorHandler?: any, successHandler?: any) {\r\n    if (this.newlyLinkedBudget) return;\r\n\r\n    if (this.linkingSubscription && !this.linkingSubscription.closed) this.linkingSubscription.unsubscribe();\r\n      \r\n    this.linkingSubscription = this.http.post('https://api.freebudgetapp.com/link', JSON.stringify({ 'dbId': budgetId, 'deviceId': this.configuration.deviceInstallationId, 'deviceName': this.configuration.deviceName }))\r\n      .map(response => response.json())\r\n      .subscribe(response => {\r\n\r\n        this.logger.info('success: ' + JSON.stringify(response));\r\n        var budgetName = response.dbName;\r\n        var deviceReplId = response.replId;\r\n\r\n        this.dbms.createDb(budgetId).then(budget => {\r\n          this.budget = budget;\r\n          this.budget.name(budgetName);\r\n          \r\n          this.replication.enable(this.budget, deviceReplId);\r\n          this.replication.safeSync();\r\n\r\n          this.newlyLinkedBudget = true;\r\n        }).then(() => {\r\n          if (successHandler) successHandler(this.budget);\r\n        });\r\n      }, err => {\r\n        this.logger.debug('error: ' + JSON.stringify(err));\r\n        if (errorHandler) errorHandler(err);\r\n      });\r\n  }\r\n\r\n  link(budgetId: string) {\r\n    this.linking = true;\r\n    this.linkingError = false;\r\n    this.doLink(budgetId, err => {\r\n        this.linking = false;\r\n        this.linkingError = true;\r\n        try {\r\n          let message = JSON.parse(err._body).error.message + '';\r\n          if (message.match('Bad Request: Invalid dbId ')) {\r\n            message = message.replace('Bad Request: Invalid dbId ', '');\r\n            this.linkingErrorMessage = 'The share code ' + message + ' doesn\\'t link up with any budget that we know about. Please check it and try again.';\r\n          } else if (message.match('Bad Request: dbId ') && message.match(' does not exist')) {\r\n            message = message.replace('Bad Request: dbId ', '').replace(' does not exist', '');\r\n            this.linkingErrorMessage = 'The share code ' + message + ' doesn\\'t link up with any budget that we know about. Please check it and try again.';\r\n          } else if (message) {\r\n            this.linkingErrorMessage = 'Error: ' + message;\r\n          }\r\n          \r\n        } catch (e) {\r\n          this.linkingErrorMessage = err && err.status ? 'Error Code: ' + err.status + ' - ' + err.statusText : 'Uh Oh! Something has gone wrong. Please try again.';\r\n        }\r\n      }, budget => {\r\n        this.linking = false;\r\n        setTimeout(() => this.close(), 3000);\r\n      });\r\n  }\r\n  \r\n  shareBudget() {\r\n\r\n    if (this.sharingSubscription && !this.sharingSubscription.closed) this.sharingSubscription.unsubscribe();\r\n\r\n    this.sharing = true;\r\n    this.sharingError = false;\r\n    this.sharingSubscription = ShareBudgetModal.postShare(this.http, this.budget.id, this.budget.name(), this.configuration.deviceInstallationId, this.configuration.deviceName)\r\n      .map(response => response.json())\r\n      .subscribe(response => {\r\n            this.logger.info('success: ' + JSON.stringify(response));\r\n            this.replication.enable(this.budget, response.replId);\r\n            this.logger.info('ReplId: ' + this.replication.enabled(this.budget));\r\n            this.sharing = false;\r\n      }, err => {\r\n            this.logger.debug('error: ' + JSON.stringify(err));\r\n            this.sharing = false;\r\n            this.sharingError = true;\r\n            try {\r\n              let message = JSON.parse(err._body).error.message + '';\r\n              this.sharingErrorMessage = 'Error: ' + message;\r\n            } catch (e) {\r\n              this.sharingErrorMessage = err && err.status ? 'Error Code: ' + err.status + ' - ' + err.statusText : 'Uh Oh! Something has gone wrong. Please try again.';\r\n            }\r\n      });\r\n\r\n  }\r\n\r\n  static postShare(http: Http, budgetId: string, budgetName: string, deviceInstallationId: string, deviceName: string): Observable<Response> {\r\n    return http.post('https://api.freebudgetapp.com/share', JSON.stringify({'dbId': budgetId, 'dbName': budgetName, 'deviceId': deviceInstallationId, 'deviceName': deviceName}))\r\n  }\r\n  \r\n  shareOptions() {\r\n    let actionSheet = this.actionSheetCtrl.create({\r\n      title: 'Share',\r\n      buttons: [\r\n        {\r\n          text: 'Email',\r\n          handler: () => {\r\n            window.location.href = 'mailto:?subject=' + encodeURI(this.budget.name()) + ' Share Code&body=' + encodeURI(this.budget.id);\r\n          }\r\n        }, {\r\n          text: 'Copy',\r\n          cssClass: 'share-copy',\r\n          handler: () => {\r\n            // Note: Handler code is attached by JS clipboard handler below\r\n          }\r\n        }, {\r\n          text: 'Cancel',\r\n          role: 'cancel'\r\n        }\r\n      ]\r\n    });\r\n    actionSheet.present().then(() => {\r\n      let cb = new Clipboard('.share-copy', {text: () => this.budget.id });\r\n      cb.on('success', () => {\r\n        this.toastCtrl.create({\r\n              message: 'Copied!\\nOpen another application and paste the share code',\r\n              duration: 10000,\r\n              showCloseButton: true,\r\n              position: 'bottom'\r\n            }).present();\r\n      });\r\n      cb.on('error', () => {\r\n        if (!this.configuration.native) {\r\n          this.toastCtrl.create({\r\n            message: 'Uh oh!\\nThe code couldn\\'t be copied. You\\'ll need to highlight the code and press Ctrl-C to copy.',\r\n            duration: 10000,\r\n            showCloseButton: true,\r\n            position: 'bottom'\r\n          }).present();\r\n        } else {\r\n          this.nativeClipboard.copy(this.budget.id).then(() => {\r\n            this.toastCtrl.create({\r\n                  message: 'Copied!\\nOpen another application and paste the share code',\r\n                  duration: 10000,\r\n                  showCloseButton: true,\r\n                  position: 'bottom'\r\n                }).present();\r\n            }, reason => {\r\n            this.toastCtrl.create({\r\n                  message: 'Uh oh!\\nThe code couldn\\'t be copied (' + reason + '). You\\'ll need to highlight the code and press Ctrl-C to copy.',\r\n                  duration: 10000,\r\n                  showCloseButton: true,\r\n                  position: 'bottom'\r\n                }).present();\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/share-budget/share-budget.ts","import {Record} from '../../db/record';\r\n\r\nexport class Budget extends Record<Budget> {\r\n    \r\n    public name: string;\r\n    \r\n    tableName(): string {\r\n        return 'Budget';\r\n    }\r\n    \r\n    initTable(table: LokiCollection<Budget>) {\r\n        // Nothing needed here:)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/budget.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Category} from '../records/category';\r\nimport {CategorySimpleWeeklyProcessor} from '../processors/category-simple-weekly-processor';\r\nimport {Logger} from '../../services/logger';\r\nimport { Big } from 'big.js';\r\n\r\nexport class InitCategorySimpleWeeklyTransaction extends DbTransaction {\r\n\r\n    private static logger: Logger = Logger.get('InitCategorySimpleWeeklyTransaction');\r\n\r\n    categoryId: number;\r\n    balanceDate: string;\r\n    balance: Big;\r\n    weeklyAmount: Big;\r\n\r\n    getTypeId(): string {\r\n        return 'InitCategorySimpleWeeklyTransaction';\r\n    }\r\n\r\n\r\n    apply(tp: TransactionProcessor) {\r\n        \r\n        // TODO: Validation\r\n        \r\n        let table = tp.table(Category);\r\n        let categoryRecord = table.by('id', <any> this.categoryId);\r\n        if (categoryRecord == null) {\r\n            InitCategorySimpleWeeklyTransaction.logger.info('Trying to processing category weekly transaction with invalid category. Skipping.');\r\n            return;\r\n        }\r\n        let processor = new CategorySimpleWeeklyProcessor();\r\n        processor.balance = this.balance;\r\n        processor.weeklyAmount = this.weeklyAmount;\r\n        processor.balanceDate = this.balanceDate;\r\n        processor.category = categoryRecord;\r\n        processor.transactionId = this.id;\r\n        \r\n        categoryRecord.engine.processors.push(processor);\r\n\r\n        table.update(categoryRecord);\r\n        \r\n        tp.mapTransactionAndRecord(this, categoryRecord);\r\n\r\n        // TODO: engine.execute ?? - needs to be called from elsewhere so it can be batched... but maybe have to fire an event here ?\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        this.undo(tp); // TODO: This will not handle a change in category (And maybe it shouldn't need to, but we need to verify it wasn't changed). it should undo the previous version of this transaction...\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(Category);\r\n        let categoryRecord = table.by('id', <any> this.categoryId);\r\n\r\n        if (categoryRecord == null) {\r\n            InitCategorySimpleWeeklyTransaction.logger.info('Trying to processing category weekly transaction with invalid category. Skipping.');\r\n            return;\r\n        }\r\n\r\n        // TODO: A better method of finding, or some centralised methods in engine rather than using the processors array directly...\r\n        let categorySimpleWeeklyProcessor = categoryRecord.engine.processors.find(processor => {\r\n            return processor.getTypeId() === 'CategorySimpleWeeklyProcessor' && (<CategorySimpleWeeklyProcessor> processor).transactionId === this.id;\r\n        });\r\n        \r\n        categoryRecord.engine.processors.splice(categoryRecord.engine.processors.indexOf(categorySimpleWeeklyProcessor), 1);\r\n        \r\n        table.update(categoryRecord);\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'balance')\r\n            return new Big(value);\r\n        if (field === 'weeklyAmount')\r\n            return new Big(value);\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"set {{category name}} to \" + env.currencyFormatter(this.weeklyAmount) + \" per week\";\r\n        } else if (env.action === 'update') {\r\n            return \"updated {{category name}} to \" + env.currencyFormatter(this.weeklyAmount) + \" per week\";\r\n        } else {\r\n            return \"removed weekly amount of \" + env.currencyFormatter(this.weeklyAmount) + \" from category {{category name}}\";\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-simple-weekly-transaction.ts","import {NavController, ViewController, NavParams, AlertController, ModalController} from 'ionic-angular';\r\nimport {Category} from '../../data/records/category';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Engine} from '../../engine/engine';\r\nimport {CreateSplitTransaction} from '../../data/transactions/create-split-transaction';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport {Utils} from '../../services/utils';\r\nimport { Big } from 'big.js';\r\nimport {AddEditSplitTransactionLineModal} from './add-edit-split-transaction-line';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-split-transaction.html'\r\n})\r\nexport class AddEditSplitTransactionModal {\r\n\r\n  data: {\r\n    expense: boolean;\r\n    date: string;\r\n    description: string;\r\n    amount: string;\r\n    accountId: number;\r\n    status: 'realised' | 'anticipated';\r\n\r\n    lines: Array<{\r\n      categoryId: number;\r\n      accountId?: number;\r\n      amount: string;\r\n      status?: 'realised' | 'anticipated'; // TODO: Override for each line..\r\n      date?: string;\r\n    }>\r\n  };\r\n\r\n  engine: Engine;\r\n  editing: boolean;\r\n  category: Category;\r\n  transaction: CreateSplitTransaction;\r\n  \r\n  constructor(private configuration: Configuration, private modalController: ModalController, public viewCtrl: ViewController, private navParams: NavParams, private engineFactory: EngineFactory, private nav: NavController, private alertController: AlertController) {\r\n    this.engine = engineFactory.getEngineById(navParams.data.budgetId);\r\n    if (navParams.data.categoryId != null) {\r\n      this.engine.getCategory(navParams.data.categoryId);\r\n      this.category = this.engine.db.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\r\n    }\r\n\r\n    // TODO: Validation that amounts must be equal\r\n    this.data = <any> {};\r\n    this.data.lines = [];\r\n\r\n\r\n    if (navParams.data.transactionId) {\r\n      this.editing = true;\r\n      let transactionRecord = this.engine.db.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\r\n      this.transaction = this.engine.db.transactionProcessor.findTransactionsForRecord(transactionRecord, CreateSplitTransaction)[0];\r\n\r\n      if (this.category == null) {\r\n        this.category = this.engine.db.transactionProcessor.table(Category).by('id', <any> this.transaction.amounts[0].categoryId);\r\n      }\r\n\r\n      this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\r\n      this.data.expense = this.transaction.amounts[0].amount.cmp(Big(0)) >= 0;\r\n      this.data.amount = this.totalAmount().toString();\r\n      this.data.description = this.transaction.description;\r\n      this.data.status = this.transaction.status;\r\n      this.transaction.amounts.forEach(l => {\r\n        this.data.lines.push({categoryId: l.categoryId, amount: l.amount.times(this.data.expense ? 1 : -1)+\"\", accountId: l.accountId});\r\n      });\r\n    } else {\r\n      this.editing = false;\r\n      this.data.expense = true;\r\n      this.data.date = Utils.toIonicFromYYYYMMDD(this.navParams.data.date || Utils.nowYYYYMMDD());\r\n      this.data.description = this.navParams.data.description;\r\n      this.data.accountId = this.navParams.data.accountId;\r\n      this.data.status = 'realised';\r\n      this.data.amount = this.navParams.data.amount ? this.navParams.data.amount + '' : undefined;\r\n      if (this.data.amount) this.data.expense = new Big(this.data.amount).cmp(Big(0)) >= 0;\r\n      this.data.lines.push({\r\n        categoryId: this.category ? this.category.id : undefined,\r\n        amount: this.data.amount,\r\n        accountId: this.data.accountId\r\n      });\r\n\r\n\r\n      if (!this.category) {\r\n        this.editLine(this.data.lines[0]);\r\n      }\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  editLine(line: {categoryId: number; amount: string}) {\r\n    let modal = this.modalController.create(AddEditSplitTransactionLineModal, {\r\n      parent: this,\r\n      lineIndex: this.data.lines.indexOf(line)\r\n    }, {showBackdrop: false, enableBackdropDismiss: false});\r\n    \r\n    modal.present();\r\n  }\r\n\r\n  totalAmount(): Big  {\r\n    return this.data.lines.map(line => line.amount).reduce(\r\n      (total, amount) => new Big((amount || '0').replace(',', '')).plus(total),\r\n      new Big('0')\r\n    ).abs();\r\n  }\r\n\r\n  amountRemaining(): Big {\r\n    return new Big((this.data.amount || '0').replace(',', '')).minus(this.totalAmount());\r\n  }\r\n\r\n  newLine() {\r\n    this.data.lines.push({\r\n      categoryId: null,\r\n      accountId: this.data.accountId,\r\n      amount: ''\r\n    });\r\n    this.editLine(this.data.lines[this.data.lines.length-1]);\r\n  }\r\n    \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    var t: CreateSplitTransaction;\r\n    if (! this.editing) {\r\n      t = new CreateSplitTransaction();\r\n    } else {\r\n      t = this.transaction;\r\n    }    \r\n    \r\n    t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\r\n    t.description = this.data.description;\r\n    t.status = this.data.status;\r\n\r\n    // Always clear out the records in the transaction and not \"merge\" them\r\n    // Our indexes should be preserved...\r\n    t.amounts = [];\r\n    this.data.lines.forEach((line) => {\r\n      t.amounts.push({\r\n        categoryId: line.categoryId,\r\n        amount: new Big((line.amount || '0').replace(',', '')).times(this.data.expense ? 1 : -1),\r\n        accountId: Number(line.accountId)\r\n      });\r\n    });\r\n\r\n\r\n    this.engine.db.applyTransaction(t);\r\n\r\n    this.viewCtrl.dismiss({transactions: this.engine.db.transactionProcessor.findRecordsForTransaction(t, Transaction)});\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteTransactionConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this entire transaction?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteTransaction();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n  deleteTransaction() {\r\n    this.engine.db.deleteTransaction(this.transaction);\r\n    \r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  toggleExpense() {\r\n    this.data.expense = !this.data.expense;\r\n  }\r\n\r\n\r\n  reconciledTotal(): Big {\r\n    return new Big('0');\r\n  }\r\n\r\n\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transaction/add-edit-split-transaction.ts","import {BuildInfo} from '../app/build-info';\r\nimport {LoggerAppender, Logger} from './logger';\r\nimport {LoggerStorageAppender} from './logger-storage-appender';\r\n\r\nexport interface LoggerUINotifierAppenderHandler {\r\n    handle(message: string);\r\n}\r\n\r\ndeclare var Device: any;\r\n\r\nclass DefaultLoggerUINotifierAppenderHandler implements LoggerUINotifierAppenderHandler {\r\n\r\n    private errorOverlayDiv: HTMLDivElement;\r\n    private errorStyle: HTMLStyleElement;\r\n\r\n    private css = `\r\n        #error-overlay {\r\n            position: fixed;\r\n            z-index: 100000;\r\n            top: 10px;\r\n            bottom: 10px;\r\n            left: 10px;\r\n            right: 10px;\r\n            box-sizing: border-box;\r\n            color: white;\r\n            white-space: nowrap;\r\n            font-size: 20px;\r\n        }\r\n\r\n        @media (min-width: 600px) and (min-height: 600px) {\r\n            #error-overlay {\r\n                top: 15%;\r\n                bottom: 15%;\r\n                left: 15%;\r\n                right: 15%;\r\n            }\r\n        }\r\n        \r\n        #error-overlay:after {\r\n            content: '';\r\n            display: block;\r\n            position: absolute;\r\n            background-color: red;\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            z-index: -1;\r\n            box-shadow: 0 0 30px black;\r\n        }\r\n        #error-overlay:before {\r\n            content: '';\r\n            display: block;\r\n            position: fixed;\r\n            background-color: rgba(100,0,0,0.7);\r\n            top: 0;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            z-index: -1;\r\n        }\r\n        #error-overlay-nav {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n            overflow: hidden;\r\n        }\r\n        #error-overlay .error-page {\r\n            display: inline-block;\r\n            width: 100%;\r\n            height: 100%;\r\n            position: relative;\r\n            white-space: normal;\r\n            left: 0;\r\n        }\r\n        #error-overlay .error-page-animating {\r\n            transition: left 0.3s;\r\n        }\r\n        #error-overlay .header {\r\n            height: 70px;\r\n            width: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            text-align: center;\r\n            background-color: white;\r\n            color: red;\r\n            white-space: nowrap;\r\n            overflow: hidden;\r\n        }\r\n        #error-overlay .content {\r\n            position: absolute;\r\n            top: 70px;\r\n            bottom: 100px;\r\n            left: 0;\r\n            right: 0;\r\n            box-sizing: border-box;\r\n            overflow: auto;\r\n            padding: 20px;\r\n        }\r\n        #error-overlay .sad-icon {\r\n            font-size: 40px;\r\n            display: inline-block;\r\n            width: 60px;\r\n            height: 60px;\r\n            transform: rotate(90deg);\r\n            margin-top:-20px;\r\n        }\r\n        #error-overlay .error-buttons {\r\n            position: absolute;\r\n            bottom: 0;\r\n            left: 0;\r\n            right: 0;\r\n            height: auto;\r\n            transition: height 0.3s;\r\n        }\r\n        #error-overlay .error-buttons .error-link {\r\n            padding-left: 20px;\r\n            border-top: 1px white solid;\r\n            line-height: 40px;\r\n            cursor: pointer;\r\n            font-size: 14px;\r\n        }\r\n        #error-overlay .error-button {\r\n            position: relative;\r\n            display: block;\r\n            top: 0;\r\n            width: 100%;\r\n            height: 50px;\r\n            line-height: 50px;\r\n            white-space: nowrap;\r\n            font-weight: bold;\r\n            font-size: 20px;\r\n            text-align: center;\r\n            border-top: 1px white solid;\r\n            cursor: pointer;\r\n            transition: opacity 0.3s, top 0.3s;\r\n            color: white;\r\n            text-decoration: none;\r\n        }\r\n        #error-overlay .error-button:hover {\r\n            background-color: rgba(255,255,255,0.2);\r\n        }\r\n        #error-overlay .error-button-disabled:hover, #error-overlay .error-button-disabled {\r\n            cursor: auto;\r\n            background-color: #ccc;\r\n            color: #aaa;\r\n        }\r\n        #error-overlay .error-button-hidden {\r\n            position: relative;\r\n            top: 20px;\r\n            opacity: 0;\r\n            height: 0;\r\n        }\r\n        #error-contact-page label {\r\n            display: block;\r\n            margin-top: 20px;\r\n        }\r\n        #error-contact-page textarea {\r\n            font-size: inherit;\r\n            display: block;\r\n            width: 100%;\r\n            color: black;\r\n            margin-top: 20px;\r\n        }\r\n        #error-contact-page input {\r\n            vertical-align:middle;\r\n            width: 30px;\r\n            height: 30px;\r\n        }\r\n        #error-overlay #error-log-data {\r\n            white-space: pre;\r\n            font-size: 16px;\r\n            font-family: monospace;\r\n        }\r\n        #error-overlay .success-icon {\r\n            font-size: 150px;\r\n            line-height: 150px;\r\n            height: 150px;\r\n            text-align: center;\r\n            position: absolute;\r\n            left: 0;\r\n            right: 0;\r\n            top: 50%;\r\n            margin-top: -75px;\r\n        }\r\n    `;\r\n\r\n    private html = `\r\n        <div id=\"dismiss-confirm-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Are You Sure?</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div>We really don't recommend ignoring any errors, but sometimes you just have to try and get on with it, we understand.</div>\r\n            </div>\r\n            <div class=\"error-buttons\">\r\n                <div id=\"dismiss-confirm-back-button\" class=\"error-button\">&lt; Go Back</div>\r\n                <div id=\"dismiss-confirm-button\" class=\"error-link\">Close</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-main-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1><div class=\"sad-icon\">: (</div></h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div>Uh Oh! Something has gone terribly wrong. To make sure your budget isn't affected, we've stopped things here.</div>\r\n                <br>\r\n                <div>The best thing to do is send us some information about what has gone wrong so we can get busy fixing it. And if it keeps happening, to give you some support to get your budget up and running again.</div>\r\n            </div>\r\n            <div class=\"error-buttons\" style=\"height:90px\">\r\n                <div id=\"goto-error-report-button\" class=\"error-button\">Next &gt;</div>\r\n                <div id=\"show-other-options-button\" class=\"error-link\">Other Options</div>\r\n                <div id=\"restart-button\" class=\"error-button error-button-hidden\">Restart App</div>\r\n                <div id=\"dismiss-button\" class=\"error-button error-button-hidden\">Ignore</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-contact-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Can we get in touch?</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                <label>Contact Information\r\n                    <textarea id=\"error-contact-info\" placeholder=\"eg. me@email.com, a phone number and timezone/time to call, Skype, Hangouts, Facebook, etc.\"></textarea>\r\n                </label>\r\n                <label><input type=\"checkbox\" id=\"error-do-not-contact\"></input> Do not contact me</label>                \r\n            </div>\r\n            <div class=\"error-buttons\">\r\n                <div id=\"error-contact-next-button\" class=\"error-button\">Next &gt;</div>\r\n                <div id=\"error-contact-back-button\" class=\"error-link\">&lt; Go Back</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-privacy-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Privacy</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                Unlike most companies, we don't want to collect all your information for marketing. We just want to keep you as a satisfied customer and build the best budgeting app possible.\r\n                <br/><br/>\r\n                This is the information that will be sent to help us sort out the issue.\r\n                <br/><br/>\r\n                Privacy is of the highest priority to us and we won't use this information for anything but solving your issue. This information will be destroyed afterwards.\r\n                <br/><br/>\r\n                <div id=\"error-report-data\"></div>\r\n            </div>\r\n            <div class=\"error-buttons\">\r\n                <div id=\"error-privacy-next-button\" class=\"error-button\">Next &gt;</div>\r\n                <div id=\"error-privacy-back-button\" class=\"error-link\">&lt; Go Back</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-send-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Submit</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div id=\"error-log-data\"></div>\r\n            </div>\r\n            <div class=\"error-buttons\">\r\n                <div id=\"error-send-button\" class=\"error-button\">Submit</div>\r\n                <div id=\"error-send-back-button\" class=\"error-link\">&lt; Go Back</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-sent-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Thanks</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                <div class=\"success-icon\">&#10004;</div>\r\n            </div>\r\n            <div class=\"error-buttons\" style=\"height:90px\">\r\n                <div id=\"sent-restart-button\" class=\"error-button\">Restart App</div>\r\n                <div id=\"sent-dismiss-button\" class=\"error-link\">Dismiss & Continue (Not recommended)</div>\r\n            </div>\r\n        </div>\r\n        <div id=\"error-error-page\" class=\"error-page\">\r\n            <div class=\"header\">\r\n                <h1>Oh Dear</h1>\r\n            </div>\r\n            <div class=\"content\">\r\n                We couldn't send the error report. Would you mind either emailing it to us, or copying it into an email and sending to support@freedombudgetapp.com\r\n            </div>\r\n            <div class=\"error-buttons\" style=\"height:140px\">\r\n                <a id=\"error-email-button\" data-rel=\"external\" href=\"mailto:support@freedombudgetapp.com?subject=Error Repprt&body=\" class=\"error-button\">Send Using Email</a>\r\n                <div id=\"error-restart-button\" class=\"error-button\">Restart App</div>\r\n                <div id=\"error-dismiss-button\" class=\"error-link\">Dismiss & Continue (Not recommended)</div>\r\n            </div>\r\n        </div>\r\n    `;\r\n\r\n    private errorMainPage: HTMLElement;\r\n    private errorContactPage: HTMLElement;\r\n    private errorPrivacyPage: HTMLElement;\r\n    private errorSendPage: HTMLElement;\r\n    private dismissConfirmPage: HTMLElement;\r\n    private errorErrorPage: HTMLElement;\r\n    private errorSentPage: HTMLElement;\r\n    private enableContactNext: boolean;\r\n\r\n    private navigating: boolean;\r\n\r\n    private errorLogData: string;\r\n\r\n    handle(message: string) {\r\n        if (document.getElementById('error-overlay')) return;\r\n\r\n        this.populateErrorLogData();\r\n\r\n        let errorOverlayWrapperDiv = document.createElement('div');\r\n        errorOverlayWrapperDiv.id = 'error-overlay';\r\n        document.body.insertBefore(errorOverlayWrapperDiv, document.body.firstChild);\r\n\r\n        this.errorOverlayDiv = document.createElement('div');\r\n        this.errorOverlayDiv.id = 'error-overlay-nav';\r\n        errorOverlayWrapperDiv.appendChild(this.errorOverlayDiv);\r\n        this.errorOverlayDiv.innerHTML = this.html;\r\n\r\n        this.errorMainPage = document.getElementById('error-main-page');\r\n        this.errorContactPage = document.getElementById('error-contact-page');\r\n        this.errorPrivacyPage = document.getElementById('error-privacy-page');\r\n        this.errorSendPage = document.getElementById('error-send-page');\r\n        this.dismissConfirmPage = document.getElementById('dismiss-confirm-page');\r\n        this.errorErrorPage = document.getElementById('error-error-page');\r\n        this.errorSentPage = document.getElementById('error-sent-page');\r\n\r\n        this.errorStyle = document.createElement('style');\r\n        this.errorStyle.id = 'error-style';\r\n        this.errorStyle.innerText = this.css;\r\n        document.head.appendChild(this.errorStyle);\r\n\r\n        document.getElementById('show-other-options-button').addEventListener('click', ev => {\r\n            document.getElementById('show-other-options-button').remove();\r\n            document.getElementById('dismiss-button').className = 'error-button';\r\n            document.getElementById('restart-button').className = 'error-button';\r\n            document.getElementById('restart-button').parentElement.style.height = '150px';\r\n        });\r\n        document.getElementById('goto-error-report-button').addEventListener('click', ev => {\r\n            this.goToPage(this.errorContactPage);\r\n        });\r\n        document.getElementById('dismiss-button').addEventListener('click', ev => {\r\n            this.goToPage(this.dismissConfirmPage);\r\n        });\r\n        document.getElementById('restart-button').addEventListener('click', ev => {\r\n            this.restartApp();\r\n        });\r\n        document.getElementById('error-dismiss-button').addEventListener('click', ev => {\r\n            this.closeError();\r\n        });\r\n        document.getElementById('error-restart-button').addEventListener('click', ev => {\r\n            this.restartApp();\r\n        });\r\n        document.getElementById('sent-dismiss-button').addEventListener('click', ev => {\r\n            this.closeError();\r\n        });\r\n        document.getElementById('sent-restart-button').addEventListener('click', ev => {\r\n            this.restartApp();\r\n        });\r\n\r\n        document.getElementById('dismiss-confirm-button').addEventListener('click', ev => {\r\n            this.closeError();\r\n        });\r\n        document.getElementById('dismiss-confirm-back-button').addEventListener('click', ev => {\r\n            this.goBack(this.errorMainPage);\r\n        });\r\n        document.getElementById('error-contact-next-button').addEventListener('click', ev => {\r\n            if (!this.enableContactNext) {\r\n                // TODO: Some feedback\r\n                return;\r\n            }\r\n            window.localStorage.setItem('error-contact-info', (<HTMLTextAreaElement> document.getElementById('error-contact-info')).value);\r\n            window.localStorage.setItem('error-do-not-contact', (<HTMLInputElement> document.getElementById('error-do-not-contact')).checked ? 'true' : 'false');\r\n            this.goToPage(this.errorPrivacyPage);\r\n        });\r\n        document.getElementById('error-privacy-next-button').addEventListener('click', ev => {\r\n            this.goToPage(this.errorSendPage);\r\n            document.getElementById('error-log-data').innerText = this.getErrorReportData();\r\n        });\r\n        document.getElementById('error-contact-back-button').addEventListener('click', ev => {\r\n            this.goBack(this.errorMainPage);\r\n        });\r\n        document.getElementById('error-privacy-back-button').addEventListener('click', ev => {\r\n            this.goBack(this.errorContactPage);\r\n        });\r\n        document.getElementById('error-send-back-button').addEventListener('click', ev => {\r\n            this.goBack(this.errorPrivacyPage);\r\n        });\r\n        document.getElementById('error-send-button').addEventListener('click', ev => {\r\n            document.getElementById('error-send-button').innerText = 'Sending...';\r\n            document.getElementById('error-send-button').className = 'error-button error-button-disabled';\r\n            this.submitErrorReportData();\r\n        });\r\n\r\n        (<HTMLTextAreaElement> document.getElementById('error-contact-info')).value = window.localStorage.getItem('error-contact-info');\r\n        (<HTMLInputElement> document.getElementById('error-do-not-contact')).checked = window.localStorage.getItem('error-do-not-contact') === 'true';\r\n\r\n        (<HTMLInputElement> document.getElementById('error-do-not-contact')).addEventListener('change', ev => { this.validateContactInfo(); });\r\n        (<HTMLInputElement> document.getElementById('error-contact-info')).addEventListener('input', ev => { this.validateContactInfo(); });\r\n\r\n        this.validateContactInfo();        \r\n\r\n        for (let i = this.errorOverlayDiv.children.length - 1; i >= 0; i--) {\r\n            this.errorOverlayDiv.children.item(i).remove();\r\n        }\r\n\r\n       this.errorOverlayDiv.appendChild(this.errorMainPage);\r\n    }\r\n\r\n    restartApp() {\r\n//        if (Device && <any> Device.cordova) {\r\n            // If native, put up a message and say the app will now close, please open it again and retry.\r\n//            if ((<any>navigator).app) {\r\n//                (<any>navigator).app.exitApp();\r\n//            } else if ((<any>navigator).device) {\r\n//                (<any>navigator).device.exitApp();\r\n//            } else {\r\n//                window.close();\r\n//            }\r\n\r\n            // TODO: Message: The application has not closed, please force quit for app, and reopen it.\r\n//        } else {\r\n            // TODO: Reload the original URL used to open it.... need to save that somewhere!?\r\n            document.location.reload(true);\r\n//        }\r\n    }\r\n\r\n    closeError() {\r\n        document.getElementById('error-overlay').remove();\r\n        this.errorStyle.remove();\r\n    }\r\n\r\n    validateContactInfo() {\r\n        this.enableContactNext = ((<HTMLInputElement> document.getElementById('error-do-not-contact')).checked || (<HTMLTextAreaElement> document.getElementById('error-contact-info')).value.length > 0);\r\n        document.getElementById('error-contact-next-button').className = this.enableContactNext ? 'error-button' : 'error-button error-button-disabled';\r\n    }\r\n\r\n    goToPage(page: HTMLElement) {\r\n        if (this.navigating) return;\r\n        this.navigating = true;\r\n\r\n        let currentPage = <HTMLElement> this.errorOverlayDiv.getElementsByClassName('error-page').item(0);\r\n\r\n        this.errorOverlayDiv.appendChild(page);\r\n\r\n        setTimeout(() => {\r\n            page.classList.add('error-page-animating');\r\n            currentPage.classList.add('error-page-animating');\r\n            currentPage.style.left = '-100%';\r\n            page.style.left = '-100%';\r\n            setTimeout(() => {\r\n                currentPage.remove();\r\n                page.style.left = '0';\r\n                page.classList.remove('error-page-animating');\r\n                currentPage.classList.remove('error-page-animating');\r\n                this.navigating = false;\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    goBack(page: HTMLElement) {\r\n        if (this.navigating) return;\r\n        this.navigating = true;\r\n\r\n        let currentPage = <HTMLElement> this.errorOverlayDiv.getElementsByClassName('error-page').item(0);\r\n\r\n        page.style.left = '-100%';\r\n        currentPage.style.left = '-100%';\r\n\r\n        this.errorOverlayDiv.insertBefore(page, currentPage);\r\n        setTimeout(() => {\r\n            page.classList.add('error-page-animating');\r\n            currentPage.classList.add('error-page-animating');\r\n            currentPage.style.left = '0';\r\n            page.style.left = '0';\r\n            setTimeout(() => {\r\n                currentPage.remove();\r\n                page.classList.remove('error-page-animating');\r\n                currentPage.classList.remove('error-page-animating');\r\n                this.navigating = false;\r\n            }, 500);\r\n        });\r\n    }\r\n\r\n    populateErrorLogData() {\r\n        this.errorLogData = LoggerStorageAppender.appenders.get('default').stringDump();\r\n    }\r\n\r\n    getErrorHeaderData(): Object {\r\n        return {\r\n            'time' : new Date().toISOString(),\r\n            'userAgent' : navigator.userAgent,\r\n            'platform' : navigator.platform,\r\n            'version' : BuildInfo.version,\r\n//            'devicePlatform' : Device && Device.platform ? Device.platform : 'undefined',\r\n//            'deviceModel' : Device && Device.model ? Device.model : 'undefined',\r\n//            'deviceVersion' : Device && Device.version ? Device.version : 'undefined',\r\n//            'deviceNative' : Device && Device.cordova ? Device.cordova : 'undefined',\r\n            'contactInfo' : 'true' === localStorage.getItem('error-do-not-contact') ? 'Do Not Contact' : localStorage.getItem('error-contact-info')\r\n        };\r\n\r\n    }\r\n\r\n    getErrorReportData(): string {\r\n        let data = '';\r\n        let headerData = this.getErrorHeaderData();\r\n        Object.keys(headerData).forEach(key => {data += key + ':' + headerData[key] + '\\n'; });\r\n        data += '\\n' + this.errorLogData;\r\n        return data;\r\n    }\r\n\r\n    submitErrorReportData() {\r\n        var xmlhttp = new XMLHttpRequest();\r\n\r\n        xmlhttp.onreadystatechange = ev => {  \r\n            if (xmlhttp.readyState === 4) {  \r\n                if (xmlhttp.status === 200) {\r\n                    this.goToPage(this.errorSentPage);\r\n                } else {  \r\n                    this.goToPage(this.errorErrorPage);\r\n                    let errorReportData = this.getErrorReportData();\r\n                    if (errorReportData.length > 20000) errorReportData = errorReportData.substr(0, 20000);\r\n                    (<HTMLLinkElement> document.getElementById('error-email-button')).href += encodeURIComponent(errorReportData.split('\\n').join('\\\\n'));\r\n                }  \r\n            }  \r\n        }; \r\n\r\n        xmlhttp.onerror = ev => {\r\n            this.goToPage(this.errorErrorPage);\r\n            let errorReportData = this.getErrorReportData();\r\n            if (errorReportData.length > 20000) errorReportData = errorReportData.substr(0, 20000);\r\n            (<HTMLLinkElement> document.getElementById('error-email-button')).href += encodeURIComponent(errorReportData.split('\\n').join('\\\\n'));\r\n        };\r\n\r\n        xmlhttp.open('POST', 'https://api.freebudgetapp.com/submiterror');\r\n        xmlhttp.setRequestHeader('Content-Type', 'application/json;charset=UTF-8');\r\n        let data = this.getErrorHeaderData();\r\n        data['log'] = this.errorLogData;\r\n        xmlhttp.send(JSON.stringify(data));\r\n\r\n    }\r\n}\r\n\r\nexport class LoggerUINotifierAppender implements LoggerAppender {\r\n\r\n    public static instance: LoggerUINotifierAppender = new LoggerUINotifierAppender();\r\n    private _handler: LoggerUINotifierAppenderHandler;\r\n\r\n    public get handler(): LoggerUINotifierAppenderHandler {\r\n        return this._handler || this.defaultHandler;\r\n    }\r\n\r\n    public set handler(value: LoggerUINotifierAppenderHandler) {\r\n        this._handler = value;\r\n    }\r\n\r\n    private defaultHandler: LoggerUINotifierAppenderHandler = new DefaultLoggerUINotifierAppenderHandler();\r\n\r\n    constructor() {\r\n        LoggerUINotifierAppender.instance = this;\r\n    }\r\n\r\n     log (level: number, data: any[]) {\r\n\r\n        if (level !== Logger.ERROR) return;\r\n\r\n        let message = data.length > 0 ? Logger.stringValue(data[0]) : 'Log';\r\n\r\n        if (this.handler) {\r\n            try {\r\n                this.handler.handle(message);\r\n            } catch (e) {\r\n                this.defaultHandler.handle(message);\r\n            }\r\n        } else {\r\n            this.defaultHandler.handle(message);\r\n        }\r\n\r\n     }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger-ui-notifier-appender.ts","export class BuildInfo {\r\n    static version = '%BUILD_INFO_VERSION%';\r\n    static buildDateYYYYMMDD = '%BUILD_INFO_BUILD_DATE_YYYYMMDD%';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/build-info.ts","import { Injectable } from \"@angular/core\";\r\nimport { PersistenceProviderManager } from \"../db/persistence-provider-manager\";\r\nimport { DbPersistenceProvider } from \"../db/db-persistence-provider\";\r\n\r\nexport class BankLinkLocalInfo {\r\n    autoSync: boolean;\r\n    lastSync: number;\r\n    errorCount: number;\r\n    cancelledCount: number;\r\n    pauseAutoSync: boolean;\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class BankLinkLocal {\r\n\r\n    private persistence: DbPersistenceProvider;\r\n\r\n    constructor(persistenceProvider: PersistenceProviderManager) {\r\n        this.persistence = persistenceProvider.provide();\r\n    }\r\n\r\n    getInfo(bankLinkUuid: string): BankLinkLocalInfo {\r\n        let infoString = this.persistence.keyStore('bl_' + bankLinkUuid, 'info');\r\n        if (infoString == null) return new BankLinkLocalInfo();\r\n        return JSON.parse(infoString);\r\n    }\r\n\r\n    private saveInfo(bankLinkUuid: string, info: BankLinkLocalInfo) {\r\n        if (info.errorCount > 0 || info.cancelledCount > 1) info.pauseAutoSync = true; // TODO: Notify / make this configurable\r\n        else info.pauseAutoSync = false;\r\n        \r\n        this.persistence.keyStore('bl_' + bankLinkUuid, 'info', JSON.stringify(info));\r\n    }\r\n\r\n    updateInfo(bankLinkUuid: string, fun: (info: BankLinkLocalInfo) => void) {\r\n        let info = this.getInfo(bankLinkUuid);\r\n        fun(info);\r\n        this.saveInfo(bankLinkUuid, info);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-link-local.ts","import {ViewController, NavParams} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport { Autofocus } from \"../../services/autofocus\";\r\n\r\n@Component({\r\n  templateUrl: 'add-budget.html'\r\n})\r\nexport class AddBudgetModal {\r\n  editing: boolean;\r\n  budgetName: string;\r\n  \r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, public autofocus: Autofocus) {\r\n    this.viewCtrl = viewCtrl;\r\n\r\n    if (navParams.data && navParams.data.budgetName) {\r\n      this.editing = true;\r\n      this.budgetName = navParams.data.budgetName;\r\n    } else {\r\n      this.editing = false;\r\n    }\r\n\r\n\r\n    \r\n  }\r\n  \r\n  submit(event: Event) {\r\n    this.viewCtrl.dismiss({'budgetName': this.budgetName});\r\n    event.preventDefault();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-budget/add-budget.ts","import {NavController, ViewController, NavParams, AlertController, App} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Category} from '../../data/records/category';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {InitCategoryTransaction} from '../../data/transactions/init-category-transaction';\r\nimport {Component} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-category.html'\r\n})\r\nexport class AddEditCategoryModal {\r\n  budget: Db;\r\n  editing: boolean;\r\n  category: Category;\r\n  categoryName: string;\r\n  transaction: InitCategoryTransaction;\r\n  \r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController, private appController: App) {\r\n    this.viewCtrl = viewCtrl;\r\n    this.nav = nav;\r\n    \r\n    this.budget = dbms.getDb(navParams.data.budgetId);\r\n    \r\n    if (navParams.data.categoryId) {\r\n      this.editing = true;\r\n      this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\r\n      this.categoryName = this.category.name;\r\n      this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategoryTransaction)[0];\r\n    } else {\r\n      this.editing = false;\r\n    }\r\n    \r\n  }\r\n  \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    var t;\r\n    if (! this.editing) {\r\n      t = new InitCategoryTransaction();\r\n    } else {\r\n      t = this.transaction;\r\n    }\r\n    \r\n    t.categoryName = this.categoryName;\r\n    this.budget.applyTransaction(t);\r\n\r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteCategoryConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this category and everything in it?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteCategory();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n  deleteCategory() {\r\n    this.budget.deleteTransaction(this.transaction);\r\n    \r\n    this.appController.getRootNav().pop({animate: false, duration: 0});\r\n    this.viewCtrl.dismiss();\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-category/add-edit-category.ts","import {Injectable} from '@angular/core';\r\nimport {Modal, ModalController} from 'ionic-angular';\r\nimport {Logger} from './logger';\r\n\r\n@Injectable()\r\nexport class EditorProvider {\r\n        \r\n    private logger: Logger = Logger.get('EditorProvider');\r\n\r\n    private modalProviders: Array<ModalProvider>;\r\n        \r\n    constructor(private modalController: ModalController) {\r\n        this.modalProviders = [];\r\n    }\r\n    \r\n    registerModalProvider(provider: ModalProvider) {\r\n        this.modalProviders.unshift(provider);\r\n    }\r\n       \r\n    getModal(params: any, data?: any): Modal {\r\n        for (var i = 0; i < this.modalProviders.length; i++) {\r\n            let modalClass = this.modalProviders[i].provide(params);\r\n            if (modalClass) return this.modalController.create(modalClass, data);\r\n        }\r\n\r\n        this.logger.error({msg: 'No modal provider found', params: params});\r\n        throw new Error('No modal provider for ' + params);      \r\n    }\r\n    \r\n}\r\n\r\nexport abstract class ModalProvider {\r\n    abstract provide(params: any): any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/editor-provider.ts","import {NavController, ViewController, NavParams, AlertController} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Category} from '../../data/records/category';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {InitSimpleTransaction} from '../../data/transactions/init-simple-transaction';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport {Utils} from '../../services/utils';\r\nimport { Big } from 'big.js';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-transaction.html'\r\n})\r\nexport class AddEditTransactionModal {\r\n\r\n  data: { expense: boolean; date?: string; description?: string; amount?: string } = {expense: true};\r\n\r\n  budget: Db;\r\n  editing: boolean;\r\n  category: Category;\r\n  transaction: InitSimpleTransaction;\r\n  \r\n  constructor(private configuration: Configuration, public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController) {\r\n    this.viewCtrl = viewCtrl;\r\n    this.nav = nav;\r\n    \r\n    this.budget = dbms.getDb(navParams.data.budgetId);\r\n    this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\r\n\r\n    if (navParams.data.transactionId) {\r\n      this.editing = true;\r\n      let transactionRecord = this.budget.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\r\n      this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(transactionRecord, InitSimpleTransaction)[0];\r\n\r\n      this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\r\n      if (this.transaction.amount.cmp(Big(0)) < 0) {\r\n        this.data.expense = false;\r\n        this.data.amount = this.transaction.amount.times(-1).toString();\r\n      } else {\r\n        this.data.amount = this.transaction.amount.toString();\r\n      }\r\n      this.data.description = this.transaction.description;\r\n    } else {\r\n      this.editing = false;\r\n      this.data.date = Utils.nowIonic();\r\n    }\r\n    \r\n  }\r\n    \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    var t: InitSimpleTransaction;\r\n    if (! this.editing) {\r\n      t = new InitSimpleTransaction();\r\n    } else {\r\n      t = this.transaction;\r\n    }    \r\n    \r\n    t.amount = new Big((this.data.amount).replace(',', ''));\r\n    if (!this.data.expense) {\r\n      t.amount = t.amount.times(-1);\r\n    }\r\n    t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\r\n    t.description = this.data.description;\r\n    t.categoryId = this.category.id;\r\n    this.budget.applyTransaction(t);\r\n\r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteTransactionConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this transaction?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteTransaction();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n  deleteTransaction() {\r\n    this.budget.deleteTransaction(this.transaction);\r\n    \r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  toggleExpense() {\r\n    this.data.expense = !this.data.expense;\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-transaction/add-edit-transaction.ts","import {NavController, ViewController, NavParams, AlertController, ModalController} from 'ionic-angular';\r\nimport {Category} from '../../data/records/category';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Engine} from '../../engine/engine';\r\nimport {CreateSplitTransfer} from '../../data/transactions/create-split-transfer';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport {Utils} from '../../services/utils';\r\nimport { Big } from 'big.js';\r\nimport {AddEditSplitTransferLineModal} from './add-edit-split-transfer-line';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-split-transfer.html'\r\n})\r\nexport class AddEditSplitTransferModal {\r\n\r\n  data: {\r\n    out: boolean;\r\n    date: string;\r\n    description: string;\r\n    amount: string;\r\n    categoryId: number;\r\n    accountId: number;\r\n    accountId2: number;\r\n    lines: Array<{\r\n      categoryId: number;\r\n      amount: string;\r\n    }>\r\n  };\r\n\r\n  engine: Engine;\r\n  editing: boolean;\r\n  category: Category;\r\n  transaction: CreateSplitTransfer;\r\n  categories: Category[];\r\n  \r\n  constructor(private configuration: Configuration, private modalController: ModalController, public viewCtrl: ViewController, private navParams: NavParams, private engineFactory: EngineFactory, private nav: NavController, private alertController: AlertController) {\r\n    this.engine = engineFactory.getEngineById(navParams.data.budgetId);\r\n    this.engine.getCategory(navParams.data.categoryId);\r\n    this.category = this.engine.db.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\r\n    this.categories = this.engine.getCategories('alphabetical');\r\n\r\n    // TODO: Validation that amounts must be equal\r\n    this.data = <any> {};\r\n    this.data.lines = [];\r\n\r\n\r\n    if (navParams.data.transactionId) {\r\n      this.editing = true;\r\n      let transactionRecord = this.engine.db.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\r\n      this.transaction = this.engine.db.transactionProcessor.findTransactionsForRecord(transactionRecord, CreateSplitTransfer)[0];\r\n\r\n      this.data.date = Utils.toIonicFromYYYYMMDD(this.transaction.date);\r\n      this.data.out = this.transaction.amounts[0].amount.cmp(Big(0)) >= 0;\r\n      this.data.accountId = this.transaction.accountId;\r\n      this.data.accountId2 = this.transaction.accountId2;\r\n      this.data.amount = this.totalAmount().toString();\r\n      this.data.description = this.transaction.description;\r\n      this.data.categoryId = this.transaction.categoryId;\r\n      this.transaction.amounts.forEach(l => {\r\n        this.data.lines.push({categoryId: l.categoryId, amount: l.amount.times(this.data.out ? 1 : -1)+\"\"});\r\n      });\r\n    } else {\r\n      this.editing = false;\r\n      this.data.out = true;\r\n      this.data.date = Utils.nowIonic();\r\n      this.data.lines.push({\r\n        categoryId: this.category.id,\r\n        amount: ''\r\n      });\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  editLine(line: {categoryId: number; amount: string}) {\r\n    let modal = this.modalController.create(AddEditSplitTransferLineModal, {\r\n      parent: this,\r\n      lineIndex: this.data.lines.indexOf(line)\r\n    }, {showBackdrop: false, enableBackdropDismiss: false});\r\n    \r\n    modal.present();\r\n  }\r\n\r\n  totalAmount(): Big  {\r\n    return this.data.lines.map(line => line.amount).reduce(\r\n      (total, amount) => new Big((amount || '0').replace(',', '')).plus(total),\r\n      new Big('0')\r\n    ).abs();\r\n  }\r\n\r\n  amountRemaining(): Big {\r\n    return new Big((this.data.amount || '0').replace(',', '')).minus(this.totalAmount());\r\n  }\r\n\r\n  newLine() {\r\n    this.data.lines.push({\r\n      categoryId: null,\r\n      amount: ''\r\n    });\r\n    this.editLine(this.data.lines[this.data.lines.length-1]);\r\n  }\r\n    \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    var t: CreateSplitTransfer;\r\n    if (! this.editing) {\r\n      t = new CreateSplitTransfer();\r\n    } else {\r\n      t = this.transaction;\r\n    }    \r\n    \r\n    t.date = Utils.toYYYYMMDDFromIonic(this.data.date);\r\n    t.description = this.data.description;\r\n    t.accountId = Number(this.data.accountId);\r\n    t.accountId2 = Number(this.data.accountId2);\r\n    t.categoryId = Number(this.data.categoryId);\r\n\r\n    // Always clear out the records in the transaction and not \"merge\" them\r\n    // Our indexes should be preserved...\r\n    t.amounts = [];\r\n    this.data.lines.forEach((line) => {\r\n      t.amounts.push({\r\n        categoryId: line.categoryId,\r\n        amount: new Big((line.amount || '0').replace(',', '')).times(this.data.out ? 1 : -1),\r\n      });\r\n    });\r\n\r\n\r\n    this.engine.db.applyTransaction(t);\r\n\r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteTransactionConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this entire transaction?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteTransaction();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n  deleteTransaction() {\r\n    this.engine.db.deleteTransaction(this.transaction);\r\n    \r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  toggleOut() {\r\n    this.data.out = !this.data.out;\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transfer/add-edit-split-transfer.ts","import {NavController, ViewController, NavParams, AlertController} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Category} from '../../data/records/category';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Engine} from '../../engine/engine';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {InitCategoryTransferTransaction} from '../../data/transactions/init-category-transfer-transaction';\r\nimport {Component} from '@angular/core';\r\nimport {Utils} from '../../services/utils';\r\nimport { Big } from 'big.js';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-transfer.html'\r\n})\r\nexport class AddEditTransferModal {\r\n\r\n  data: { date?: string; description?: string; amount?: string; categoryFrom?: any; categoryTo?: any; } = {};\r\n\r\n  budget: Db;\r\n  editing: boolean;\r\n  transfer: InitCategoryTransferTransaction;\r\n  categories: Category[];\r\n  engine: Engine;\r\n\r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private engineFactory: EngineFactory, private nav: NavController, private alertController: AlertController) {\r\n    this.engine = engineFactory.getEngineById(navParams.data.budgetId);\r\n    this.budget = this.engine.db;\r\n    \r\n    this.categories = this.engine.getCategories('alphabetical');\r\n\r\n    if (navParams.data.transactionId) {\r\n      this.editing = true;\r\n      let transactionRecord = this.budget.transactionProcessor.table(Transaction).by('id', navParams.data.transactionId);\r\n      this.transfer = <InitCategoryTransferTransaction> this.budget.transactionProcessor.findAllTransactionsForRecord(transactionRecord)[0];\r\n      \r\n      this.data.date = Utils.toIonicFromYYYYMMDD(this.transfer.date);\r\n      this.data.amount = this.transfer.amount + '';\r\n      this.data.description = this.transfer.description;\r\n      this.data.categoryFrom = this.transfer.fromCategoryId;\r\n      this.data.categoryTo = this.transfer.toCategoryId;\r\n    } else {\r\n      this.editing = false;\r\n      this.transfer = new InitCategoryTransferTransaction();\r\n      this.data.categoryFrom = navParams.data.fromCategoryId;\r\n      this.data.date = Utils.nowIonic();\r\n    }\r\n    \r\n    \r\n  }\r\n  \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n    \r\n    this.transfer.amount = new Big(this.data.amount);\r\n    this.transfer.date = Utils.toYYYYMMDDFromIonic(this.data.date);\r\n    this.transfer.description = this.data.description;\r\n    this.transfer.fromCategoryId = +this.data.categoryFrom;\r\n    this.transfer.toCategoryId = +this.data.categoryTo;\r\n    this.budget.applyTransaction(this.transfer);\r\n\r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteTransactionConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this transaction?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteTransaction();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n  deleteTransaction() {\r\n    this.budget.deleteTransaction(this.transfer);\r\n    \r\n    this.viewCtrl.dismiss();\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-transfer/add-edit-transfer.ts","import { Injectable } from \"@angular/core\";\r\nimport { App, NavController } from \"ionic-angular\";\r\nimport { BudgetPage } from \"../pages/budget/budget\";\r\nimport { DevPage } from \"../pages/dev/dev\";\r\nimport { HomePage } from \"../pages/home/home\";\r\nimport { Dbms } from \"../db/dbms\";\r\nimport { PersistenceProviderManager } from \"../db/persistence-provider-manager\";\r\nimport { NoPersistenceProvider } from \"../db/no-persistence-provider\";\r\nimport { InitBudgetTransaction } from \"../data/transactions/init-budget-transaction\";\r\nimport { TransactionSerializer } from \"../db/transaction-serializer\";\r\nimport { Logger } from \"../services/logger\";\r\n\r\n@Injectable()\r\nexport class DemoSetup {\r\n    vars: any = {};\r\n    nav: NavController;\r\n\r\n    script: Array<any>;\r\n    currentLine: number;\r\n\r\n    classMap = {\r\n        budget: BudgetPage,\r\n        dev: DevPage\r\n    };\r\n\r\n    constructor(private ionicApp: App, private dbms: Dbms, private persistenceProviderManager: PersistenceProviderManager, private transactionSerializer: TransactionSerializer) {\r\n        \r\n    }\r\n\r\n    async setup(script: Array<any>) {\r\n        this.script = script;\r\n        this.currentLine = 0;\r\n\r\n        this.nav = this.ionicApp.getActiveNavs()[0];\r\n        await this.executeScript();\r\n        await this.fadeIn();\r\n    }\r\n\r\n    async executeScript() {\r\n        if (this.currentLine >= this.script.length) return;\r\n\r\n        let line = this.script[this.currentLine].slice();\r\n        this.currentLine++;\r\n\r\n        Object.keys(this.vars).forEach(key => {\r\n            for (let i = 1; i < line.length; i++) {\r\n                line[i] = JSON.parse(JSON.stringify(line[i]).replace('${' + key + '}', this.vars[key]));\r\n            }\r\n        });\r\n\r\n        switch (line[0]) {\r\n            case 'eval':\r\n                let result = eval ('(' + line[1] + ')');\r\n                if (result instanceof Promise) await (<Promise<any>> result).then();\r\n                break;\r\n            case 'nav':\r\n            // TODO: How to get ID of budget / category, etc ?\r\n            /* Maybe a get/set variable and then can inject those into the scripts using some find/replace, like ${variableName}\r\n            Some command can implicitly set a variable\r\n            Or have query commands to get a budget / category by name, etc ?\r\n\r\n            */\r\n\r\n                await this.nav.push(this.classMap[line[1]], line.length > 2 ? line[2] : undefined, {animate: false});\r\n                break;\r\n            case 'root':\r\n                await this.nav.setRoot(this.classMap[line[1]], line.length > 2 ? line[2] : undefined, {animate: false});\r\n                break;\r\n            case 'create-db':\r\n                let db = await this.dbms.createDb();\r\n                this.vars['current-db-id'] = db.id;\r\n                let t = new InitBudgetTransaction();\r\n                t.budgetName = line[1];\r\n                db.applyTransaction(t);\r\n                break;\r\n            case 'transaction':\r\n                let transaction = this.transactionSerializer.newTransaction(line[1], line[2]);\r\n                this.dbms.getDb(this.vars['current-db-id']).applyTransaction(transaction);\r\n                break;\r\n            case 'import-db' :\r\n                // TODO: Import a whole database json so we can just use a pre setup database ? - Maybe base this off an \"export / clone\" database command so we don't have to make the database Ids portable\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid Setup Command \" + line[0]);\r\n        }\r\n\r\n        return this.executeScript();\r\n            \r\n    }\r\n\r\n    async clear() {\r\n        await this.fadeOut();\r\n        \r\n        await this.nav.popToRoot({animate: false});\r\n        //await this.nav.setRoot(HomePage, undefined, {animate: false});        \r\n        let persistenceProvider = this.persistenceProviderManager.provide();\r\n        if (persistenceProvider instanceof NoPersistenceProvider) {\r\n            (<NoPersistenceProvider> persistenceProvider).reset();\r\n            await this.dbms.init();\r\n        }\r\n        //Close any modals\r\n\r\n        this.vars = {};\r\n    }\r\n\r\n    async reset() {\r\n        await this.clear();\r\n        await this.setup(this.script);\r\n    }\r\n\r\n    async fadeOut(instant: boolean = false) {\r\n\r\n        if (document.getElementById('demo-blank')) {\r\n            document.getElementById('demo-blank').className='active';            \r\n        } else {\r\n            let ele = document.createElement('div');\r\n            ele.id = 'demo-blank';\r\n            document.body.appendChild(ele);\r\n            if (instant) {\r\n                ele.className='active';\r\n            } else {\r\n                await new Promise(resolve => setTimeout(() => {ele.className='active'; resolve();}));\r\n                await new Promise(resolve => setTimeout(resolve, 1000));\r\n            }\r\n        }\r\n    }\r\n\r\n    async fadeIn() {\r\n\r\n        if (!document.getElementById('demo-blank')) return;\r\n\r\n        let ele = document.getElementById('demo-blank');\r\n        ele.className = '';\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n        ele.remove();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-setup.ts","import {NavController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Logger} from '../../services/logger';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Notifications} from '../../services/notifications';\r\nimport {LoggerUINotifierAppender} from '../../services/logger-ui-notifier-appender';\r\nimport {InAppBrowser} from '@ionic-native/in-app-browser';\r\nimport cronstrue from 'cronstrue';\r\nimport { DemoUI } from \"../../demo/demo-ui\";\r\nimport { DemoPlayer } from \"../../demo/demo-player\";\r\nimport { Utils } from \"../../services/utils\";\r\n\r\n@Component({\r\n  templateUrl: 'dev.html'\r\n})\r\nexport class DevPage {\r\n  randomFooterId: string;\r\n\r\n  testamount1 = 'hi there';\r\n  _testamount2;\r\n\r\n  public cronInput: string;\r\n\r\n  get testamount2() {\r\n    return this._testamount2;\r\n  }\r\n  set testamount2(value) {\r\n    this._testamount2 = value.toUpperCase();\r\n  }\r\n  testamount3 = 'ASD';\r\n  \r\n  constructor(private nav: NavController, private dbms: Dbms, public configuration: Configuration, private notifications: Notifications, private inAppBrowser: InAppBrowser) {\r\n    \r\n  }\r\n    \r\n  toUpper3(nv: string) {\r\n    this.testamount3 = nv.toUpperCase();\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    this.randomFooterId = 'footer_' + Utils.randomChars(10);\r\n    let div = document.createElement('div');\r\n    div.innerHTML = '<div id=\"' + this.randomFooterId + '\" style=\"position:fixed; height:100px; z-index:100; background-color:gainsboro; left:0; right:0; bottom:0\"><button ion-button small (mousedown)=\"$event.preventDefault();\" (touchtap)=\"$event.preventDefault();\" (click)=\"testClick()\">Test Button :)</button></div>';\r\n    document.querySelector('.app-root').appendChild(div.firstChild);\r\n  }\r\n\r\n  ionViewWillLeave() {\r\n    document.getElementById(this.randomFooterId).remove();\r\n  }\r\n\r\n  testError() {\r\n    Logger.get(\"dev\").info({message: \"about to throw an error\"}, \"And trying a multi part log before it\");\r\n    throw new Error('Muahahaha');\r\n  }\r\n\r\n  testLogError() {\r\n    Logger.get(\"dev\").info({message: \"about to log an error\"});\r\n    Logger.get('dev').error(\"Logging an error\");\r\n  }\r\n\r\n  testPromiseRejection() {\r\n    Logger.get(\"dev\").info(\"Unhandled Promise Rejection Test\");\r\n    new Promise((resolve, reject) => {\r\n      reject(\"Simulated Error\");\r\n    }).then(() => {Logger.get('dev').info('This should never be logged')});\r\n  }\r\n\r\n  openErrorHandler() {\r\n    LoggerUINotifierAppender.instance.handler.handle('Opening Error Handler');\r\n  }\r\n\r\n  launchInAppBrowserTest1() {\r\n    let browser = this.inAppBrowser.create('https://www.google.com', '_blank');\r\n    let subscription = browser.on('loadstop').subscribe(ev => {\r\n        let js = 'alert(5 + 7);location.href=\"http://www.example.com\";5 + 7;';\r\n        Logger.get(\"dev\").info(\"executing js: \" + js);\r\n        browser.executeScript({code: js}).then((val) => {\r\n          Logger.get(\"dev\").info(val);\r\n          alert(val);          \r\n        }).catch(err => {\r\n          Logger.get(\"dev\").error(err.message, err);\r\n        });\r\n        subscription.unsubscribe();\r\n    });\r\n  }\r\n\r\n  generateNotification() {\r\n    this.notifications.show({message: \"Notification at \" + Date.now()});\r\n  }\r\n\r\n  generateImportantNotification() {\r\n    this.notifications.show({message: \"Notification at \" + Date.now(), important: true, clickAction: {type: 'custom', data: () => alert('click!')}, category: 'dev.important'});\r\n  }\r\n\r\n  removeImportantNotification() {\r\n    this.notifications.remove({category: 'dev.important'});    \r\n  }\r\n\r\n\r\n  testClick() {\r\n    window.alert(':P');\r\n  }\r\n\r\n  humanReadableCron(): string {\r\n    try {\r\n      return cronstrue.toString(this.cronInput);\r\n    } catch (err) {\r\n      return err;\r\n    }\r\n  }\r\n\r\n  demoTest() {\r\n    let demo = new DemoUI();\r\n    setTimeout(() => demo.moveTo('#dev-cron-input'), 1000);\r\n\r\n  }\r\n\r\n  demoTest2() {\r\n    let demoRunner = new DemoUI();\r\n    let demo = new DemoPlayer(demoRunner, undefined);\r\n\r\n    // TODO: Compress this (should just be able to call 'click' and it will do a move wait click to the location... Or call it iClick or something ?)\r\n\r\n    demo.queue('move', '#dev-generate-notification');\r\n    demo.queue('wait', 300);\r\n    demo.queue('click', '#dev-generate-notification');\r\n    demo.queue('wait', 2000);\r\n    demo.queue('move', '#dev-cron-input');\r\n    demo.queue('wait', 300);\r\n    demo.queue('click', '#dev-cron-input');\r\n    demo.queue('wait', 600);\r\n    demo.queue('type', '#dev-cron-input', '0 * 5 * *');\r\n    demo.queue('wait', 1600);\r\n\r\n    demo.run();\r\n\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/dev/dev.ts","import {NavController, ViewController, NavParams, AlertController, App} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Account} from '../../data/records/account';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {BankProviderRegistry} from '../../bank/bank-provider-registry';\r\nimport {Engine} from '../../engine/engine';\r\nimport {CreateAccountTransaction} from '../../data/transactions/create-account-transaction';\r\nimport {Component} from '@angular/core';\r\nimport { Big } from 'big.js';\r\nimport { Configuration } from \"../../services/configuration-service\";\r\nimport { SetAccountBankLink } from \"../../data/transactions/set-account-bank-link\";\r\nimport { ProviderSchema } from \"../../bank/provider-interface\";\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-account.html'\r\n})\r\nexport class AddEditAccountModal {\r\n  emptyProviderSchema = new ProviderSchema();\r\n  db: Db;\r\n  engine: Engine;\r\n  editing: boolean;\r\n  data: {name: string; initialBalance: string; accountType: 'Cash' | 'Bank'; accountNumber: string; bankLinkId: number; bankLinkConfiguration: {}};\r\n  private _bankLink: BankLink;\r\n  transaction: CreateAccountTransaction;\r\n  bankLinkTransaction: SetAccountBankLink;\r\n  \r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController, private engineFactory: EngineFactory, private appController: App, private bankProviderRegistry: BankProviderRegistry, private configuration: Configuration) {    \r\n    this.db = dbms.getDb(navParams.data.budgetId);\r\n    this.engine = engineFactory.getEngineById(this.db.id);\r\n    this.data = <any>{};\r\n    this.data.bankLinkConfiguration = {};\r\n\r\n    if (navParams.data.accountId) {\r\n      this.editing = true;\r\n      let account = this.engine.getRecordById(Account, navParams.data.accountId);\r\n      this.data.name = account.name;\r\n      this.data.initialBalance = account.initialBalance == null ? \"0\" : account.initialBalance.toString();\r\n      this.data.accountType = account.accountType;\r\n      this.transaction = this.db.transactionProcessor.findTransactionsForRecord(account, CreateAccountTransaction)[0];\r\n      this.data.bankLinkId = account.bankLinkId;\r\n      if (this.bankLink != null) this.data.bankLinkConfiguration[this.bankLink.provider] = account.bankLinkConfiguration;\r\n      this.bankLinkTransaction = this.db.transactionProcessor.findTransactionsForRecord(account, SetAccountBankLink).pop();\r\n    } else {\r\n      this.editing = false;\r\n      this.transaction = new CreateAccountTransaction();\r\n      this.data.initialBalance = \"0\";\r\n      this.data.accountType = 'Bank';\r\n    }\r\n    \r\n  }\r\n\r\n  get uiBankLinkId(): any {\r\n    return this.data.bankLinkId == null ? -1 : this.data.bankLinkId;\r\n  }\r\n\r\n  set uiBankLinkId(bankLinkId) {\r\n    this.data.bankLinkId = bankLinkId === -1 ? undefined : bankLinkId;\r\n  }\r\n\r\n  get bankLink(): BankLink {\r\n    if (this.data.bankLinkId == null || this.data.accountType != 'Bank') {\r\n      this._bankLink = null;\r\n      return null;\r\n    }\r\n    if (this._bankLink == null || this.data.bankLinkId != this._bankLink.id) {\r\n      this._bankLink = this.engine.getRecordById(BankLink, this.data.bankLinkId);\r\n      if (this.data.bankLinkConfiguration[this._bankLink.provider] === undefined) this.data.bankLinkConfiguration[this._bankLink.provider] = {};\r\n    }\r\n    return this._bankLink;\r\n  }\r\n\r\n  getProviderSchema(): ProviderSchema {\r\n    return this.bankLink == null ? this.emptyProviderSchema : this.bankProviderRegistry.getProviderSchema(this.bankLink.provider);\r\n  }\r\n  \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    this.transaction.name = this.data.name;\r\n    this.transaction.initialBalance = new Big(this.data.initialBalance);\r\n    this.transaction.accountType = this.data.accountType;\r\n\r\n    this.db.applyTransaction(this.transaction);\r\n    let accountRecord = this.db.transactionProcessor.findRecordsForTransaction(this.transaction, Account)[0];\r\n\r\n    if (this.bankLinkTransaction != null && this.bankLink == null) {\r\n      this.db.undoTransaction(this.bankLinkTransaction);      \r\n    } else if (this.bankLink != null && this.bankLinkTransaction == null) {\r\n      this.bankLinkTransaction = new SetAccountBankLink();\r\n      this.bankLinkTransaction.accountId = accountRecord.id;\r\n      this.bankLinkTransaction.bankLinkId = this.data.bankLinkId;\r\n      this.bankLinkTransaction.configuration = this.data.bankLinkConfiguration[this.bankLink.provider];\r\n      this.db.applyTransaction(this.bankLinkTransaction);\r\n    } else if (this.bankLink != null && this.bankLinkTransaction != null) {\r\n      this.bankLinkTransaction.accountId = accountRecord.id;\r\n      this.bankLinkTransaction.bankLinkId = this.data.bankLinkId;\r\n      this.bankLinkTransaction.configuration = this.data.bankLinkConfiguration[this.bankLink.provider];\r\n      this.db.applyTransaction(this.bankLinkTransaction);\r\n      \r\n    }\r\n\r\n    this.viewCtrl.dismiss({accountId: accountRecord.id});\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteAccountConfirm() {\r\n    // TODO: Prolly better to archive it than delete it if anything linked to it\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this account and everything in it?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteAccount();\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n\r\n  \r\n  deleteAccount() {\r\n    this.db.deleteTransaction(this.transaction);\r\n    \r\n    this.appController.getRootNav().pop({animate: false, duration: 0});\r\n    this.viewCtrl.dismiss();\r\n\r\n  }\r\n\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-account/add-edit-account.ts","import {NavController, NavParams, ModalController, AlertController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Engine} from '../../engine/engine';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Account} from '../../data/records/account';\r\nimport {BankSync} from '../../bank/bank-sync';\r\nimport {Notifications} from '../../services/notifications';\r\nimport {Logger} from '../../services/logger';\r\nimport {StandardHostInterface} from '../../bank/standard-host-interface';\r\nimport { BankTransaction } from '../../data/records/bank-transaction';\r\nimport { ViewBankTransactionModal } from \"../../modals/view-bank-transaction/view-bank-transaction\";\r\nimport { BankLinkPage } from \"../bank-link/bank-link\";\r\nimport { Configuration } from \"../../services/configuration-service\";\r\nimport { BankTransactionIgnore } from \"../../data/transactions/bank-transaction-ignore\";\r\nimport { BankTransactionDelete } from \"../../data/transactions/bank-transaction-delete\";\r\n\r\n\r\n@Component({\r\n  templateUrl: 'bank-account.html'\r\n})\r\nexport class BankAccountPage {\r\n  \r\n  engine: Engine;\r\n  account: Account;\r\n  syncing: boolean;\r\n  bankTransactionTable: LokiCollection<BankTransaction>;\r\n  transactionView: LokiDynamicView<BankTransaction>;\r\n  transactionViewData: BankTransaction[] = [];\r\n  transactionViewDummyData = [];\r\n  transactionViewArrayData: BankTransaction[] = [];\r\n  transactionViewArrayDataBlank: BankTransaction = new BankTransaction();\r\n  multiSelectEnabled: boolean;\r\n  selected: {};\r\n  \r\n  private logger = Logger.get('BankPage');\r\n\r\n  constructor(private nav: NavController, private dbms: Dbms, private navParams: NavParams, private engineFactory: EngineFactory, private modalController: ModalController, private bankSync: BankSync, private notifications: Notifications, private standardHostInterface: StandardHostInterface, private configuration: Configuration, private alertController: AlertController) {\r\n    this.engine = this.engineFactory.getEngineById(navParams.data.budgetId);\r\n    this.account = this.engine.getRecordById(Account, navParams.data.accountId);\r\n    this.bankTransactionTable = this.engine.db.transactionProcessor.table(BankTransaction);\r\n    this.transactionView = <any> {data: function() {return this.transactionViewDummyData; }};\r\n    this.multiSelectEnabled = false;\r\n    this.selected = {};\r\n    // TODO: If ! touch enabled then start in multiselect mode?\r\n  }\r\n  \r\n  goBankLink() {\r\n    this.nav.push(BankLinkPage, {budgetId: this.engine.db.id, bankLinkId: this.account.bankLinkId});\r\n  }\r\n\r\n  isSyncing(): boolean {\r\n    return false;\r\n  }\r\n\r\n  refreshData() {\r\n    this.transactionViewData = this.transactionView.data();\r\n    this.transactionViewDummyData.push(new BankTransaction());\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.transactionView = this.bankTransactionTable.addDynamicView('accountBankTransactions_' + this.account.id)\r\n    .applyFind({'accountId': this.account.id})\r\n    .applySortCriteria([['date', true], ['id', false]]);\r\n    this.transactionViewData = this.transactionView.data();\r\n\r\n    this.logger.debug('WIll Enter Dynamic Views ' + this.bankTransactionTable.DynamicViews.length);\r\n\r\n    /*if (this.transactions.data().length <= this.transactionDisplayLimit) {\r\n      this.transactionDisplayLimit = 0;\r\n      this.infiniteScroll.enable(false);\r\n    }*/\r\n\r\n\r\n  }\r\n  ionViewDidLeave() {\r\n    this.bankTransactionTable.removeDynamicView(this.transactionView.name);\r\n    this.logger.debug('Did Leave Dynamic Views ' + this.bankTransactionTable.DynamicViews.length);\r\n    this.transactionView = <any> {data: function() {return this.transactionViewDummyData; }};\r\n    this.transactionViewData = [];\r\n  }\r\n\r\n  transactionViewArray(): BankTransaction[] {\r\n    this.transactionViewArrayData.length = 0;\r\n    this.transactionViewArrayData.push(... this.transactionViewDummyData);\r\n    this.transactionViewArrayData.push(... this.transactionView.data());\r\n    return this.transactionViewArrayData;\r\n  }\r\n\r\n  unreconciledTransactions(): BankTransaction[] {\r\n    return this.transactionView.data().filter(t => !t.x.reconciled)\r\n  }\r\n\r\n  openTransaction(t: BankTransaction) {\r\n    let modal = this.modalController.create(ViewBankTransactionModal, {budgetId: this.navParams.data.budgetId, bankTransactionId: t.id});\r\n    modal.present();\r\n  }\r\n\r\n  transactionListDateHeader(record, recordIndex, records) {\r\n    if (recordIndex === 0 || record.date !== records[recordIndex-1].date) return record;\r\n    return null;\r\n  }\r\n\r\n  toggleMultiSelect() {\r\n    this.multiSelectEnabled = !this.multiSelectEnabled;\r\n  }\r\n\r\n  selectAll() {\r\n    this.unselectAll();\r\n    this.unreconciledTransactions().forEach(t => this.selected[t.id] = true);\r\n  }\r\n\r\n  unselectAll() {\r\n    Object.keys(this.selected).forEach(key => this.selected[key] = false);\r\n  }\r\n\r\n  allSelected() {\r\n    return this.unreconciledTransactions().every(t => this.selected[t.id] === true);\r\n  }\r\n\r\n  anySelected() {\r\n    return this.unreconciledTransactions().some(t => this.selected[t.id] === true);    \r\n  }\r\n\r\n  ignoreItem(t: BankTransaction) {\r\n    let bti = new BankTransactionIgnore();\r\n    bti.bankTransactionId = t.id;\r\n    this.engine.db.applyTransaction(bti);\r\n  }\r\n\r\n  unignoreItem(t: BankTransaction) {\r\n    this.engine.db.transactionProcessor.findTransactionsForRecord(t, BankTransactionIgnore).forEach(bti => {\r\n      this.engine.db.deleteTransaction(bti);\r\n    });\r\n\r\n  }\r\n\r\n  deleteItem(t: BankTransaction) {\r\n    this.alertController.create({\r\n      message: 'Deleting this bank transaction is irreversable. You only want to do this in the event of an error, otherwise \"ignore\" the transaction.',\r\n      buttons: [\r\n        'Cancel',\r\n        {\r\n          text: 'Delete',\r\n          cssClass: 'danger',\r\n          handler: () => this.doDeleteItem(t)\r\n        }\r\n      ]\r\n    }).present();\r\n  }\r\n\r\n  doDeleteItem(t: BankTransaction) {\r\n    let btd = new BankTransactionDelete();\r\n    btd.bankTransactionId = t.id;\r\n    this.engine.db.applyTransaction(btd);\r\n  }\r\n\r\n  deleteSelected() {\r\n    this.alertController.create({\r\n      message: 'Deleting bank transactions is irreversable. You only want to do this in the event of an error, otherwise \"ignore\" the transaction.',\r\n      buttons: [\r\n        'Cancel',\r\n        {\r\n          text: 'Delete',\r\n          cssClass: 'danger',\r\n          handler: () =>  this.unreconciledTransactions().filter(t => this.selected[t.id] === true && !t.x.reconciled).forEach(t => this.doDeleteItem(t))\r\n        }\r\n      ]\r\n    }).present();\r\n  }\r\n\r\n  ignoreSelected() {\r\n    this.unreconciledTransactions()\r\n      .filter(t => this.selected[t.id] === true && !t.x.reconciled && !t.x.ignored)\r\n      .forEach(t => this.ignoreItem(t));\r\n  }\r\n\r\n  unignoreSelected() {\r\n    this.unreconciledTransactions()\r\n      .filter(t => this.selected[t.id] === true && !t.x.reconciled && t.x.ignored)\r\n      .forEach(t => this.unignoreItem(t));\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bank-account/bank-account.ts","import {NavController, NavParams, ModalController, AlertController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Engine} from '../../engine/engine';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Account} from '../../data/records/account';\r\nimport {AddEditAccountModal} from '../../modals/add-edit-account/add-edit-account';\r\nimport {BankSync} from '../../bank/bank-sync';\r\nimport {Notifications} from '../../services/notifications';\r\nimport {Logger} from '../../services/logger';\r\nimport {StandardHostInterface} from '../../bank/standard-host-interface';\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\nimport { AddEditBankLinkModal } from \"../../modals/add-edit-bank-link/add-edit-bank-link\";\r\nimport { ProviderRequiresBrowser } from \"../../bank/browser-interface\";\r\nimport { BankSyncMonitor } from \"../../bank/bank-sync-monitor\";\r\n\r\n@Component({\r\n  templateUrl: 'bank-link.html'\r\n})\r\nexport class BankLinkPage {\r\n  \r\n  engine: Engine;\r\n  bankLink: BankLink;\r\n  syncing: boolean;\r\n  logger = Logger.get('BankLinkPage');\r\n\r\n  constructor(private nav: NavController, private dbms: Dbms, private navParams: NavParams, private engineFactory: EngineFactory, private modalController: ModalController, private bankSync: BankSync, private notifications: Notifications, private standardHostInterface: StandardHostInterface, private alertController: AlertController) {\r\n    this.engine = this.engineFactory.getEngineById(navParams.data.budgetId);\r\n    this.bankLink = this.engine.getRecordById(BankLink, navParams.data.bankLinkId);\r\n  }\r\n  \r\n  editBankLink() {\r\n    let modal = this.modalController.create(AddEditBankLinkModal, {budgetId: this.engine.db.id, bankLinkId: this.bankLink.id});\r\n    modal.present();\r\n  }\r\n\r\n  syncAllAccounts() {\r\n    let initiatedBankSyncMonitor = this.bankSync.sync(this.bankLink, this.engine);\r\n    if (initiatedBankSyncMonitor.errors) {\r\n      this.alertController.create({title: \"Unable To Run Bank Sync\", message: initiatedBankSyncMonitor.errorMessage}).present();\r\n    }\r\n  }\r\n\r\n  getCurrentBankSync(): BankSyncMonitor {\r\n    return this.bankSync.activeSyncs.find(b => b.bankLink.uuid === this.bankLink.uuid);\r\n  }\r\n\r\n  showBrowser() {\r\n    if (this.getCurrentBankSync().providerSchema.requireBrowser) {\r\n      (<ProviderRequiresBrowser> <any> this.getCurrentBankSync().provider).getBrowser().userShow();\r\n    }\r\n  }\r\n\r\n  cancel() {\r\n    this.getCurrentBankSync().cancel();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/bank-link/bank-link.ts","import {NavController, ViewController, NavParams, AlertController, App} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Account} from '../../data/records/account';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Engine} from '../../engine/engine';\r\nimport {CreateAccountTransaction} from '../../data/transactions/create-account-transaction';\r\nimport {Component} from '@angular/core';\r\nimport { Big } from 'big.js';\r\nimport { Configuration, SecureAccessor } from \"../../services/configuration-service\";\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\nimport { CreateBankLink } from \"../../data/transactions/create-bank-link\";\r\nimport { Utils } from \"../../services/utils\";\r\nimport { SecurePrompt } from \"../../services/secure-prompt\";\r\nimport { ProviderSchema } from \"../../bank/provider-interface\";\r\nimport { BankProviderRegistry } from \"../../bank/bank-provider-registry\";\r\nimport { BankLinkLocal } from \"../../bank/bank-link-local\";\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-bank-link.html'\r\n})\r\nexport class AddEditBankLinkModal {\r\n  emptyproviderSchema = new ProviderSchema();\r\n  db: Db;\r\n  engine: Engine;\r\n  editing: boolean;\r\n  pausedAutoSync: boolean;\r\n  data: {name: string; provider: string; configuration: {}; autoSync: boolean; pausedAutoSync: boolean};\r\n  transaction: CreateBankLink;\r\n  secureAccessor: SecureAccessor;\r\n  \r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController, private engineFactory: EngineFactory, private appController: App, private bankProviderRegistry: BankProviderRegistry, private configuration: Configuration, private securePrompt: SecurePrompt, private bankLinkLocal: BankLinkLocal) {    \r\n    this.db = dbms.getDb(navParams.data.budgetId);\r\n    this.engine = engineFactory.getEngineById(this.db.id);\r\n    this.data = <any>{};\r\n\r\n    if (navParams.data.bankLinkId) {\r\n      this.editing = true;\r\n      let bankLink = this.engine.getRecordById(BankLink, navParams.data.bankLinkId);\r\n      this.data.name = bankLink.name;\r\n      this.data.provider = bankLink.provider;\r\n      this.data.configuration = bankLink.configuration;\r\n      this.data.autoSync = this.bankLinkLocal.getInfo(bankLink.uuid).autoSync;\r\n      this.pausedAutoSync = this.bankLinkLocal.getInfo(bankLink.uuid).pauseAutoSync;\r\n      this.data.pausedAutoSync = this.bankLinkLocal.getInfo(bankLink.uuid).pauseAutoSync;\r\n      this.transaction = this.db.transactionProcessor.findTransactionsForRecord(bankLink, CreateBankLink)[0];\r\n\r\n    } else {\r\n      this.editing = false;\r\n      this.transaction = new CreateBankLink();\r\n      this.transaction.uuid = Utils.randomChars(12);\r\n      this.data.configuration = {};\r\n    }\r\n\r\n    if (configuration.secureAvailable()) {\r\n      this.secureAccessor = configuration.secureAccessor(\"banklink_\" + this.transaction.uuid);\r\n    }\r\n    \r\n  }\r\n\r\n  getProviderSchema(): ProviderSchema {\r\n    return this.data.provider == null ? this.emptyproviderSchema : this.bankProviderRegistry.getProviderSchema(this.data.provider);\r\n  }\r\n  \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    this.transaction.name = this.data.name;\r\n    this.transaction.provider = this.data.provider;\r\n    this.transaction.configuration = this.data.configuration;\r\n\r\n    this.db.applyTransaction(this.transaction);\r\n    let bankLinkRecord = this.db.transactionProcessor.findRecordsForTransaction(this.transaction, BankLink)[0];\r\n\r\n    this.bankLinkLocal.updateInfo(this.transaction.uuid, info => {\r\n      info.autoSync = this.data.autoSync;\r\n      if (this.pausedAutoSync && !this.data.pausedAutoSync) {\r\n        info.cancelledCount = 0;\r\n        info.errorCount = 0;\r\n      }\r\n    });\r\n\r\n    this.viewCtrl.dismiss({accountId: bankLinkRecord.id});\r\n  }\r\n  \r\n  cancel() {\r\n    if (!this.editing && this.secureAccessor) this.secureAccessor.removeScope();\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n  \r\n  deleteBankLinkConfirm() {\r\n    // TODO: Prolly better to archive it than delete it if anything linked to it\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this bank link?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.deleteBankLink();\r\n            });\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n\r\n  \r\n  deleteBankLink() {\r\n    this.db.deleteTransaction(this.transaction);\r\n    \r\n    this.appController.getRootNav().pop({animate: false, duration: 0});\r\n    this.viewCtrl.dismiss();\r\n\r\n  }\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-bank-link/add-edit-bank-link.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 160;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 160\n// module chunks = 0","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 202;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 202\n// module chunks = 0","import {DbTransaction} from './transaction';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport {DbPersistenceProvider} from './db-persistence-provider';\r\n\r\nexport class NoPersistenceProvider implements DbPersistenceProvider {\r\n    \r\n    dbArray = [];\r\n    tempStorage = new Map<string, string>();\r\n    \r\n    constructor(private transactionSerializer: TransactionSerializer) {\r\n    }\r\n\r\n    reset() {\r\n        this.dbArray.length = 0;\r\n        this.tempStorage.clear();\r\n    }\r\n\r\n\r\n    init(): Promise<any> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    dbs(): Array<string> {\r\n        return this.dbArray;\r\n    }\r\n    \r\n    addDb(dbId: string): Promise<void> {\r\n        if (this.dbArray.indexOf(dbId) === -1) this.dbArray.push(dbId);\r\n        return Promise.resolve();\r\n    }\r\n    \r\n    unlinkDb(dbId: string) {\r\n        if (this.dbArray.indexOf(dbId) > -1) {\r\n            this.dbArray.splice(this.dbArray.indexOf(dbId), 1);\r\n            this.transactionsSync(dbId).forEach(transaction => {\r\n                this.deleteTransaction(dbId, transaction.id);\r\n            });\r\n        }\r\n    }\r\n\r\n    transactionsSync(dbId): Array<DbTransaction> {\r\n        var transactions = [];\r\n        this.tempStorage.forEach((key, val) => {\r\n            if (key.startsWith(dbId + '_')) {\r\n                var transaction = this.transactionSerializer.fromJson(val);\r\n                transactions.push(transaction);\r\n            }\r\n        });\r\n        return transactions;\r\n    }\r\n\r\n\r\n\r\n    transactions(dbId): Promise<Array<DbTransaction>> {\r\n        return Promise.resolve(this.transactionsSync(dbId));\r\n    }\r\n    \r\n    \r\n    saveTransaction(dbId: String, transaction: DbTransaction) {\r\n        this.tempStorage.set(dbId + '_' + transaction.id, this.transactionSerializer.toJson(transaction));\r\n    }\r\n\r\n    deleteTransaction(dbId: String, transactionId: number) {\r\n        this.tempStorage.delete(dbId + '_' + transactionId);\r\n    }\r\n\r\n    getTransaction(dbId: String, transactionId: number): DbTransaction {\r\n        let transactionString = this.tempStorage.get(dbId + '_' + transactionId);\r\n        let transaction = this.transactionSerializer.fromJson(transactionString);\r\n        return transaction;\r\n    }\r\n\r\n    keyStore(dbId: string, key: string, value?: string): string {\r\n        var localKey = 'keystore_' + dbId + '_' + key;\r\n        if (typeof value !== 'undefined' )\r\n            this.tempStorage.set(localKey, value);\r\n\r\n        return this.tempStorage.get(localKey);\r\n\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/no-persistence-provider.ts","import {NavController, NavParams, ViewController, ModalController, PopoverController, InfiniteScroll} from 'ionic-angular';\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Db} from '../../db/db';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Engine} from '../../engine/engine';\r\nimport {Category} from '../../data/records/category';\r\nimport {Account} from '../../data/records/account';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {Budget} from '../../data/records/budget';\r\nimport {AddEditCategoryModal} from '../../modals/add-edit-category/add-edit-category';\r\nimport {AddEditCategorySimpleWeeklyModal} from '../../modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly';\r\nimport {InitCategorySimpleWeeklyTransaction} from '../../data/transactions/init-category-simple-weekly-transaction';\r\nimport {EditorProvider} from '../../services/editor-provider';\r\nimport {AddEditTransactionModal} from '../../modals/add-edit-transaction/add-edit-transaction';\r\nimport {AddEditSplitTransactionModal} from '../../modals/add-edit-split-transaction/add-edit-split-transaction';\r\nimport {AddEditSplitTransferModal} from '../../modals/add-edit-split-transfer/add-edit-split-transfer';\r\nimport {AddEditTransferModal} from '../../modals/add-edit-transfer/add-edit-transfer';\r\nimport {Logger} from '../../services/logger';\r\nimport {Configuration} from '../../services/configuration-service';\r\n\r\n@Component({\r\n  templateUrl: 'category.html'\r\n})\r\nexport class CategoryPage {\r\n  private logger: Logger = Logger.get('CategoryPage');\r\n\r\n  budget: Db;\r\n  budgetRecord: Budget;\r\n  category: Category;\r\n  transactions: LokiDynamicView<Transaction>;\r\n  transactionTable: LokiCollection<Transaction>;\r\n  transactionDisplayLimit: number;\r\n  transactionDisplayPageSize: number;\r\n  engine: Engine;\r\n\r\n  @ViewChild(InfiniteScroll)\r\n  infiniteScroll: InfiniteScroll;\r\n\r\n  constructor(private nav: NavController, private dbms: Dbms, private params: NavParams, private editorProvider: EditorProvider, private modalController: ModalController, private popoverController: PopoverController, private engineFactory: EngineFactory) {\r\n    this.nav = nav;\r\n    this.dbms = dbms;\r\n    \r\n    this.budget = params.data.budget;\r\n    this.engine = engineFactory.getEngine(this.budget);\r\n    let categoryTable = this.budget.transactionProcessor.table(Category);\r\n    this.category = categoryTable.by('id', params.data.categoryId);\r\n    this.budgetRecord = this.budget.transactionProcessor.single(Budget);\r\n    this.transactionTable = this.budget.transactionProcessor.table(Transaction);\r\n\r\n    this.transactions = <any> {data: function() {return []; }};\r\n    this.transactionDisplayPageSize = window.innerHeight / 40;\r\n    if (this.transactionDisplayPageSize < 6) this.transactionDisplayPageSize = 10;\r\n\r\n    this.transactionDisplayLimit = this.transactionDisplayPageSize;\r\n  }\r\n\r\n  account(accountId: number): Account {\r\n    return this.engine.getRecordById(Account, accountId);\r\n  }\r\n\r\n  get accountBalances() {\r\n    return this.category.x.accountBalances ? Array.from(this.category.x.accountBalances.keys()) : [];\r\n  }\r\n\r\n  get transactionsPaged() {\r\n    if (!this.transactionDisplayLimit) return this.transactions.data();\r\n    return this.transactions.data().slice(0, this.transactionDisplayLimit);\r\n  }\r\n\r\n  transferOtherCategoryName(t: Transaction): string {\r\n    let category = t.x.transfer ? this.budget.transactionProcessor.table(Category).by('id', t.x.transfer.categoryId) : null;\r\n    return category? category.name : \"Category Missing\";\r\n  }\r\n  \r\n  showMore(event) {\r\n    let popover = this.popoverController.create(CategoryPopover, {categoryPage: this});\r\n    popover.present({ev: event});\r\n  }\r\n \r\n  editCategory() {\r\n    let modal = this.modalController.create(AddEditCategoryModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n\r\n  }\r\n\r\n  editSimpleWeekly() {\r\n    let modal = this.modalController.create(AddEditCategorySimpleWeeklyModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n\r\n  }\r\n\r\n  categoryWeeklyAmount(): any {\r\n    // TODO: Put this into the category record and get it straight from there\r\n    let t = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategorySimpleWeeklyTransaction)[0];\r\n    if (t) return t.weeklyAmount;\r\n  }\r\n\r\n  addTransaction() {\r\n    let modal = this.modalController.create(AddEditTransactionModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n\r\n  }\r\n\r\n  addSplitTransaction() {\r\n    let modal = this.modalController.create(AddEditSplitTransactionModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n\r\n  }\r\n\r\n  addSplitTransfer() {\r\n    let modal = this.modalController.create(AddEditSplitTransferModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n\r\n  }\r\n  \r\n  addTransfer() {\r\n    let modal = this.modalController.create(AddEditTransferModal, {budgetId: this.budget.id, categoryId: this.category.id});\r\n    modal.present();\r\n  }\r\n  \r\n  editTransaction(transaction: Transaction) {\r\n    \r\n    let modal = this.editorProvider.getModal(this.budget.transactionProcessor.findAllTransactionsForRecord(transaction)[0], {budgetId: this.budget.id, categoryId: this.category.id, transactionId: transaction.id});\r\n    modal.present();\r\n  }\r\n\r\n  ionViewWillEnter() {\r\n    this.transactions = this.transactionTable.addDynamicView('categoryTransactions_' + this.category.id)\r\n    .applyFind({'categoryId': this.category.id})\r\n    .applySortCriteria([['date', true], ['id', true]]);\r\n\r\n    this.logger.debug('WIll Enter Dynamic Views ' + this.transactionTable.DynamicViews.length);\r\n\r\n    if (this.transactions.data().length <= this.transactionDisplayLimit) {\r\n      this.transactionDisplayLimit = 0;\r\n      this.infiniteScroll.enable(false);\r\n    }\r\n\r\n\r\n  }\r\n  ionViewDidLeave() {\r\n    this.transactionTable.removeDynamicView(this.transactions.name);\r\n    this.logger.debug('Did Leave Dynamic Views ' + this.transactionTable.DynamicViews.length);\r\n    this.transactions = <any> {data: function() {return []; }};\r\n\r\n  }\r\n  \r\n  doInfinite(infiniteScroll: InfiniteScroll) {\r\n    // This is used just to stage the DOM loading for a responsive UI rather than an async operation\r\n    // We can't use virtualscroll as we can have different elements / heights\r\n\r\n    this.transactionDisplayLimit += this.transactionDisplayPageSize;\r\n    this.transactionDisplayPageSize *= 2;\r\n\r\n    if (this.transactions.data().length <= this.transactionDisplayLimit) {\r\n      this.transactionDisplayLimit = 0;\r\n      infiniteScroll.enable(false);\r\n    } else {\r\n      infiniteScroll.complete();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <ion-list>\r\n      <button ion-item detail-none (click)=\"close(categoryPage.editSimpleWeekly)\">Weekly Amount</button>\r\n      <button ion-item detail-none (click)=\"close(categoryPage.editCategory)\">Edit / Delete Category</button>\r\n      <button ion-item detail-none (click)=\"close(categoryPage.addTransaction)\">New Transaction</button>\r\n      <button *ngIf=\"configuration.optionBooleanAccessor('experimental.modals.show-split-transaction').value\" ion-item detail-none (click)=\"close(categoryPage.addSplitTransaction)\">New Split Transaction</button>\r\n      <button *ngIf=\"configuration.optionBooleanAccessor('experimental.modals.show-split-transaction').value\" ion-item detail-none (click)=\"close(categoryPage.addSplitTransfer)\">New Split Transfer</button>\r\n      <button ion-item detail-none (click)=\"close(categoryPage.addTransfer)\">Transfer Funds</button>\r\n    </ion-list>\r\n  `\r\n})\r\nexport class CategoryPopover {\r\n\r\n  private categoryPage: CategoryPage;\r\n\r\n  constructor(private viewCtrl: ViewController, private configuration: Configuration) {\r\n    this.categoryPage = <CategoryPage>viewCtrl.data.categoryPage;\r\n  }\r\n\r\n  close(thenFn: Function) {\r\n    this.viewCtrl.dismiss(undefined, undefined, {animate: false, duration: 0}).then(() => { thenFn.call(this.categoryPage); });\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/category/category.ts","import {Injectable} from '@angular/core';\r\nimport {CFormatPipe} from '../components/currency-format';\r\n\r\n@Injectable()\r\nexport class CurrencyFormatter {\r\n\r\n    format(value: any): string {\r\n        // TODO: Use a currency format lib\r\n        // TODO: replace cformat and others to use this service\r\n        // TODO: This service can get the locale from config?, or also take into account the currency type\r\n        return \"$\" + new CFormatPipe().price_format(value, false);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/currency-formatter.ts","import {Pipe} from '@angular/core';\r\n//import {PriceFormat} from './price-Format';\r\n\r\n@Pipe({\r\n    name: 'cFormat'\r\n})\r\nexport class CFormatPipe  {\r\n\r\n    transform(val, args) {\r\n        let formattedVal = val; this.price_format(val, false);\r\n        \r\n        if (parseFloat(val) < 0) {\r\n            formattedVal = '(' + formattedVal + ')';\r\n        }\r\n        \r\n        return '$' + formattedVal;\r\n        \r\n    }\r\n\r\n\r\n\tis_number = /[0-9]/;\r\n    centsLimit = 2;\r\n    clearOnEmpty = false;\r\n    centsSeparator = \".\";\r\n    thousandsSeparator = \",\";\r\n    allowNegative = true;\r\n    insertPlusSign = false;\r\n    prefix = \"\";\r\n    suffix = \"\";\r\n\r\n    to_numbers(str) {\r\n        var formatted = '';\r\n        for (var i = 0; i < (str.length); i++) {\r\n            let char_ = str.charAt(i);\r\n            if (formatted.length == 0 && char_ == 0) char_ = false;\r\n\r\n            if (char_ && char_.match(this.is_number)) {\r\n                //if (limit) {\r\n                //    if (formatted.length < limit) formatted = formatted + char_;\r\n                //}\r\n                //else {\r\n                formatted = formatted + char_;\r\n                //}\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n\r\n    fill_with_zeroes(str) {\r\n        while (str.length < (this.centsLimit + 1)) str = '0' + str;\r\n        return str;\r\n    }\r\n    \r\n    price_format(str, ignore) {\r\n        str = str + \"\";\r\n        if (!ignore && (str === '' || str == this.price_format('0', true)) && this.clearOnEmpty)\r\n            return '';\r\n\r\n        // formatting settings\r\n        var formatted = this.fill_with_zeroes(this.to_numbers(str));\r\n        var thousandsFormatted = '';\r\n        var thousandsCount = 0;\r\n\r\n        let centsSeparator = this.centsSeparator;\r\n        // Checking CentsLimit\r\n        if (this.centsLimit == 0) {\r\n            centsSeparator = \"\";\r\n            centsVal = \"\";\r\n        }\r\n\r\n        // split integer from cents\r\n        var centsVal = formatted.substr(formatted.length - this.centsLimit, this.centsLimit);\r\n        var integerVal = formatted.substr(0, formatted.length - this.centsLimit);\r\n\r\n        // apply cents pontuation\r\n        formatted = (this.centsLimit == 0) ? integerVal : integerVal + centsSeparator + centsVal;\r\n\r\n        // apply thousands pontuation\r\n        if (this.thousandsSeparator) {\r\n            for (var j = integerVal.length; j > 0; j--) {\r\n                let char_ = integerVal.substr(j - 1, 1);\r\n                thousandsCount++;\r\n                if (thousandsCount % 3 == 0) char_ = this.thousandsSeparator + char_;\r\n                thousandsFormatted = char_ + thousandsFormatted;\r\n            }\r\n\r\n            //\r\n            if (thousandsFormatted.substr(0, 1) == this.thousandsSeparator) thousandsFormatted = thousandsFormatted.substring(1, thousandsFormatted.length);\r\n            formatted = (this.centsLimit == 0) ? thousandsFormatted : thousandsFormatted + centsSeparator + centsVal;\r\n        }\r\n\r\n        // if the string contains a dash, it is negative - add it to the begining (except for zero)\r\n        if (this.allowNegative && (integerVal != 0 || centsVal != 0)) {\r\n            if (str.indexOf('-') != -1 && str.indexOf('+') < str.indexOf('-')) {\r\n                formatted = '-' + formatted;\r\n            }\r\n            else {\r\n                if (!this.insertPlusSign)\r\n                    formatted = '' + formatted;\r\n                else\r\n                    formatted = '+' + formatted;\r\n            }\r\n        }\r\n\r\n        // apply the prefix\r\n        if (this.prefix) formatted = this.prefix + formatted;\r\n\r\n        // apply the suffix\r\n        if (this.suffix) formatted = formatted + this.suffix;\r\n\r\n        return formatted;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-format.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Category} from '../records/category';\r\n\r\n\r\nexport class InitCategoryTransaction extends DbTransaction {\r\n\r\n    categoryName: string;    \r\n\r\n    getTypeId(): string {\r\n        return 'InitCategoryTransaction';\r\n    }\r\n\r\n\r\n    apply(tp: TransactionProcessor) {\r\n        \r\n        // TODO: Validation\r\n        \r\n        let table = tp.table(Category);\r\n        let c = new Category();\r\n        c.id = this.id;\r\n        c.name = this.categoryName;\r\n\r\n        table.insert(c);\r\n        tp.mapTransactionAndRecord(this, c);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(Category);\r\n        let c = table.by('id', <any> this.id);\r\n        c.name = this.categoryName;\r\n        table.update(c);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(Category);\r\n        let c = table.by('id', <any> this.id);\r\n        table.remove(c);\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"created category \" + this.categoryName;\r\n        } else if (env.action === 'update') {\r\n            return \"renamed category {{old name}} to \" + this.categoryName;\r\n        } else {\r\n            return \"removed category \" + this.categoryName;\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-transaction.ts","import {NavController, ViewController, NavParams} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Category} from '../../data/records/category';\r\nimport {Transaction} from '../../data/records/transaction';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {InitCategorySimpleWeeklyTransaction} from '../../data/transactions/init-category-simple-weekly-transaction';\r\nimport {Component} from '@angular/core';\r\nimport {Utils} from '../../services/utils';\r\nimport { Big } from 'big.js';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-category-simple-weekly.html'\r\n})\r\nexport class AddEditCategorySimpleWeeklyModal {\r\n  budget: Db;\r\n  category: Category;\r\n  transaction: InitCategorySimpleWeeklyTransaction;\r\n\r\n  balance: any;\r\n  weeklyAmount: any;\r\n  balanceDate: string;\r\n  \r\n  constructor(public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController) {\r\n    this.viewCtrl = viewCtrl;\r\n    this.nav = nav;\r\n    \r\n    this.budget = dbms.getDb(navParams.data.budgetId);\r\n    this.category = this.budget.transactionProcessor.table(Category).by('id', navParams.data.categoryId);\r\n    this.transaction = this.budget.transactionProcessor.findTransactionsForRecord(this.category, InitCategorySimpleWeeklyTransaction)[0];\r\n\r\n    this.balanceDate = Utils.nowIonic();\r\n\r\n    if (!this.transaction) {\r\n      this.transaction = new InitCategorySimpleWeeklyTransaction();\r\n      this.transaction.categoryId = this.category.id;\r\n    } else {\r\n      this.balance = this.category.balance;\r\n      this.weeklyAmount = this.transaction.weeklyAmount;\r\n    }\r\n\r\n  }\r\n  \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n\r\n    // TODO: Get the sum of transactions with date of TODAY\r\n    // Subtract from the balance here\r\n    this.transaction.balanceDate = Utils.toYYYYMMDDFromIonic(this.balanceDate);\r\n\r\n    let todaysTotal = this.budget.transactionProcessor.table(Transaction).chain()\r\n      .find({'categoryId' : this.category.id}).find({'date' : { '$gte' : this.transaction.balanceDate}}).mapReduce(t => t.amount, tt => tt.length === 0 ? new Big(0) : tt.reduce((a, b) => a.plus(b)));\r\n        \r\n    this.transaction.balance =  new Big(this.balance).plus(todaysTotal);\r\n    this.transaction.weeklyAmount =  new Big(this.weeklyAmount);\r\n    this.budget.applyTransaction(this.transaction);\r\n\r\n    this.viewCtrl.dismiss();\r\n  }\r\n  \r\n  cancel() {\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly.ts","import {TransactionProcessor} from '../db/transaction-processor';\r\n\r\nexport abstract class Processor {\r\n    \r\n    abstract getTypeId(): String;\r\n    abstract execute(tp: TransactionProcessor);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/engine/processor.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {Transaction as TransactionRecord} from '../records/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class InitSimpleTransaction extends DbTransaction {\r\n\r\n    description: string;\r\n    date: string;\r\n    amount: Big;\r\n    categoryId: number;\r\n\r\n    getTypeId(): string {\r\n        return 'InitSimpleTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(TransactionRecord);\r\n        let t = new TransactionRecord();\r\n        t.id = this.id * 100000;\r\n        t.amount = this.amount;\r\n        t.date = this.date;\r\n        t.description = this.description;\r\n        t.categoryId = this.categoryId;\r\n                \r\n        table.insert(t);        \r\n\r\n        tp.mapTransactionAndRecord(this, t);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n        let t = table.by('id', <any> (this.id * 100000));\r\n        t.amount = this.amount;\r\n        t.date = this.date;\r\n        t.description = this.description;\r\n        t.categoryId = this.categoryId;\r\n        table.update(t);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n        let c = table.by('id', <any> (this.id * 100000));\r\n        table.remove(c);\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'amount')\r\n            return new Big(value);\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        let total = env.currencyFormatter(this.amount);\r\n        if (env.action === 'apply') {\r\n            return this.description + \" of \" + total;\r\n        } else if (env.action === 'update') {\r\n            return this.description + \" to \" + total;\r\n        } else {\r\n            return this.description + \" of \" + total;\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-simple-transaction.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {Transaction as TransactionRecord} from '../records/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class CreateSplitTransaction extends DbTransaction {\r\n\r\n    description: string;\r\n    status?: 'realised' | 'anticipated';\r\n    date: string;\r\n    amounts: Array<{\r\n        amount: Big;\r\n        categoryId: number;\r\n        accountId?: number;\r\n        status?: 'realised' | 'anticipated';\r\n        date?: string;\r\n    }>;\r\n\r\n    getTypeId(): string {\r\n        return 'CreateSplitTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(TransactionRecord);\r\n        \r\n        // In the records, keep a list to all the other records, cached...\r\n        // TODO: Change this to a transaction group record?, can keep the total, etc on there, rather than just an array and totals in the cache if needed ?\r\n        // TODO: Also, technically, this shouldn't be in the cache. it can be well defined here and is always available...\r\n        let transactions = new Array<TransactionRecord>();\r\n\r\n        for (let i = 0; i < this.amounts.length; i++) {\r\n            let t = new TransactionRecord();\r\n            t.id = this.id * 100000 + i;\r\n            t.amount = this.amounts[i].amount;\r\n            t.date = this.amounts[i].date || this.date;\r\n            t.description = this.description;  \r\n            t.categoryId = this.amounts[i].categoryId;\r\n            t.accountId = this.amounts[i].accountId;\r\n            t.x.transactions = transactions;\r\n            t.status = this.amounts[i].status || this.status;\r\n\r\n            transactions.push(t);\r\n            table.insert(t);        \r\n            tp.mapTransactionAndRecord(this, t);\r\n        }\r\n        \r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        // Just remove everything and add it all again\r\n        // TODO: This won't handle triggering certain category recalcs (but at the moment that doesn't matter...)\r\n\r\n        this.undo(tp);\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n\r\n        tp.findAllRecordsForTransaction(this).slice().forEach((t) => {            \r\n            table.remove(<TransactionRecord> t);\r\n            tp.unmapTransactionAndRecord(this, t);\r\n        });\r\n    }\r\n\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'amounts') {\r\n            value.forEach(line => {\r\n                line.amount = new Big(line.amount);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        let total = env.currencyFormatter(this.amounts.map((l) => l.amount).reduce((a, b) => a.plus(b)));\r\n        if (env.action === 'apply') {\r\n            return \"Added \" + this.description + \" of \" + total;\r\n        } else if (env.action === 'update') {\r\n            return \"Updated \" + this.description + \" to \" + total;\r\n        } else {\r\n            return \"Deleted \" + this.description + \" of \" + total;\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-split-transaction.ts","import {NavController, ViewController, NavParams, AlertController, Alert} from 'ionic-angular';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport { Big } from 'big.js';\r\nimport {AddEditSplitTransactionModal} from './add-edit-split-transaction';\r\nimport { Engine } from '../../engine/engine';\r\nimport { BankTransaction } from \"../../data/records/bank-transaction\";\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-split-transaction-line.html'\r\n})\r\nexport class AddEditSplitTransactionLineModal {\r\n\r\n  parent: AddEditSplitTransactionModal;\r\n  line: any;\r\n  lineIndex: number;\r\n  engine: Engine;\r\n  \r\n  constructor(private configuration: Configuration, public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController) {\r\n\r\n    this.parent = navParams.data.parent;\r\n    this.engine = this.parent.engine;\r\n    this.lineIndex = navParams.data.lineIndex;\r\n    this.line = navParams.data.parent.data.lines[this.lineIndex];\r\n\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    if (this.line.categoryId == null) {\r\n      this.showCategorySelect().onDidDismiss(() => {\r\n        if (this.line.categoryId == null) this.viewCtrl.dismiss();\r\n      });\r\n    }\r\n\r\n    this.viewCtrl.onDidDismiss(() => {\r\n      if (this.line.categoryId == null) {\r\n        this.parent.data.lines.splice(this.parent.data.lines.indexOf(this.line), 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  showCategorySelect(): Alert {\r\n    let alert = this.alertController.create();\r\n    this.engine.getCategories('alphabetical').forEach(category => {\r\n      if (!this.parent.data.lines.some(line => line !== this.line && line.categoryId === category.id))\r\n        alert.addInput({type: 'radio', label: category.name, value: category.id.toString(), checked: category.id === this.line.categoryId});\r\n    });\r\n\r\n    alert.addButton('Cancel');\r\n    alert.addButton({\r\n      text: 'Ok',\r\n      handler: data => {\r\n        this.line.categoryId = Number(data);\r\n      }\r\n    });\r\n\r\n    alert.present();\r\n    return alert;\r\n  }\r\n    \r\n\r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n    this.viewCtrl.dismiss();\r\n  }\r\n\r\n    /*---- Reconciliation ---- */\r\n\r\n\r\n  unreconciledAndThisReconciledBankTransactions(): BankTransaction[] {\r\n    return [];\r\n  }\r\n\r\n  \r\n\r\n\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transaction/add-edit-split-transaction-line.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {Transaction as TransactionRecord} from '../records/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class CreateSplitTransfer extends DbTransaction {\r\n\r\n    description: string;\r\n    date: string;\r\n    categoryId: number;\r\n    accountId?: number;\r\n    accountId2?: number;\r\n    amounts: Array<{\r\n        amount: Big;\r\n        categoryId: number;\r\n    }>;\r\n\r\n\r\n    getTypeId(): string {\r\n        return 'CreateSplitTransfer';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n        // TODO: If multiple accounts, then only a single amount & category\r\n\r\n        let table = tp.table(TransactionRecord);\r\n        \r\n        let transactions = new Array<TransactionRecord>();\r\n\r\n        let total = new Big('0');\r\n\r\n        let description = this.description == null || this.description.trim().length == 0 ? 'Transfer' : this.description;\r\n\r\n        for (let i = 0; i < this.amounts.length; i++) {\r\n            let t = new TransactionRecord();\r\n            t.id = this.id * 100000 + i + 1;\r\n            t.amount = this.amounts[i].amount;\r\n            total = total.plus(t.amount);\r\n            t.date = this.date;\r\n            t.description = description;\r\n            t.categoryId = this.amounts[i].categoryId;\r\n            t.accountId = this.accountId2 || this.accountId;\r\n            t.x.transactions = transactions;\r\n            t.x.type = \"Transfer\"; // TODO: By convention the type shouldn't be in the cache?\r\n            transactions.push(t);\r\n            table.insert(t);        \r\n            tp.mapTransactionAndRecord(this, t);\r\n        }\r\n\r\n        let t = new TransactionRecord();\r\n        t.id = this.id * 100000;\r\n        t.amount = total.times(-1);\r\n        t.date = this.date;\r\n        t.description = description;\r\n        t.categoryId = this.categoryId;\r\n        t.accountId = this.accountId;\r\n        t.x.transactions = transactions;\r\n        t.x.type = \"Transfer\";\r\n        transactions.push(t);\r\n        table.insert(t);        \r\n        tp.mapTransactionAndRecord(this, t);\r\n\r\n        \r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        // Just remove everything and add it all again\r\n        // TODO: This won't handle triggering certain category recalcs (but at the moment that doesn't matter...)\r\n\r\n        this.undo(tp);\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n\r\n        tp.findAllRecordsForTransaction(this).slice().forEach((t) => {            \r\n            table.remove(<TransactionRecord> t);\r\n            tp.unmapTransactionAndRecord(this, t);\r\n        });\r\n    }\r\n\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'amounts') {\r\n            value.forEach(line => {\r\n                line.amount = new Big(line.amount);\r\n            });\r\n        }\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        let total = env.currencyFormatter(this.amounts.map((l) => l.amount).reduce((a, b) => a.plus(b)));\r\n        if (env.action === 'apply') {\r\n            return \"Added \" + this.description + \" of \" + total;\r\n        } else if (env.action === 'update') {\r\n            return \"Updated \" + this.description + \" to \" + total;\r\n        } else {\r\n            return \"Deleted \" + this.description + \" of \" + total;\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-split-transfer.ts","import {NavController, ViewController, NavParams, AlertController, Alert} from 'ionic-angular';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport { Big } from 'big.js';\r\nimport {AddEditSplitTransferModal} from './add-edit-split-transfer';\r\nimport {Engine} from '../../engine/engine';\r\n\r\n@Component({\r\n  templateUrl: 'add-edit-split-transfer-line.html'\r\n})\r\nexport class AddEditSplitTransferLineModal {\r\n\r\n  parent: AddEditSplitTransferModal;\r\n  line: any;\r\n  lineIndex: number;\r\n  engine: Engine;\r\n  \r\n  constructor(private configuration: Configuration, public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController) {\r\n\r\n    this.parent = navParams.data.parent;\r\n    this.engine = this.parent.engine;\r\n    this.lineIndex = navParams.data.lineIndex;\r\n    this.line = navParams.data.parent.data.lines[this.lineIndex];\r\n\r\n  }\r\n\r\n  ionViewDidEnter() {\r\n    if (this.line.categoryId == null) {\r\n      this.showCategorySelect().onDidDismiss(() => {\r\n        if (this.line.categoryId == null) this.viewCtrl.dismiss();\r\n      });\r\n    }\r\n\r\n    this.viewCtrl.onDidDismiss(() => {\r\n      if (this.line.categoryId == null) {\r\n        this.parent.data.lines.splice(this.parent.data.lines.indexOf(this.line), 1);\r\n      }\r\n    });\r\n  }\r\n\r\n  showCategorySelect(): Alert {\r\n    let alert = this.alertController.create();\r\n    this.engine.getCategories('alphabetical').forEach(category => {\r\n      if (!this.parent.data.lines.some(line => line !== this.line && line.categoryId === category.id))\r\n        alert.addInput({type: 'radio', label: category.name, value: category.id.toString(), checked: category.id === this.line.categoryId});\r\n    });\r\n\r\n    alert.addButton('Cancel');\r\n    alert.addButton({\r\n      text: 'Ok',\r\n      handler: data => {\r\n        this.line.categoryId = Number(data);\r\n      }\r\n    });\r\n\r\n    alert.present();\r\n    return alert;\r\n  }\r\n    \r\n  submit(event: Event) {\r\n    event.preventDefault();\r\n    this.viewCtrl.dismiss();\r\n  }\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/add-edit-split-transfer/add-edit-split-transfer-line.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {Transaction as TransactionRecord} from '../records/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class InitCategoryTransferTransaction extends DbTransaction {\r\n\r\n    description: string;\r\n    date: string;\r\n    amount: Big;\r\n    fromCategoryId: number;\r\n    toCategoryId: number;\r\n\r\n    getTypeId(): string {\r\n        return 'InitCategoryTransferTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(TransactionRecord);\r\n        let t1 = new TransactionRecord();\r\n        let t2 = new TransactionRecord();\r\n        t1.id = this.id * 100000;\r\n        t2.id = -this.id * 100000;\r\n        t1.amount = this.amount;\r\n        t2.amount = this.amount.times('-1');\r\n        t1.date = this.date;\r\n        t2.date = this.date;\r\n        t1.description = this.description ? this.description : 'Transfer';\r\n        t2.description = this.description ? this.description : 'Transfer';\r\n        t1.x.type = \"Transfer\"; // TODO: By convention the type shouldn't be in the cache...\r\n        t2.x.type = \"Transfer\";\r\n        t1.x.transfer = t2; // TODO: By convention the linked transfer shouldn't be in the cache...\r\n        t2.x.transfer = t1;\r\n        t1.categoryId = this.fromCategoryId;\r\n        t2.categoryId = this.toCategoryId;\r\n\r\n        table.insert(t1);        \r\n        table.insert(t2);        \r\n\r\n        tp.mapTransactionAndRecord(this, t1);\r\n        tp.mapTransactionAndRecord(this, t2);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n        let t1 = table.by('id', <any> (this.id * 100000));\r\n        let t2 = table.by('id', <any> -(this.id * 100000));\r\n\r\n        t1.amount = this.amount;\r\n        t2.amount = this.amount.times('-1');\r\n        t1.date = this.date;\r\n        t2.date = this.date;\r\n        t1.description = this.description ? this.description : 'Transfer';\r\n        t2.description = this.description ? this.description : 'Transfer';\r\n        t1.categoryId = this.fromCategoryId;\r\n        t2.categoryId = this.toCategoryId;\r\n\r\n        table.update(t1);\r\n        table.update(t2);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionRecord);\r\n        let t1 = table.by('id', <any> (this.id * 100000));\r\n        let t2 = table.by('id', <any> -(this.id * 100000));\r\n        \r\n        table.remove(t1);\r\n        table.remove(t2);\r\n    }\r\n\r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'amount')\r\n            return new Big(value);\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        let total = env.currencyFormatter(this.amount);\r\n        if (env.action === 'apply') {\r\n            return \"transferred \" + total + \" from a to b\";\r\n        } else if (env.action === 'update') {\r\n            return \"ammended transfer from a to b \" + \" to \" + total; // TODO: What aspect was updated ?\r\n        } else {\r\n            return this.description + \" of \" + total;\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/init-category-transfer-transaction.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Account} from '../records/account';\r\nimport {AccountBalanceProcessor} from '../processors/account-balance';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class CreateAccountTransaction extends DbTransaction {\r\n\r\n    name: string;\r\n    accountType: 'Bank' | 'Cash';\r\n    initialBalance: Big;\r\n    bankLinkId: number;\r\n    bankLinkConfiguration: any;\r\n\r\n    getTypeId(): string {\r\n        return 'CreateAccountTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n        \r\n        // TODO: Validation\r\n        \r\n        let table = tp.table(Account);\r\n        let a = new Account();\r\n        a.id = this.id;\r\n        a.name = this.name;\r\n        a.initialBalance = this.initialBalance;\r\n        a.accountType = this.accountType;\r\n        a.bankLinkId = this.bankLinkId;\r\n        a.bankLinkConfiguration = this.bankLinkConfiguration;\r\n        a.processors.push(new AccountBalanceProcessor(a));\r\n        table.insert(a);\r\n        tp.mapTransactionAndRecord(this, a);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(Account);\r\n        let a = table.by('id', <any> this.id);\r\n        a.name = this.name;\r\n        a.initialBalance = this.initialBalance;\r\n        a.accountType = this.accountType;\r\n        a.bankLinkId = this.bankLinkId;\r\n        a.bankLinkConfiguration = this.bankLinkConfiguration;\r\n\r\n        table.update(a);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(Account);\r\n        let a = table.by('id', <any> this.id);\r\n        table.remove(a);\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'initialBalance' && value != null)\r\n            return new Big(value);\r\n        if (field === 'bankDetails' && value != null) {\r\n            if (value.openingBankBalance != null) value.openingBankBalance = new Big(value.openingBankBalance);\r\n        }\r\n            \r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"created account \" + this.name;\r\n        } else if (env.action === 'update') {\r\n            return \"renamed account {{old name}} to \" + this.name;\r\n        } else {\r\n            return \"removed account \" + this.name;\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-account-transaction.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {BankTransaction} from '../records/bank-transaction';\r\nimport {Account} from '../records/account';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Logger} from '../../services/logger';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class MergeBankTransactions extends DbTransaction {\r\n\r\n\r\n    inserts: {date: string; status: string; description: string; amount: Big, balance: Big, balanceSequence: number}[];\r\n    upgrades: {bankTransactionId: number, date: string; status: string; description: string; amount: Big, balance: Big, balanceSequence: number}[];\r\n    flags: {bankTransactionId: number, flag: string; set: boolean}[];\r\n    accountId: number;\r\n    checksum: string;\r\n    accountBalance: Big;\r\n    accountAvailableBalance: Big;\r\n    timestamp: string; \r\n\r\n    getTypeId(): string {\r\n        return 'MergeBankTransactions';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n        \r\n        // Validate checksum, otherwise error... ? (or just skip it ?)\r\n        if (!this.validateChecksum(tp)) {\r\n            Logger.get('MergeBankTransactions').info(\"Invalid checksum in applying MergeBankTransactions... skipping\");\r\n            return;\r\n        }\r\n\r\n        let table = tp.table(BankTransaction);\r\n\r\n        if (this.inserts) {\r\n            for (let i = 0; i < this.inserts.length; i++) {\r\n                let t = new BankTransaction();\r\n                t.id = this.id * 100000 + i;\r\n                t.amount = this.inserts[i].amount;\r\n                t.date = this.inserts[i].date;\r\n                t.description = this.inserts[i].description;\r\n                t.status = <any> this.inserts[i].status;\r\n                t.accountId = this.accountId;\r\n                t.balance = this.inserts[i].balance;\r\n                t.balanceSequence = this.inserts[i].balanceSequence;\r\n                table.insert(t);        \r\n                tp.mapTransactionAndRecord(this, t);\r\n            }\r\n        }\r\n\r\n        if (this.upgrades) {\r\n            for (let i = 0; i < this.upgrades.length; i++) {\r\n                let t = table.by('id', <any> this.upgrades[i].bankTransactionId);\r\n                t.balance = this.upgrades[i].balance;\r\n                t.balanceSequence = this.upgrades[i].balanceSequence;\r\n                t.amount = this.upgrades[i].amount;\r\n                t.date = this.upgrades[i].date;\r\n                t.description = this.upgrades[i].description;\r\n                t.status = <any> this.upgrades[i].status;\r\n                t.accountId = this.accountId;\r\n\r\n                // TODO: upgrade date / change log push to record\r\n                table.update(t);\r\n            }\r\n        }\r\n\r\n        if (this.flags) {\r\n            for (let i = 0; i < this.flags.length; i++) {\r\n                let t = table.by('id', <any> this.flags[i].bankTransactionId);\r\n                let flagName = this.flags[i].flag;\r\n                t['flag' + flagName.substring(0,1).toUpperCase() + flagName.substring(1)] = this.flags[i].set;\r\n\r\n                // TODO: upgrade date / change log push to record\r\n                table.update(t);\r\n            }\r\n        }\r\n\r\n\r\n        // TODO: Move this to be a processor\r\n        let openingBankBalance = tp.table(Account).by('id', <any> this.accountId).x.openingBankBalance || new Big('0');\r\n        let accountData = table.chain().find({'accountId': this.accountId}).data().filter(t => !t.flagRemoved);\r\n        let maxBalanceSequenceRecord = accountData.find(t => t.balanceSequence === Math.max.apply(null, accountData.filter(t => t.balanceSequence).map(t => t.balanceSequence)));\r\n        let minBalanceSequenceRecord = accountData.find(t => t.balanceSequence === Math.min.apply(null, accountData.filter(t => t.balanceSequence).map(t => t.balanceSequence)));\r\n        tp.table(Account).by('id', <any> this.accountId).x.calculatedBankBalance = accountData.filter(t => t.status !== 'authorised').reduce((a, b) => a.plus(b.amount), openingBankBalance);\r\n        tp.table(Account).by('id', <any> this.accountId).x.calculatedBankAvailableBalance = accountData.reduce((a, b) => a.plus(b.amount), openingBankBalance);\r\n        tp.table(Account).by('id', <any> this.accountId).x.calculatedBankProcessedBalance = accountData.filter(t => t.status === 'processed').reduce((a, b) => a.plus(b.amount), openingBankBalance);\r\n        tp.table(Account).by('id', <any> this.accountId).x.bankBalance = this.accountBalance;\r\n        tp.table(Account).by('id', <any> this.accountId).x.bankAvailableBalance = this.accountAvailableBalance;\r\n        tp.table(Account).by('id', <any> this.accountId).x.bankProcessedBalance = maxBalanceSequenceRecord ? maxBalanceSequenceRecord.balance : undefined;\r\n        tp.table(Account).by('id', <any> this.accountId).x.openingBankProcessedBalance = minBalanceSequenceRecord ? minBalanceSequenceRecord.balance : undefined;\r\n        tp.table(Account).by('id', <any> this.accountId).x.bankBalanceTimestamp = this.timestamp;\r\n\r\n        // TODO: Could compare calculated balance vs bank balance for each processed to make sure records are consistent and correct and find where an error, duplicate or missing record may exist\r\n\r\n    }\r\n\r\n    validateChecksum(tp: TransactionProcessor): boolean {\r\n        if (!this.checksum) return true;\r\n        \r\n        let allData = tp.table(BankTransaction).chain().find({'accountId': <any> this.accountId}).data().filter(t => t.id < this.id * 100000);\r\n        let checksum = allData.filter(t => t.status === 'processed').length + \"_\" + allData.filter(t => t.status === 'authorised').length + \"_\" + allData.filter(t => t.status === 'recent').length;\r\n        return this.checksum === checksum;\r\n    }\r\n\r\n    generateChecksum(tp: TransactionProcessor) {\r\n        let allData = tp.table(BankTransaction).chain().find({'accountId': <any> this.accountId}).data();\r\n        this.checksum = allData.filter(t => t.status === 'processed').length + \"_\" + allData.filter(t => t.status === 'authorised').length + \"_\" + allData.filter(t => t.status === 'recent').length;\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        tp.unsupported();\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        tp.unsupported(); // This will need to be undone by re-running from last snapshot rather than rolling back\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'inserts' || field === 'upgrades') {\r\n            value.forEach(line => {\r\n                line.amount = new Big(line.amount);\r\n                line.balance = line.balance == null ? undefined : new Big(line.balance);\r\n            });\r\n        }\r\n        if (field === 'accountBalance' || field === 'accountAvailableBalance')\r\n            value = new Big(value);\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"New bank transactions synced\";\r\n        } else if (env.action === 'update') {\r\n            return '';\r\n        } else {\r\n            return '';\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/merge-bank-transactions.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { Big } from 'big.js';\r\nimport { TransactionReconciliation } from \"../records/transaction-reconciliation\";\r\nimport { Transaction } from \"../records/transaction\";\r\nimport { BankTransaction } from \"../records/bank-transaction\";\r\nimport { Logger } from \"../../services/logger\";\r\n\r\n\r\nexport class CreateTransactionReconciliation extends DbTransaction {\r\n\r\n    amount: Big;\r\n    transactionId: number;\r\n    bankTransactionId: number;\r\n    transactionAmountOverride: boolean;\r\n\r\n    getTypeId(): string {\r\n        return 'CreateTransactionReconciliation';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(TransactionReconciliation);\r\n        let t = new TransactionReconciliation();\r\n        t.id = this.id * 100000;\r\n        t.amount = this.amount;\r\n        t.transactionId = this.transactionId;\r\n        t.bankTransactionId = this.bankTransactionId;\r\n        t.transactionAmountOverride = this.transactionAmountOverride;\r\n        \r\n\r\n        let transactionTable = tp.table(Transaction);\r\n        let transaction = transactionTable.by('id', <any> this.transactionId);\r\n        if (transaction == null) {\r\n            Logger.get('create-transaction-reconciliation').info('Trying to reconcile against deleted transaction. Skipping.');\r\n            return;\r\n        }\r\n\r\n        if (!transaction.x.reconciliationRecords) transaction.x.reconciliationRecords = []; \r\n        transaction.x.reconciliationRecords.push(t);\r\n\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        if (bankTransaction == null) {\r\n            Logger.get('create-transaction-reconciliation').info('Trying to reconcile against deleted bank transaction. Skipping.');\r\n            return;\r\n        }\r\n            \r\n        if (!bankTransaction.x.reconciliationRecords) bankTransaction.x.reconciliationRecords = []; \r\n        bankTransaction.x.reconciliationRecords.push(t);\r\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\r\n        bankTransactionTable.update(bankTransaction);\r\n\r\n        if (this.transactionAmountOverride) transaction.amount = this.amount;\r\n        transaction.accountId = bankTransaction.accountId;\r\n        this.updateTransactionReconciliationFlags(transaction);\r\n        transactionTable.update(transaction);\r\n\r\n\r\n        table.insert(t);\r\n\r\n        tp.mapTransactionAndRecord(this, t);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionReconciliation);\r\n        let t = table.by('id', <any> (this.id * 100000));\r\n\r\n        if (t.transactionId !== this.transactionId || t.bankTransactionId !== this.bankTransactionId) {\r\n            tp.unsupported();\r\n        }\r\n\r\n        t.amount = this.amount;\r\n        t.transactionAmountOverride = this.transactionAmountOverride;\r\n\r\n        let transactionTable = tp.table(Transaction);\r\n        let transaction = transactionTable.by('id', <any> this.transactionId);\r\n\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\r\n        bankTransactionTable.update(bankTransaction);\r\n\r\n        if (this.transactionAmountOverride) transaction.amount = this.amount;\r\n        // TODO: undoing the transactionAmountOverride needs to re-instate the initial amount from the initial transaction\r\n        transaction.accountId = bankTransaction.accountId;\r\n        this.updateTransactionReconciliationFlags(transaction);\r\n        transactionTable.update(transaction);\r\n\r\n        table.update(t);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(TransactionReconciliation);\r\n        let t = table.by('id', <any> (this.id * 100000));\r\n        table.remove(t);\r\n\r\n        let transactionTable = tp.table(Transaction);\r\n        let transaction = transactionTable.by('id', <any> this.transactionId);\r\n        transaction.x.reconciliationRecords.splice(transaction.x.reconciliationRecords.indexOf(t), 1);\r\n        this.updateTransactionReconciliationFlags(transaction);\r\n        transactionTable.update(transaction);\r\n\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        bankTransaction.x.reconciliationRecords.splice(bankTransaction.x.reconciliationRecords.indexOf(t), 1);\r\n        this.updateBankTransactionReconciliationFlags(bankTransaction);\r\n        bankTransactionTable.update(bankTransaction);\r\n\r\n        // TODO: undoing the transactionAmountOverride needs to re-instate the initial amount from the initial transaction\r\n        // TODO: Needs to re-instate the initial accountId from the initial transaction (if different)\r\n\r\n        tp.unmapTransactionAndRecord(this, t);\r\n\r\n    }\r\n\r\n    updateTransactionReconciliationFlags(transaction: Transaction) {\r\n        let reconTotal = transaction.x.reconciliationRecords.reduce((tot, t) => tot.plus(t.amount), new Big('0'));\r\n        transaction.x.reconciled = reconTotal.eq(transaction.amount);\r\n    }\r\n\r\n    updateBankTransactionReconciliationFlags(bankTransaction: BankTransaction) {\r\n        let reconTotal = bankTransaction.x.reconciliationRecords.reduce((tot, t) => tot.minus(t.amount), new Big('0'));\r\n        bankTransaction.x.reconciled = reconTotal.eq(bankTransaction.amount);\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        if (field === 'amount')\r\n            return new Big(value);\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"Reconciled\";\r\n        } else if (env.action === 'update') {\r\n            return \"Reconciled\";\r\n        } else {\r\n            return \"Unreconciled\";\r\n        } \r\n    }\r\n\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-transaction-reconciliation.ts","import { Injectable, NgZone } from \"@angular/core\";\r\nimport { Utils } from \"../services/utils\";\r\nimport { DemoPlayer } from \"./demo-player\";\r\nimport { DemoUI } from \"./demo-ui\";\r\nimport { DemoSetup } from \"./demo-setup\";\r\nimport { Autofocus } from \"../services/autofocus\";\r\n\r\ndeclare var ebudget;\r\n\r\n@Injectable()\r\nexport class DemoService {\r\n    demoUI: DemoUI;\r\n    demoPlayer: DemoPlayer;\r\n\r\n    private controlUrls = ['https://ebudgetapp.com'];\r\n\r\n    constructor(zone: NgZone, private demoSetup: DemoSetup, private autofocus: Autofocus) {\r\n        if (typeof (<any>window).ebudget === 'undefined') (<any>window).ebudget = {};\r\n    }\r\n\r\n    start() {\r\n\r\n        ebudget.demo = {};\r\n\r\n        window.addEventListener('message', this.receiveMessage.bind(this), false);\r\n\r\n        if (window.parent && Utils.getQueryStringValue('demo_control_url')) {\r\n            window.parent.postMessage({event: 'ready', id: Utils.getQueryStringValue('demo')}, decodeURI(Utils.getQueryStringValue('demo_control_url'))); // TODO: How to get this source ? maybe from demo query string?\r\n        }\r\n\r\n        this.demoUI = new DemoUI();\r\n        this.demoUI.focusEnabled = this.autofocus.enabled && true;\r\n        this.demoPlayer = new DemoPlayer(this.demoUI, this.demoSetup);\r\n        \r\n        this.demoPlayer.onStateChange(state => {\r\n            window.parent.postMessage({event: 'state-change', id: Utils.getQueryStringValue('demo'), state: state}, decodeURI(Utils.getQueryStringValue('demo_control_url'))); // TODO: How to get this source ? maybe from demo query string?            \r\n        })\r\n    }\r\n\r\n    receiveMessage(event: MessageEvent) {\r\n        if (event.origin.startsWith('http://localhost:') || this.controlUrls.indexOf(event.origin) >= 0) {\r\n            if (event.data.demo && event.data.demo.command === 'script') {\r\n                let o = typeof event.data.demo.script == 'string' ? JSON.parse(event.data.demo.script) : event.data.demo.script;\r\n                this.demoPlayer.buildFrom(o);\r\n                this.demoPlayer.setup().then(() => {\r\n                    if (o.autoplay) this.demoPlayer.run();\r\n                });\r\n            } else if (event.data.demo && event.data.demo.command === 'stop') {\r\n                this.demoPlayer.stop();\r\n            } else if (event.data.demo && event.data.demo.command === 'pause') {\r\n                this.demoPlayer.pause();\r\n            } else if (event.data.demo && event.data.demo.command === 'reset') {\r\n                this.demoPlayer.reset();\r\n            } else if (event.data.demo && event.data.demo.command === 'run') {\r\n                this.demoPlayer.run();\r\n            } else if (event.data.demo && event.data.demo.command === 'clear') {\r\n                this.demoPlayer.clear();\r\n            } else {\r\n                alert('invalid message' + JSON.stringify(event.data));\r\n            }\r\n\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-service.ts","import { DemoUI } from \"./demo-ui\";\r\nimport { DemoSetup } from \"./demo-setup\";\r\n\r\n// TODO: Command alias\r\nexport type CommandTypes = 'move' | 'click' | 'wait' | 'type' | 'end' | 'reset' | 'loop' | 'hide-pointer' | 'show-pointer';\r\nexport type StateTypes = 'uninitialised' | 'error' | 'ready' | 'stopped' | 'running' | 'processing' | 'paused';\r\n\r\nexport interface DemoAction {\r\n command: CommandTypes;\r\n args: Array<any>;\r\n}\r\n\r\nexport class DemoPlayer {\r\n    pausing: boolean;\r\n    currentAction: Promise<void>;\r\n    demoSetup: DemoSetup;\r\n\r\n    private actionList: Array<DemoAction>;\r\n    private actionListCurrentLine: number;\r\n    private setupScript: Array<any>;\r\n    private demoUI: DemoUI;\r\n    private _state: StateTypes;\r\n    \r\n    private stateChangeListener: Array<(state: StateTypes) => void> = [];\r\n\r\n    private setState(value: StateTypes) {\r\n        if (this._state == value) return;\r\n        this._state = value;\r\n        this.stateChangeListener.forEach(l => l(this._state));\r\n    }\r\n\r\n    get state(): StateTypes {\r\n        return this._state;\r\n    }\r\n\r\n    onStateChange(listener: (state: StateTypes) => void) {\r\n        this.stateChangeListener.push(listener);\r\n    }\r\n\r\n    constructor(demoUI: DemoUI, demoSetup: DemoSetup) {\r\n        this.demoUI = demoUI;\r\n        this.demoSetup = demoSetup;\r\n        this._state = 'uninitialised';\r\n        this.actionList = [];\r\n    }\r\n\r\n\r\n    example = {\r\n        setup: [\r\n            ['eval', 'some code here'],\r\n            ['eval', 'asyncCall()']\r\n        ],       \r\n        queue: [\r\n            ['move', ''],\r\n            ['click', ''],\r\n        ]\r\n    }\r\n\r\n    buildFrom(o: any) {\r\n        o.queue.forEach((line: Array<any>) => {\r\n            this.actionList.push({command: line[0], args: line.length > 1 ? line.slice(1) : []});\r\n        })\r\n        this.setupScript = o.setup;\r\n    }\r\n\r\n    queue(command: CommandTypes, ... args: Array<any>) {\r\n        this.actionList.push({command: command, args: args});\r\n    }\r\n\r\n    addErrorHandler(handler: (err) => void) {\r\n\r\n    }\r\n\r\n    addCompletedHandler(handler: () => void) {\r\n\r\n    }\r\n\r\n    setup(): Promise<void> {\r\n        if (this.state != 'uninitialised') throw new Error('Illegal state for setup ' + this.state); \r\n        this.setState('processing');\r\n        return this.demoSetup.setup(this.setupScript).then(() => {this.setState('ready')});\r\n    }\r\n\r\n    run() {\r\n        if (this.state != 'ready' && this.state != 'paused') throw new Error('Illegal state for run ' + this.state); \r\n        let fromPaused = this.state == 'paused';\r\n        this.setState('processing');\r\n        this.pausing = false;\r\n        if (!fromPaused) {\r\n            this.actionListCurrentLine = 0;\r\n            this.demoUI.showPointer();\r\n            this.demoUI.resetInterrupt();\r\n        }\r\n        this.setState('running');\r\n        this.runAll();\r\n    }\r\n\r\n    stop() {\r\n        if (this.state != 'ready' && this.state != 'running' && this.state != 'paused') throw new Error('Illegal state for stop ' + this.state); \r\n        this.setState('processing');\r\n        this.demoUI.hidePointer();\r\n        this.demoUI.interrupt();\r\n        this.setState('stopped');\r\n    }\r\n\r\n    pause() {\r\n        if (this.state != 'running') throw new Error('Illegal state for pause ' + this.state); \r\n        this.setState('processing');\r\n        this.pausing = true;\r\n        this.currentAction.then(() => this.setState('paused'));\r\n    }\r\n\r\n    reset() {\r\n        if (this.state != 'ready' && this.state != 'stopped' && this.state != 'paused') throw new Error('Illegal state for reset ' + this.state); \r\n        this.setState('processing');\r\n        return this.demoSetup.reset().then(() => {this.setState('ready')});\r\n    }\r\n\r\n    clear() {\r\n        if (this.state != 'ready' && this.state != 'stopped' && this.state != 'paused') throw new Error('Illegal state for clear ' + this.state); \r\n        this.setState('processing');\r\n        return this.demoSetup.clear().then(() => {this.setState('uninitialised')});\r\n    }\r\n\r\n    private runAll() {\r\n        if (this.state == 'stopped' || this.pausing) return;\r\n\r\n        if (this.actionListCurrentLine < this.actionList.length) { \r\n            let action = this.actionList[this.actionListCurrentLine];\r\n            this.actionListCurrentLine++;\r\n            this.currentAction = this.executeAction(action).then(() => {\r\n                this.runAll();\r\n            }).catch(reason => {\r\n                this.setState('error');\r\n            });\r\n        } else {\r\n            // TODO: Some kind of end notification\r\n            this.stop();\r\n        }\r\n\r\n    }\r\n\r\n    private executeAction(action: DemoAction): Promise<any> {\r\n        switch (action.command) {\r\n            case 'move':\r\n                return this.demoUI.moveTo(action.args[0]);\r\n            case 'click':\r\n                return this.demoUI.click(action.args[0]);\r\n            case 'wait':\r\n                return new Promise(resolve => setTimeout(resolve, action.args[0]));\r\n            case 'type':\r\n                return this.demoUI.input(action.args[0], action.args[1]);\r\n            case 'reset':\r\n                return this.demoSetup.reset();\r\n            case 'hide-pointer':\r\n                return this.demoUI.hidePointer();\r\n            case 'show-pointer':\r\n                return this.demoUI.showPointer();\r\n            case 'loop':\r\n                this.actionListCurrentLine = 0;\r\n                return this.demoSetup.reset();\r\n            default: Promise.reject('Invalid command: ' + action.command);\r\n        }\r\n\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-player.ts","import { Injectable } from \"@angular/core\";\r\n\r\n@Injectable()\r\nexport class DemoUI {\r\n    interrupted: boolean;\r\n    hotspotTop: number;\r\n    hotspotLeft: number;\r\n\r\n    pointerElement: HTMLDivElement;\r\n    focusEnabled: boolean;\r\n    \r\n    constructor() {\r\n        this.createPointer();\r\n    }\r\n\r\n    private createPointer() {\r\n\r\n        if (document.getElementById('demo-pointer')) document.getElementById('demo-pointer').remove();\r\n\r\n        this.pointerElement = document.createElement('div');\r\n        this.pointerElement.id = 'demo-pointer';\r\n        this.pointerElement.style.position = 'fixed';\r\n        this.pointerElement.style.width = '10px';\r\n        this.pointerElement.style.height = '10px';\r\n        this.pointerElement.style.borderRadius = '5px';\r\n        this.pointerElement.style.backgroundColor = 'black';\r\n        this.pointerElement.style.boxShadow = '1px 1px 5px rgba(0,0,0,0.5)';\r\n        this.pointerElement.style.zIndex = '99999999';\r\n        this.hotspotLeft = 5;\r\n        this.hotspotTop = 5;\r\n        this.pointerElement.style.top = (window.innerHeight / 2 - this.hotspotLeft) + 'px';\r\n        this.pointerElement.style.left = (window.innerWidth / 2 - this.hotspotTop) + 'px';\r\n\r\n        document.body.appendChild(this.pointerElement);\r\n\r\n    }\r\n\r\n    dispose() {\r\n        if (document.getElementById('demo-pointer')) document.getElementById('demo-pointer').remove();\r\n        if (document.activeElement && (<any>document.activeElement).blur)  (<any>document.activeElement).blur();\r\n    }\r\n\r\n    private movePointer(pos: {x: number, y: number}) {\r\n        // TODO: Work out the distance and alter the duration (from a set of presets, eg. 100, 200, 300, 400, can round it...) before applying the change here...\r\n\r\n        this.pointerElement.style.left = (pos.x - this.hotspotLeft) + 'px';\r\n        this.pointerElement.style.top = (pos.y - this.hotspotTop) + 'px';\r\n    }\r\n\r\n    private showPointerClick() {\r\n\r\n    }\r\n\r\n    async showPointer() {\r\n        this.pointerElement.style.display = '';\r\n    }\r\n\r\n    async hidePointer() {\r\n        this.pointerElement.style.display = 'none';\r\n    }\r\n\r\n    interrupt() {\r\n        this.interrupted = true;\r\n    }\r\n\r\n    resetInterrupt() {\r\n        this.interrupted = false;\r\n    }\r\n\r\n    private getElementCenterPosition(elementSelector: string): {x: number, y: number} {\r\n\r\n        let ele = <HTMLElement> document.querySelector(elementSelector);\r\n        let el = ele;\r\n        // from https://www.kirupa.com/html5/get_element_position_using_javascript.htm\r\n\r\n        var xPos = 0;\r\n        var yPos = 0;\r\n        \r\n        while (el) {\r\n            if (el.tagName === \"BODY\") {\r\n                // deal with browser quirks with body/window/document and page scroll\r\n                var xScroll = el.scrollLeft || document.documentElement.scrollLeft;\r\n                var yScroll = el.scrollTop || document.documentElement.scrollTop;\r\n            \r\n                xPos += (el.offsetLeft - xScroll + el.clientLeft);\r\n                yPos += (el.offsetTop - yScroll + el.clientTop);\r\n            } else {\r\n                // for all other non-BODY elements\r\n                xPos += (el.offsetLeft - el.scrollLeft + el.clientLeft);\r\n                yPos += (el.offsetTop - el.scrollTop + el.clientTop);\r\n            }\r\n        \r\n            el = <HTMLElement> el.offsetParent;\r\n        }\r\n\r\n        return {x: xPos + ele.offsetWidth / 2, y: yPos + ele.offsetHeight / 2};\r\n\r\n\r\n    }\r\n\r\n    moveTo(elementSelector: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.movePointer(this.getElementCenterPosition(elementSelector));\r\n            setTimeout(() => resolve(), 1000);\r\n        });\r\n    }\r\n\r\n    click(elementSelector: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            let ele = <HTMLElement> document.querySelector(elementSelector);\r\n            //ele.click();\r\n\r\n            let evt = document.createEvent('MouseEvents');\r\n            evt.initMouseEvent('mousedown',true,true,document.defaultView,0,0,0,this.pointerElement.offsetLeft,this.pointerElement.offsetTop,false,false,false,false,1,null);\r\n            ele.dispatchEvent(evt);\r\n\r\n            if (this.focusEnabled) {\r\n                if (ele.querySelector('input')) ele.querySelector('input').focus();\r\n                else ele.focus(); \r\n            }\r\n\r\n            setTimeout(() => {\r\n                let evt = document.createEvent('MouseEvents');\r\n                evt.initMouseEvent('mouseup',true,true,document.defaultView,0,0,0,this.pointerElement.offsetLeft,this.pointerElement.offsetTop,false,false,false,false,1,null);\r\n                ele.dispatchEvent(evt);\r\n                evt = document.createEvent('MouseEvents');\r\n                evt.initMouseEvent('click',true,true,document.defaultView,0,0,0,this.pointerElement.offsetLeft,this.pointerElement.offsetTop,false,false,false,false,1,null);\r\n                ele.dispatchEvent(evt);\r\n                resolve();\r\n            }, 30);\r\n        });\r\n\r\n        // TODO: Some way to test / wait for action ?\r\n    }\r\n\r\n    input(elementSelector: string, text: string): Promise<void> {\r\n        let ele = <HTMLInputElement> document.querySelector(elementSelector);\r\n        if (ele.querySelector('input')) ele = ele.querySelector('input');\r\n        ele.value = '';\r\n        if (text.length === 0) return Promise.resolve();\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            this.typeChars(ele, text, resolve);\r\n            // TODO: Check value at the end is correct ?\r\n        });\r\n\r\n    }\r\n\r\n    private typeChars(ele: HTMLInputElement, chars: string, resolve: () => void) {\r\n        if (this.interrupted) return;\r\n        ele.value = ele.value + chars.substr(0, 1);\r\n        ele.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\r\n        if (chars.length > 1) setTimeout(() => this.typeChars(ele, chars.substr(1), resolve), 200);\r\n        else resolve();\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/demo/demo-ui.ts","import {LoggerAppender, Logger} from './logger';\r\n\r\nexport class LoggerStorageAppender implements LoggerAppender {\r\n\r\n    public static appenders: Map<string, LoggerStorageAppender> = new Map<string, LoggerStorageAppender>();\r\n    public limit: number = 1000;\r\n\r\n    constructor(private key: string) {\r\n        LoggerStorageAppender.appenders.set(key, this);\r\n    }\r\n\r\n    public logLines: {timestamp: number; level: number; data: string[]}[] = [];\r\n\r\n     log (level: number, data: any[]) {\r\n         let stringData = new Array<string>();\r\n         data.forEach(e => {\r\n             stringData.push(Logger.stringValue(e) + '');\r\n         });\r\n\r\n         let length = this.logLines.push({timestamp: Date.now(), level: level, data: stringData});\r\n         if (length > this.limit) this.logLines = this.logLines.splice(0, length - this.limit);\r\n     }\r\n\r\n     /**\r\n      * Reverse chronological order (newest to oldest) dump of all the data\r\n      */\r\n     stringDump(): string {\r\n         let all = '';\r\n         for (let i = this.logLines.length - 1; i >= 0; i--) {\r\n             all += this.lineToString(this.logLines[i]) + '\\n';\r\n         }\r\n         return all;\r\n     }\r\n\r\n     lineToString(logLine: any): string {\r\n         let d = new Date(logLine.timestamp);\r\n         let dateString = d.getFullYear() + '-' + (d.getMonth() < 9 ? '0' : '') + (d.getMonth() + 1) + '-' + (d.getDate() < 10 ? '0' : '') + d.getDate() + ' ' + d.getHours() + ':' + (d.getMinutes() < 10 ? '0' : '') + d.getMinutes() + ':' + (d.getSeconds() < 10 ? '0' : '') + d.getSeconds() + '.' + (d.getMilliseconds() < 10 ? '00' : d.getMilliseconds() < 100 ? '0' : '') + d.getMilliseconds();\r\n         let logLevel = logLine.level === 1 ? 'D' : logLine.level === 3 ? 'E' : 'I';\r\n         let dataString = '';\r\n         if (logLine.data.length > 0) dataString = Logger.stringValue(logLine.data[0]);\r\n         //if (logLine.data.length > 1) dataString += '\\n--------';\r\n         for (let i = 1; i < logLine.data.length; i++) {\r\n             dataString += '\\n' + Logger.stringValue(logLine.data[i]);\r\n         }\r\n         //if (logLine.data.length > 1) dataString += '\\n--------';\r\n         return '[' + logLevel + ' ' + dateString + '] ' + dataString;\r\n     }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/logger-storage-appender.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Account} from '../records/account';\r\nimport {AccountBalanceProcessor} from '../processors/account-balance';\r\nimport { Big } from 'big.js';\r\nimport { BankLink } from \"../records/bank-link\";\r\nimport { Logger } from \"../../services/logger\";\r\n\r\n\r\nexport class CreateBankLink extends DbTransaction {\r\n\r\n    name: string;\r\n    uuid: string;\r\n    provider: string;\r\n    configuration: any;\r\n\r\n    getTypeId(): string {\r\n        return 'CreateBankLink';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n        \r\n        // TODO: Validation\r\n        if (this.uuid == null) throw new Error(\"UUID Required\");\r\n        \r\n        let table = tp.table(BankLink);\r\n        let bl = new BankLink();\r\n        bl.id = this.id;\r\n        bl.uuid = this.uuid;\r\n        bl.name = this.name;\r\n        bl.provider = this.provider;\r\n        bl.configuration = this.configuration;\r\n\r\n        table.insert(bl);\r\n        tp.mapTransactionAndRecord(this, bl);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation\r\n\r\n        let table = tp.table(BankLink);\r\n        let bl = table.by('id', <any> this.id);\r\n        bl.name = this.name;\r\n        bl.provider = this.provider;\r\n        bl.configuration = this.configuration;\r\n        \r\n        table.update(bl);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(BankLink);\r\n        let bl = table.by('id', <any> this.id);\r\n        table.remove(bl);\r\n        // No need to unmap as the transaction mapping in the record\r\n\r\n        tp.db.dbms.configuration.secureAccessor(\"banklink_\" + this.uuid).removeScope().catch(reason => {\r\n            // Just a cleanup step - if it fails, then we can really ignore it - We'll just log an info message\r\n            Logger.get('CreateBankLink').info('Error in removing the secure scope in undo transaction for CreateBankLink.', reason);\r\n        });\r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"created bank link \" + this.provider;\r\n        } else if (env.action === 'update') {\r\n            return \"renamed bank link {{old name}} to \" + this.provider;\r\n        } else {\r\n            return \"removed bank link \" + this.provider;\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/create-bank-link.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Account} from '../records/account';\r\nimport {AccountBalanceProcessor} from '../processors/account-balance';\r\nimport { Big } from 'big.js';\r\n\r\n\r\nexport class SetAccountBankLink extends DbTransaction {\r\n\r\n    id: number;\r\n    accountId: number;\r\n    bankLinkId: number;\r\n    configuration: any;\r\n\r\n    getTypeId(): string {\r\n        return 'SetAccountBankLinkTransaction';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n        \r\n        // TODO: Validation - bank link Id is valid\r\n        \r\n        let table = tp.table(Account);\r\n        let a = table.by('id', <any> this.accountId);\r\n        a.bankLinkId = this.bankLinkId;\r\n        a.bankLinkConfiguration = this.configuration;\r\n\r\n        tp.mapTransactionAndRecord(this, a);\r\n        table.update(a);\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n\r\n        // TODO: Validation cannot change account id\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let table = tp.table(Account);\r\n        let a = table.by('id', <any> this.accountId);\r\n        delete a.bankLinkId;\r\n        delete a.bankLinkConfiguration;\r\n\r\n        tp.unmapTransactionAndRecord(this, a);\r\n        \r\n    }\r\n    \r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        if (env.action === 'apply') {\r\n            return \"created account bank link\";\r\n        } else if (env.action === 'update') {\r\n            return \"updated account bank link\";\r\n        } else {\r\n            return \"removed account bank link\";\r\n        } \r\n    }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/set-account-bank-link.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { BankTransaction } from \"../records/bank-transaction\";\r\n\r\nexport class BankTransactionIgnore extends DbTransaction {\r\n\r\n    bankTransactionId: number;    \r\n\r\n    getTypeId(): string {\r\n        return 'BankTransactionIgnore';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        if (bankTransaction != null) {\r\n            bankTransaction.x.ignored = true;\r\n            bankTransactionTable.update(bankTransaction);\r\n            tp.mapTransactionAndRecord(this, bankTransaction);\r\n        }\r\n\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        if (bankTransaction != null) {\r\n            bankTransaction.x.ignored = undefined;\r\n            //delete bankTransaction.x.ignored; Keep the property so we can bind to it\r\n            bankTransactionTable.update(bankTransaction);\r\n            tp.unmapTransactionAndRecord(this, bankTransaction);\r\n        }\r\n    }\r\n\r\n\r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n\r\n        return \"Ignored Bank Transaction \"; // + ? TODO: Get the bank transaction name\r\n        // TODO: unignored...\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/bank-transaction-ignore.ts","import {DbTransaction, TransactionStringEnv} from '../../db/transaction';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport { BankTransaction } from \"../records/bank-transaction\";\r\n\r\nexport class BankTransactionDelete extends DbTransaction {\r\n\r\n    bankTransactionId: number;    \r\n\r\n    getTypeId(): string {\r\n        return 'BankTransactionDelete';\r\n    }\r\n\r\n    apply(tp: TransactionProcessor) {\r\n\r\n        let bankTransactionTable = tp.table(BankTransaction);\r\n        let bankTransaction = bankTransactionTable.by('id', <any> this.bankTransactionId);\r\n        if (bankTransaction != null) {\r\n            bankTransactionTable.remove(bankTransaction);\r\n        }\r\n\r\n    }\r\n\r\n    update(tp: TransactionProcessor) {\r\n        this.apply(tp);\r\n    }\r\n    \r\n    undo(tp: TransactionProcessor) {\r\n        // TODO: Not sure how to undo this... we would need to just delete this, then rebuild bank account record (well, rebuild the whole database really)\r\n        throw new Error(\"Not yet implemented\");\r\n    }\r\n\r\n\r\n    deserialize(field: string, value: any): any {\r\n        return value;\r\n    }\r\n\r\n    toHumanisedString(env: TransactionStringEnv): string {\r\n        return \"Deleted Bank Transaction \"; // + ? TODO: Get the bank transaction name\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/transactions/bank-transaction-delete.ts","import {NavController, NavParams, AlertController, ModalController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Db} from '../../db/db';\r\nimport {Engine} from '../../engine/engine';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Replication} from '../../services/replication-service';\r\nimport {Logger} from '../../services/logger';\r\nimport {Budget} from '../../data/records/budget';\r\nimport {HomePage} from '../home/home';\r\nimport {ShareBudgetModal} from '../../modals/share-budget/share-budget';\r\nimport {InitBudgetTransaction} from '../../data/transactions/init-budget-transaction';\r\nimport {Http} from '@angular/http';\r\nimport {Account} from '../../data/records/account';\r\nimport {AccountPage} from '../../pages/account/account';\r\nimport {AddEditAccountModal} from '../../modals/add-edit-account/add-edit-account';\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\nimport { AddEditBankLinkModal } from \"../../modals/add-edit-bank-link/add-edit-bank-link\";\r\nimport { BankLinkPage } from \"../bank-link/bank-link\";\r\n\r\n@Component({\r\n  templateUrl: 'budget-settings.html'\r\n})\r\nexport class BudgetSettingsPage {\r\n  \r\n  private db: Db;\r\n  private initBudgetTransaction: InitBudgetTransaction;\r\n  private logger: Logger = Logger.get('BudgetSettingsPage');\r\n  private engine: Engine;\r\n\r\n  private data: {\r\n    budgetName: string;\r\n  }\r\n\r\n  public budgetNameUpdating: boolean;\r\n\r\n  constructor(private nav: NavController, private navParams: NavParams, private configuration: Configuration, private replication: Replication, private http: Http, private dbms: Dbms, private alertController: AlertController, private engineFactory: EngineFactory, private modalController: ModalController) {\r\n    this.nav = nav;\r\n    this.db = this.dbms.getDb(navParams.data.budgetId);\r\n    this.engine = this.engineFactory.getEngine(this.db);\r\n\r\n    let budgetRecord = this.db.transactionProcessor.single(Budget);\r\n    this.initBudgetTransaction = this.db.transactionProcessor.findTransactionsForRecord(budgetRecord, InitBudgetTransaction)[0];\r\n\r\n    this.data = <any>{};\r\n    this.data.budgetName = this.db.name();\r\n  }\r\n\r\n  addAccount() {\r\n    let modal = this.modalController.create(AddEditAccountModal, {budgetId: this.db.id});\r\n\r\n    modal.onDidDismiss(data => {\r\n      if (data && data.accountId) {\r\n        this.nav.push(AccountPage, {accountId: data.accountId, budgetId: this.db.id});\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n\r\n  openAccount(account: Account) {\r\n    this.nav.push(AccountPage, {accountId: account.id, budgetId: this.db.id});\r\n  }\r\n\r\n  addBankLink() {\r\n    let modal = this.modalController.create(AddEditBankLinkModal, {budgetId: this.db.id});\r\n\r\n    modal.onDidDismiss(data => {\r\n      if (data && data.bankLinkId) {\r\n        this.nav.push(BankLinkPage, {bankLinkId: data.bankLinktId, budgetId: this.db.id});\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n\r\n  openBankLink(bankLink: BankLink) {\r\n    this.nav.push(BankLinkPage, {bankLinkId: bankLink.id, budgetId: this.db.id});\r\n  }\r\n\r\n\r\n  updateBudgetName() {\r\n    if (this.data.budgetName == \"\") {\r\n      this.data.budgetName = this.initBudgetTransaction.budgetName;\r\n      return;\r\n    }\r\n\r\n    if (this.initBudgetTransaction.budgetName !== this.data.budgetName) {\r\n      this.initBudgetTransaction.budgetName = this.data.budgetName;\r\n      this.db.applyTransaction(this.initBudgetTransaction);\r\n      \r\n      if (this.replication.enabled(this.db)) {\r\n        // TODO: really need to refactor this out...\r\n        this.budgetNameUpdating = true;\r\n        ShareBudgetModal.postShare(this.http, this.db.id, this.db.name(), this.configuration.deviceInstallationId, this.configuration.deviceName)\r\n        .map(response => response.json())\r\n        .subscribe(response => {\r\n          this.logger.info(\"Updated shared budget name to \" + this.db.name());\r\n        }, error => {\r\n          this.logger.error(\"Error updating shared budget name to \" + this.db.name(), error);\r\n        }, () => {\r\n          this.budgetNameUpdating = false;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  deleteBudgetConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this budget (' + this.db.name() + ')?',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n              this.doDeleteBudget();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n\r\n  doDeleteBudget() {\r\n    this.db.deactivate();\r\n    this.dbms.deleteDb(this.db.id);\r\n    this.configuration.lastOpenedBudget(null);\r\n    this.nav.setRoot(HomePage);\r\n  }\r\n\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/budget-settings/budget-settings.ts","import {NavController, NavParams, ModalController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Engine} from '../../engine/engine';\r\nimport {EngineFactory} from '../../engine/engine-factory';\r\nimport {Account} from '../../data/records/account';\r\nimport {AddEditAccountModal} from '../../modals/add-edit-account/add-edit-account';\r\nimport {BankSync} from '../../bank/bank-sync';\r\nimport {Notifications} from '../../services/notifications';\r\nimport {Logger} from '../../services/logger';\r\nimport {StandardHostInterface} from '../../bank/standard-host-interface';\r\nimport {BankAccountPage} from '../bank-account/bank-account';\r\n\r\n@Component({\r\n  templateUrl: 'account.html'\r\n})\r\nexport class AccountPage {\r\n  \r\n  engine: Engine;\r\n  account: Account;\r\n  syncing: boolean;\r\n  private logger = Logger.get('BankAccountPage');\r\n\r\n  constructor(private nav: NavController, private dbms: Dbms, private navParams: NavParams, private engineFactory: EngineFactory, private modalController: ModalController, private bankSync: BankSync, private notifications: Notifications, private standardHostInterface: StandardHostInterface) {\r\n    this.engine = this.engineFactory.getEngineById(navParams.data.budgetId);\r\n    this.account = this.engine.getRecordById(Account, navParams.data.accountId);\r\n  }\r\n  \r\n  editAccount() {\r\n    let modal = this.modalController.create(AddEditAccountModal, {budgetId: this.engine.db.id, accountId: this.account.id});\r\n    modal.present();\r\n  }\r\n\r\n  gotoBank() {\r\n    this.nav.push(BankAccountPage, {budgetId: this.navParams.data.budgetId,  accountId: this.navParams.data.accountId});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/account/account.ts","import {Injectable} from '@angular/core';\r\nimport {BankAccountTransaction, BankAccount} from './provider-interface';\r\nimport {Logger} from '../services/logger';\r\nimport {BankTransaction} from '../data/records/bank-transaction';\r\nimport {Account} from '../data/records/account';\r\nimport {MergeBankTransactions} from '../data/transactions/merge-bank-transactions';\r\nimport { Big } from 'big.js';\r\nimport {Engine} from '../engine/engine';\r\nimport {Utils} from '../services/utils';\r\n\r\nclass AccountTransactionProcessing extends BankAccountTransaction {\r\n    originalIndex: number;\r\n    amountBig: Big;\r\n    balanceBig: Big;\r\n    balanceCheck: boolean;\r\n    matched: boolean;\r\n    matchedAccountTransaction: BankTransaction;\r\n    balanceSequence: number;\r\n}\r\n\r\n@Injectable()\r\nexport class TransactionSync {\r\n\r\n    private logger = Logger.get('TransactionSync');\r\n\r\n    merge(engine: Engine, account: Account, bankAccount: BankAccount, bankAccountTransactions: BankAccountTransaction[]) {\r\n\r\n        //TODO: The page for viewing them\r\n        //TODO: A \"clear\" button for the bank transactions\r\n\r\n        let inTransactions = <AccountTransactionProcessing[]> bankAccountTransactions;\r\n        for (let i = 0; i < inTransactions.length; i++) inTransactions[i].originalIndex = i;\r\n\r\n        let sortMap = {'authorised': 3, 'recent': 2, 'processed': 1};\r\n\r\n        inTransactions.sort((a, b) => \r\n            sortMap[a.status] - sortMap[b.status] || Number(a.transactionDate || '0') - Number(b.transactionDate || '0') || a.originalIndex - b.originalIndex\r\n        );\r\n\r\n        let minDate = Math.min.apply(null, inTransactions.filter(t => t.transactionDate).map(t => Number(t.transactionDate)));\r\n\r\n        let existingBankTransactions = engine.db.transactionProcessor.table(BankTransaction).find()\r\n        .filter(t => t.accountId === account.id && ((t.status === 'authorised' && t.date >= minDate) || t.status !== 'authorised'))\r\n        .sort((a, b) => \r\n            sortMap[a.status] - sortMap[b.status] || Number(a.date || '0') - Number(b.date || '0') || a.id - b.id\r\n        );\r\n\r\n        inTransactions.forEach(t => {\r\n            // TODO: Any kind of description filtering !?\r\n            t.amountBig = new Big(t.amount);\r\n            if (t.balance) t.balanceBig = new Big(t.balance);\r\n        });\r\n\r\n        let lastTransaction = <AccountTransactionProcessing> null;\r\n        let daySequence = 0;\r\n        inTransactions.filter(t => t.status === 'processed').forEach(t => {\r\n            if (!lastTransaction || lastTransaction.transactionDate !== t.transactionDate) daySequence = 0;\r\n            t.balanceSequence = Number(t.transactionDate) * 10000 + daySequence;\r\n            t.balanceCheck = !lastTransaction || lastTransaction.balanceBig.plus(t.amountBig).eq(t.balanceBig);\r\n            if (!t.balanceCheck) this.logger.info(\"Balance sequence check failed\", lastTransaction, t);\r\n            daySequence++;\r\n            lastTransaction = t;\r\n        });\r\n\r\n\r\n        inTransactions.forEach(t => {\r\n            let {index} = this.findFirstMatch(t, existingBankTransactions);\r\n            if (index >= 0) {\r\n                t.matched = true;\r\n                t.matchedAccountTransaction = existingBankTransactions.splice(index, 1)[0];\r\n            }        \r\n        });\r\n\r\n\r\n        let unmatchedExistingRecords = existingBankTransactions.filter(t => t.status !== 'processed');\r\n        let minMatchedDate = Math.min.apply(null, inTransactions.filter(t => t.status === 'processed' && t.matched).map(t => Number(t.transactionDate)));\r\n        if (minMatchedDate !== Infinity && minMatchedDate !== NaN && minMatchedDate > 0) {\r\n            unmatchedExistingRecords = unmatchedExistingRecords.concat(existingBankTransactions.filter(t => t.status === 'processed' && t.date > minMatchedDate));\r\n        }\r\n\r\n        // TODO: CHECK THE BALANCES AND SEQUENCES HAVEN'T CHANGED (OR USE THEM AS PART OF THE MATCHING PROCESS ??)\r\n\r\n        // TODO: Do another check of toAdd to unmatchedExistingRecords and check for same amount, but different date OR description ??? - Only do this if real world evidence suggests any discrepency which results in an add/remove rather than update\r\n\r\n        // Now we want unmatched to add, matched to update if to pending / authorised\r\n        let toUpgrade = inTransactions.filter(t => t.matched && t.status !== t.matchedAccountTransaction.status);\r\n        let toAdd = inTransactions.filter(t => !t.matched);\r\n\r\n        let toFlag = unmatchedExistingRecords.filter(t => !t.flagRemoved).map(t=> {return {bankTransactionId: t.id, flag: 'removed', set: true};})\r\n                    .concat(inTransactions.filter(t => t.matched && t.matchedAccountTransaction.flagRemoved).map(t=> {return {bankTransactionId: t.matchedAccountTransaction. id, flag: 'removed', set: undefined};}));\r\n\r\n        let mergeBankTransactions = new MergeBankTransactions();\r\n        mergeBankTransactions.accountId = account.id;\r\n        \r\n        if (toUpgrade)\r\n            mergeBankTransactions.inserts = toAdd.map(t => {return {date: t.transactionDate || Utils.nowYYYYMMDD(), status: t.status, description: t.description, amount: t.amountBig, balance: t.balanceBig, balanceSequence: t.balanceSequence};});\r\n        \r\n        if (toAdd)\r\n            mergeBankTransactions.upgrades = toUpgrade.map(t => {return {bankTransactionId: t.matchedAccountTransaction.id, date: t.transactionDate, status: t.status, description: t.description, amount: t.amountBig, balance: t.balanceBig, balanceSequence: t.balanceSequence};});\r\n        \r\n        if (toFlag)\r\n            mergeBankTransactions.flags = toFlag;\r\n\r\n        if (account.x.bankBalance + '' !== bankAccount.accountBalance + '') mergeBankTransactions.accountBalance = new Big(bankAccount.accountBalance);\r\n        if (account.x.bankAvailableBalance + '' !== bankAccount.accountAvailableBalance + '') mergeBankTransactions.accountAvailableBalance = new Big(bankAccount.accountAvailableBalance);\r\n\r\n        if (toUpgrade || toAdd || toFlag || mergeBankTransactions.accountBalance || mergeBankTransactions.accountAvailableBalance) mergeBankTransactions.generateChecksum(engine.db.transactionProcessor);\r\n\r\n        mergeBankTransactions.timestamp = new Date().toISOString();\r\n\r\n\r\n        engine.db.applyTransaction(mergeBankTransactions);\r\n\r\n\r\n    }\r\n\r\n    findFirstMatch(inTransaction: AccountTransactionProcessing, accountTransactions: BankTransaction[], fromIndex: number = 0): {record: BankTransaction; index: number} {\r\n\r\n        let i = -2;\r\n        accountTransactions = accountTransactions.slice(fromIndex);\r\n\r\n        if (inTransaction.status === 'processed') {\r\n            // Processed - match : Date, status, description & amount - full record, or a record upgrade (see comments inline)\r\n            i = accountTransactions.findIndex(t => \r\n                (t.status === 'processed' && t.amount.eq(inTransaction.amountBig) && t.date === inTransaction.transactionDate && t.description == inTransaction.description)\r\n                || (t.status === 'recent' && t.amount.eq(inTransaction.amountBig)) // Not sure on description ? // Date >= ?, or within tolerance ?\r\n                || (t.status === 'authorised' && t.amount.eq(inTransaction.amountBig) && t.date <= inTransaction.transactionDate) // Processed date >= authorised date\r\n            );\r\n\r\n        } else if (inTransaction.status === 'authorised') {\r\n            // Authorised - match : Date, status = 'authorised', description & amount - full record\r\n            i = accountTransactions.findIndex(t => \r\n                t.status === 'authorised' && t.amount.eq(inTransaction.amountBig) && t.date === inTransaction.transactionDate && t.description == inTransaction.description\r\n            );\r\n        } else if (inTransaction.status === 'recent') {\r\n            // Recent - match : status = 'recent' | 'authorised', description & amount - full record\r\n            i = accountTransactions.findIndex(t => \r\n                (t.status === 'recent' && t.amount.eq(inTransaction.amountBig) && t.description == inTransaction.description)\r\n                || (t.status === 'authorised' && t.amount.eq(inTransaction.amountBig))\r\n            );\r\n        } else {\r\n            // error TODO\r\n        }\r\n\r\n        return {record: i >= 0 ? accountTransactions[i]: null, index: i >= 0 ? i + fromIndex : i};\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/transaction-sync.ts","import { Injectable } from \"@angular/core\";\r\nimport { InAppBrowser } from \"@ionic-native/in-app-browser\";\r\nimport { InAppBrowserInterface } from \"./in-app-browser-interface\";\r\nimport { Logger } from \"../services/logger\";\r\nimport { Notifications } from \"../services/notifications\";\r\nimport { BankSyncMonitor } from \"./bank-sync-monitor\";\r\n\r\n@Injectable()\r\nexport class InAppBrowserInterfaceFactory {\r\n    constructor(private inAppBrowser: InAppBrowser, private notifications: Notifications) {\r\n\r\n    }\r\n\r\n    public async createBrowser(logger: Logger, backgroundMode: boolean, monitor: BankSyncMonitor): Promise<InAppBrowserInterface> {\r\n        let browserObject = this.inAppBrowser.create('about:blank', '_blank', {hidden: 'yes', hardwareback: 'no', zoom: 'no', location: 'yes'});\r\n        let inAppBrowserInterface = new InAppBrowserInterface(browserObject, logger, this.notifications, backgroundMode, monitor);\r\n        await inAppBrowserInterface.onLoadStop();\r\n        return inAppBrowserInterface;\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/in-app-browser-interface-factory.ts","import { Observer } from \"rxjs/Observer\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { BankLink } from \"../data/records/bank-link\";\r\nimport { ProviderSchema, ProviderInterface } from \"./provider-interface\";\r\nimport { Engine } from \"../engine/engine\";\r\nimport { Logger } from \"../services/logger\";\r\nimport { Account } from \"../data/records/account\";\r\n\r\ntype SyncEventType = 'complete-state-change' | 'error-state-change' | 'running-state-change' | 'cancelling-state-change' | 'cancelled-state-change';\r\n\r\nexport class SyncEvent {\r\n    event: string;\r\n    constructor(event: SyncEventType) {\r\n        this.event = event;\r\n    }\r\n}\r\n\r\nexport class BankSyncMonitor {\r\n    observer: Observer<SyncEvent>;\r\n    source: Observable<SyncEvent>;\r\n\r\n    constructor() {\r\n        this.source = new Observable<SyncEvent>(observer => {this.observer = observer;}).share();\r\n    }\r\n\r\n    error(message: string) {\r\n        if (!this.errors) {\r\n            this.errors = true;\r\n            this.errorMessage = message;\r\n        } else {\r\n            this.errorMessage += '\\n' + message;\r\n        }\r\n        this.observer.next(new SyncEvent('error-state-change'));\r\n    }\r\n\r\n    bankLink: BankLink;\r\n    providerSchema: ProviderSchema;\r\n    provider: ProviderInterface;\r\n    engine: Engine;\r\n    accounts: Account[];\r\n\r\n    logger: Logger;\r\n    log: string[] = [];\r\n\r\n    backgroundMode: boolean;\r\n\r\n    startTime: number;\r\n\r\n    cancel() {\r\n        if (!this.cancelling) {\r\n            this.cancelling = true;\r\n            this.provider.interrupt();\r\n        }\r\n    }\r\n\r\n    public errorMessage: string;\r\n    public errors: boolean;\r\n    private _running: boolean;\r\n    private _complete: boolean;\r\n    private _cancelling: boolean;\r\n    private _cancelled: boolean;\r\n\r\n    get cancelling() {return this._cancelling;}\r\n    set cancelling(value: boolean) {this._cancelling = value; if (this.observer) this.observer.next(new SyncEvent('cancelling-state-change'));}\r\n    get running() {return this._running;}\r\n    set running(value: boolean) {this._running = value; if (this.observer) this.observer.next(new SyncEvent('running-state-change'));}\r\n    get complete() {return this._complete;}\r\n    set complete(value: boolean) {\r\n        this._complete = value;\r\n        if (this.observer) {\r\n            this.logger.debug(\"Firing Complete\");\r\n            this.observer.next(new SyncEvent('complete-state-change'));\r\n        }\r\n    }\r\n    get cancelled() {return this._cancelled;}\r\n    set cancelled(value: boolean) {this._cancelled = value; if (this.observer) this.observer.next(new SyncEvent('cancelled-state-change'));}\r\n\r\n    on(event: SyncEventType): Observable<SyncEvent> {\r\n        return this.source.filter(ev => ev.event == event);\r\n    }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-sync-monitor.ts","import {NavController, ViewController, NavParams, AlertController, ModalController} from 'ionic-angular';\r\nimport {Db} from '../../db/db';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Component} from '@angular/core';\r\nimport { BankTransaction } from \"../../data/records/bank-transaction\";\r\nimport { Transaction } from \"../../data/records/transaction\";\r\nimport { TransactionReconciliation } from \"../../data/records/transaction-reconciliation\";\r\nimport { EngineFactory } from \"../../engine/engine-factory\";\r\nimport { Engine } from \"../../engine/engine\";\r\nimport { Big } from 'big.js';\r\nimport { CreateTransactionReconciliation } from \"../../data/transactions/create-transaction-reconciliation\";\r\nimport { AddEditSplitTransactionModal } from \"../add-edit-split-transaction/add-edit-split-transaction\";\r\n\r\n@Component({\r\n  templateUrl: 'view-bank-transaction.html'\r\n})\r\nexport class ViewBankTransactionModal {\r\n\r\n  engine: Engine;\r\n  budget: Db;\r\n  t: BankTransaction;\r\n  selectedTransactions: Map<Transaction, TransactionReconciliation | {amount: Big, transactionAmountOverride?: boolean}>\r\n  initialSelectedTransactions: Map<Transaction, TransactionReconciliation>\r\n  transactionsUnreconciledCached: Transaction[];\r\n  forceRefresh: boolean;\r\n\r\n  constructor(private configuration: Configuration, private engineFactory: EngineFactory, public viewCtrl: ViewController, private navParams: NavParams, private dbms: Dbms, private nav: NavController, private alertController: AlertController, private modalController: ModalController) {\r\n    this.viewCtrl = viewCtrl;\r\n    this.nav = nav;\r\n    \r\n    this.budget = dbms.getDb(navParams.data.budgetId);\r\n    this.engine = engineFactory.getEngine(this.budget);\r\n    this.t = this.budget.transactionProcessor.table(BankTransaction).by('id', navParams.data.bankTransactionId);\r\n\r\n    this.initialSelectedTransactions = new Map();\r\n    if (this.t.x.reconciliationRecords) {\r\n      this.t.x.reconciliationRecords.forEach(transactionReconciliation => {\r\n        let transaction = this.budget.transactionProcessor.table(Transaction).by('id', transactionReconciliation.transactionId);\r\n        this.initialSelectedTransactions.set(transaction, transactionReconciliation);\r\n      });\r\n    }\r\n\r\n    this.selectedTransactions = new Map(this.initialSelectedTransactions);\r\n\r\n  }\r\n\r\n  unreconciliedAndThisReconciledTransactions(): Transaction[] {\r\n\r\n    let view = this.engine.getTransactionsUnreconciledView();\r\n    if (view.sortDirty || view.resultsdirty || this.forceRefresh || !this.transactionsUnreconciledCached) {\r\n      this.forceRefresh = false;\r\n      this.transactionsUnreconciledCached = view.data();\r\n\r\n      // TODO: Sorting based on match probability\r\n      // TODO: Group. ie. transactions on this account, transactions with no account, transactions on another account...\r\n\r\n\r\n      this.initialSelectedTransactions.forEach((r1, t1) => {\r\n        let existing = this.transactionsUnreconciledCached.indexOf(t1);\r\n        if (existing >= 0) this.transactionsUnreconciledCached.splice(existing, 1);\r\n        this.transactionsUnreconciledCached.unshift(t1);\r\n      });\r\n\r\n      this.selectedTransactions.forEach((r1, t1) => {\r\n        let existing = this.transactionsUnreconciledCached.indexOf(t1);\r\n        if (existing < 0) this.transactionsUnreconciledCached.unshift(t1);\r\n      });\r\n\r\n    }\r\n\r\n    return this.transactionsUnreconciledCached;\r\n\r\n  }\r\n\r\n  toggleSelected(transaction: Transaction) {\r\n    if (this.selectedTransactions.has(transaction)) {\r\n      // TODO: Message if the transaction will be restored to it's initial amount and/or account - only for already saved reconciliations - not for new ones (you'd assume it would be)\r\n      // TODO: This needs to be implemented in the dbTransaction so when the \"undo\" or \"update\" event happens then it correctly restores the initial transaction\r\n\r\n      this.selectedTransactions.delete(transaction);\r\n    } else {\r\n      if (transaction.accountId != null && transaction.accountId != this.t.accountId) {\r\n        this.alertController.create({message: \"The selected transaction is logged under a different account (TODO: Account name) in the budget. By reconciling against this bank account it will be changed to be logged under (TODO: This account name).\"}).present();\r\n      }\r\n      if (! this.reconcileAmount(transaction).times(-1).eq(this.reconciledRemaining())) {\r\n        this.alertController.create({\r\n          message: \"I've updated the budget amount from (TODO: Amount) to (TODO: New Amount) to match the bank transaction.\",\r\n          buttons: [\r\n            {\r\n              text: 'Undo',\r\n              role: 'cancel',\r\n              handler: data => {\r\n                this.selectedTransactions.set(transaction, {amount: this.reconcileAmount(transaction)});\r\n              }\r\n            },\r\n            {\r\n              text: 'OK',\r\n              handler: data => {                \r\n                // TODO: If the amount is subsequently edited, then this needs to be addresses again\r\n                this.selectedTransactions.set(transaction, {amount: this.reconciledRemaining().times(-1), transactionAmountOverride: true});\r\n              }\r\n            }\r\n          ]\r\n        }).present();\r\n      } else {\r\n        this.selectedTransactions.set(transaction, {amount: this.reconcileAmount(transaction)});\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  isSelected(transaction: Transaction): boolean {\r\n    return this.selectedTransactions.has(transaction);\r\n  }\r\n\r\n  reconcileAmount(transaction: Transaction): Big {\r\n\r\n    if (this.selectedTransactions.has(transaction)) {\r\n      // TODO: The case where an item is partially reconciled and there is some remaining, but it is selected\r\n      // TODO: The case where it is initially reconciled, but for a DIFFERENT amount than to here.\r\n      // Think about these cases, may need to display an extra field (or maybe, multiple?, transaction total, transaction left to reconcile, this reconciled (if different to total / remaining), eg. partial/split ) <= this last one will have a bit of logic to work out, as we need to add/remove this \r\n\r\n      // This is wrong, we want the remaining amount AND what we have already reconciled it for...\r\n      return this.selectedTransactions.get(transaction).amount;\r\n    }\r\n\r\n    if (transaction.x.reconciliationRecords) {\r\n      // TODO: Filter and remove \"this\" from the calc\r\n      return (<TransactionReconciliation[]> transaction.x.reconciliationRecords).reduce((amt, t) => amt.minus(t.amount), transaction.amount);\r\n    } else {\r\n      return transaction.amount;\r\n    }\r\n  }\r\n\r\n  reconciledTotal(): Big {\r\n    return Array.from(this.selectedTransactions.values()).reduce((tot, o) => tot.plus(o.amount), new Big('0'));\r\n  }\r\n\r\n  reconciledRemaining(): Big {\r\n    return this.t.amount.minus(this.reconciledTotal());\r\n  }\r\n\r\n  save() {\r\n\r\n    this.selectedTransactions.forEach((reconcilation, transaction) => {\r\n      if (!this.initialSelectedTransactions.has(transaction) || !this.initialSelectedTransactions.get(transaction).amount.eq(reconcilation.amount)) {\r\n        let createTransactionReconciliation = new CreateTransactionReconciliation();\r\n        createTransactionReconciliation.amount = reconcilation.amount;\r\n        createTransactionReconciliation.transactionId = transaction.id;\r\n        createTransactionReconciliation.bankTransactionId = this.t.id;\r\n        if (reconcilation.transactionAmountOverride) createTransactionReconciliation.transactionAmountOverride = true;\r\n\r\n        this.budget.applyTransaction(createTransactionReconciliation);\r\n      } else {\r\n        // TODO: Update as needed (and only if needed)\r\n      }\r\n    });\r\n\r\n    this.initialSelectedTransactions.forEach((reconcilation, transaction) => {\r\n      if (!this.selectedTransactions.has(transaction) || !this.selectedTransactions.get(transaction).amount.eq(reconcilation.amount)) {\r\n        this.budget.deleteTransaction(this.budget.transactionProcessor.findTransactionsForRecord(reconcilation, CreateTransactionReconciliation)[0]);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  close() {\r\n    this.save();\r\n\r\n    this.viewCtrl.dismiss();    \r\n  }\r\n\r\n  createTransaction() {\r\n    let modal = this.modalController.create(AddEditSplitTransactionModal, {budgetId: this.budget.id, accountId: this.t.accountId, amount: this.reconciledRemaining().times(-1), description: this.t.description, date: this.t.date});\r\n    modal.onDidDismiss(data => {\r\n      if (data && data.transactions) {\r\n        data.transactions.forEach(transaction => {\r\n          this.selectedTransactions.set(transaction, {amount: transaction.amount});\r\n          this.forceRefresh = true;\r\n        });\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n  \r\n  deleteBankTransactionConfirm() {\r\n    let confirm = this.alertController.create({\r\n      title: 'Delete?',\r\n      message: 'Are you sure you want to delete this transaction? (TODO: functionality, notice: This will \"flag\" it as deleted)',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel'\r\n        } , {\r\n          text: 'Delete',\r\n          role: 'destructive',\r\n          handler: () => {\r\n            confirm.dismiss().then(() => {\r\n\r\n              this.viewCtrl.dismiss();\r\n            });\r\n            return false;\r\n          }\r\n        }\r\n      ]\r\n    });\r\n\r\n    confirm.present();\r\n  }\r\n  \r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/modals/view-bank-transaction/view-bank-transaction.ts","import { Injectable } from \"@angular/core\";\r\nimport { Configuration, SecureAccessor } from \"./configuration-service\";\r\nimport { AlertController } from \"ionic-angular\";\r\n\r\n@Injectable()\r\nexport class SecurePrompt {\r\n\r\n    constructor(private configuration: Configuration, private alertController: AlertController) {\r\n\r\n    }\r\n    \r\n    show(secureAccessor: SecureAccessor, field: string): Promise<void | boolean> {\r\n\r\n        if (!this.configuration.secureAvailable()) {\r\n            return this.alertController.create({\r\n                title: 'Secure Stoarge',\r\n                message: \"Secure storage is unavailable: TODO: Why\",\r\n                buttons: ['OK']\r\n            }).present();\r\n        }\r\n\r\n        return new Promise<boolean>((resolve, reject) => {\r\n\r\n            let prompt = this.alertController.create({\r\n                title: 'Secure Stoarge',\r\n                message: 'Enter secure data for \"' + field + '\"',\r\n                inputs: [\r\n                    {\r\n                        name: 'data',\r\n                        placeholder: 'Secure Data',\r\n                        type: 'password'\r\n                    },\r\n                ],\r\n                buttons: [\r\n                    {\r\n                        text: 'Cancel',\r\n                        role: 'cancel',\r\n                        handler: data => {\r\n                            resolve(false);\r\n                        }\r\n                    },\r\n                    {\r\n                        // TODO: Only if data already present\r\n                        text: 'Delete',\r\n                        cssClass: 'danger',\r\n                        handler: data => {\r\n                            secureAccessor.removeSecure(field).then(() => {\r\n                                resolve(false);\r\n                            }).catch(error => {\r\n                                // TODO: Prompt / log error ?\r\n                                resolve(false);\r\n                            });\r\n                        }\r\n                    },\r\n                    {\r\n                        text: 'Save',\r\n                        handler: data => {\r\n                            secureAccessor.setSecure(field, data.data).then(() => {\r\n                                resolve(true);\r\n                            }).catch(error => {\r\n                                // TODO: Prompt / log error ?\r\n                                resolve(false);\r\n                            });\r\n                        }\r\n                    }\r\n                ]\r\n            });\r\n\r\n            prompt.present();\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/secure-prompt.ts","import {NavController, AlertController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Configuration} from '../../services/configuration-service'\r\nimport {UpdateCheck} from '../../services/update-check'\r\nimport {BuildInfo} from '../../app/build-info'\r\n\r\n@Component({\r\n  templateUrl: 'about.html'\r\n})\r\nexport class AboutPage {\r\n  projectMenuEnabled: boolean;\r\n  buildInfo = BuildInfo;\r\n  updateCheckDisabled: boolean;\r\n  \r\n  constructor(private nav: NavController, public configuration: Configuration, public updateCheck: UpdateCheck, private alertController: AlertController) {\r\n    this.nav = nav;\r\n    this.projectMenuEnabled = true;\r\n  }\r\n  \r\n  serviceWorkerUpdateCheck() {\r\n    this.updateCheckDisabled = true;\r\n    this.updateCheck.triggerServiceWorkerUpdateCheck();\r\n    setTimeout(() => {this.updateCheckDisabled = false}, 5000);\r\n  }\r\n\r\n  webCheckUpdate() {\r\n    this.updateCheckDisabled = true;\r\n    this.updateCheck.runWebUpdateCheck().subscribe((response) => {\r\n      this.updateCheckDisabled = false;\r\n    }, (error) => {\r\n      this.updateCheckDisabled = false;\r\n    });\r\n  }\r\n\r\n  isWkWebView(): boolean {\r\n    if (navigator.platform.substr(0,2) === 'iP'){\r\n      //iOS (iPhone, iPod or iPad)\r\n      var lte9 = /constructor/i.test((<any>window).HTMLElement);\r\n      var nav: any = window.navigator, ua = nav.userAgent, idb = !!window.indexedDB;\r\n      if (ua.indexOf('Safari') !== -1 && ua.indexOf('Version') !== -1 && !nav.standalone){      \r\n        //Safari (WKWebView/Nitro since 6+)\r\n      } else if ((!idb && lte9) || !window.statusbar.visible) {\r\n        //UIWebView\r\n      } else if (((<any>window).webkit && (<any>window).webkit.messageHandlers) || !lte9 || idb){\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  unregisterServiceWorker() {\r\n    this.alertController.create({\r\n      buttons: [{ text: 'Ok', handler: () => {this.updateCheck.unregisterServiceWorker();}}, {text: 'Cancel', role: 'cancel'}],\r\n      message: 'Unregistering the service worker will disable offline support. A new service worker will be installed after the app has been restarted.',\r\n      title: 'Are you sure?'\r\n    }).present();\r\n  }\r\n  \r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import {Injectable, ApplicationRef} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Notifications} from './notifications';\r\nimport {Configuration} from './configuration-service';\r\nimport {AppReady} from '../app/app-ready';\r\nimport {BuildInfo} from '../app/build-info';\r\nimport {Logger} from './logger';\r\nimport { Utils } from \"./utils\";\r\n\r\n@Injectable()\r\nexport class UpdateCheck {\r\n    \r\n    private logger: Logger = Logger.get('notifications');\r\n\r\n    public serviceWorkerUpdateAvailable: boolean;\r\n    public serviceWorkerUpdateNotified: boolean;\r\n    public serviceWorkerVersion: string;\r\n    public updatedServiceWorkerVersion: string;\r\n    public serviceWorkerUnregistered: boolean = false;\r\n    public webUpdateAvailable: boolean;\r\n    public webVersion: string;\r\n\r\n    constructor(appReady: AppReady, private notifications: Notifications, private configuration: Configuration, private applicationRef: ApplicationRef, private http: Http) {\r\n\r\n        if (Utils.getQueryStringValue('demo')) return; // Skip this for demos\r\n\r\n        appReady.ready.then(() => {\r\n            setTimeout(() => {\r\n                if (!this.checkAndNotifyServiceWorkerUpdate()) {\r\n\r\n                    window.addEventListener('serviceworkerupdateavailable', (ev) => {\r\n                        this.checkAndNotifyServiceWorkerUpdate();\r\n                        applicationRef.tick();\r\n                    });\r\n\r\n                   this.triggerServiceWorkerUpdateCheck();\r\n                   setInterval(() => this.triggerServiceWorkerUpdateCheck(), 1000 * 60 * 60 /*1 Hour*/);\r\n                }\r\n\r\n                this.initWebUpdateAutoCheck();\r\n\r\n            }, 5000);\r\n\r\n            \r\n            this.serviceWorkerVersion = (<any>window).activeServiceWorkerVersion;\r\n            this.checkServiceWorkerVersionMismatch();\r\n            window.addEventListener('activeserviceworkerversionreported', (ev) => {\r\n                this.serviceWorkerVersion = (<any>window).activeServiceWorkerVersion;\r\n                this.checkServiceWorkerVersionMismatch();\r\n                applicationRef.tick();\r\n            });\r\n\r\n            this.checkAndNotifyServiceWorkerUpdate();\r\n            window.addEventListener('updatedserviceworkerversionreported', (ev) => {\r\n                this.checkAndNotifyServiceWorkerUpdate();\r\n                applicationRef.tick();\r\n            });\r\n\r\n            window.addEventListener('serviceworkerinstalled', (ev) => {\r\n                let message = \"Offline support has been installed. You can now use the app offline.\";\r\n                this.logger.info(message);\r\n                this.notifications.show({message: message, popup: true, silent: true, category: 'update-check'});\r\n                applicationRef.tick();\r\n            });\r\n\r\n\r\n            this.triggerServiceWorkerUpdateCheck();\r\n\r\n\r\n        });\r\n    }\r\n\r\n    checkServiceWorkerVersionMismatch() {\r\n        if (this.serviceWorkerVersion && this.serviceWorkerVersion !== BuildInfo.version) {\r\n            this.logger.info(\"Service worker version (\" + this.serviceWorkerVersion + \") <-> app version (\" + BuildInfo.version + \") mismatach. Unregistering service worker.\");\r\n            this.unregisterServiceWorker();\r\n        }\r\n    }\r\n\r\n    isServiceWorkerAvailable(): boolean {\r\n        return !this.serviceWorkerUnregistered && (<any>window).serviceWorkerUpdateCheckFunction;\r\n    }\r\n\r\n    triggerServiceWorkerUpdateCheck() {\r\n        if (this.serviceWorkerUpdateAvailable) return;\r\n\r\n        if ((<any>window).serviceWorkerUpdateCheckFunction) {\r\n            (<any>window).serviceWorkerUpdateCheckFunction();\r\n        }\r\n    }\r\n\r\n    checkAndNotifyServiceWorkerUpdate(): boolean {\r\n        if (this.serviceWorkerUpdateNotified) return true;\r\n\r\n        if ((<any>window).serviceWorkerUpdateAvailable) {\r\n            this.serviceWorkerUpdateAvailable = true;\r\n        }\r\n\r\n        if ((<any>window).updatedServiceWorkerVersion) {\r\n            this.updatedServiceWorkerVersion = (<any>window).updatedServiceWorkerVersion;\r\n            let message = \"An update has been downloaded (\" + this.updatedServiceWorkerVersion + \") and will be installed next time the app is opened.\";\r\n            this.logger.info(message);\r\n            this.notifications.show({message: message, popup: true, silent: true, category: 'update-check'});\r\n            this.serviceWorkerUpdateNotified = true;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    unregisterServiceWorker(): Promise<boolean> {\r\n        if ((<any>window).serviceWorkerUnregisterFunction) {\r\n            return (<Promise<boolean>> ((<any>window).serviceWorkerUnregisterFunction())).then((result) => {\r\n                if (result) {\r\n                    let message = \"Offline support has been removed. It will be re-enabled after the app has been restarted.\";\r\n                    this.serviceWorkerUnregistered = true;\r\n                    this.logger.info(message);\r\n                    this.notifications.show({message: message, popup: true, silent: true, category: 'update-check'});\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        return Promise.resolve(false);\r\n    }\r\n\r\n    initWebUpdateAutoCheck() {\r\n        setTimeout(() => {\r\n            if (this.webUpdateAvailable) return;\r\n            this.runWebUpdateCheck();\r\n            this.initWebUpdateAutoCheck();\r\n        }, 1000 * 60 * 60 /*1 Hour*/);\r\n\r\n        this.runWebUpdateCheck();\r\n\r\n    }\r\n\r\n    runWebUpdateCheck(): Observable<Response> {\r\n        let observable = this.http.get('https://ebudget.live/info.json');\r\n\r\n        observable.map(res => res.json())\r\n        .subscribe((response) => {\r\n            try {\r\n                if (BuildInfo.version !== response.version) {\r\n                    this.webVersion = response.version;\r\n                    this.webUpdateAvailable = true;\r\n                    this.logger.info(\"Web update is available. Version: \" + this.webVersion);\r\n                    if (!this.isServiceWorkerAvailable() && !this.configuration.native) {\r\n                        let message = \"An update is available (\" + this.webVersion + \"). Refresh to update.\";                    \r\n                        this.logger.info(message);\r\n                        this.notifications.show({message: message, popup: true, silent: true, category: 'update-check'});\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                this.logger.info(\"Error in response data from web update check\", response, err);\r\n            }\r\n        }, (error) => {\r\n            this.logger.info(\"Error during web update check\", error);\r\n        });\r\n\r\n        return observable;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/update-check.ts","import {NavController} from 'ionic-angular';\r\nimport {Component} from '@angular/core';\r\nimport {Configuration} from '../../services/configuration-service';\r\n\r\n@Component({\r\n  templateUrl: 'settings.html'\r\n})\r\nexport class SettingsPage {\r\n  \r\n  constructor(private nav: NavController, private configuration: Configuration) {\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import {Component} from '@angular/core';\r\nimport {Notifications} from '../../services/notifications';\r\n\r\n@Component({\r\n  templateUrl: 'notifications.html'\r\n})\r\nexport class NotificationsPage {\r\n\r\n  markReadTimeout: number;\r\n  \r\n  constructor(private notifications: Notifications) {\r\n  }\r\n    \r\n\r\n  ionViewDidEnter() {\r\n    this.markReadTimeout = setTimeout(() => {\r\n      this.notifications.markRead();\r\n      this.markReadTimeout = 0;\r\n    }, 3000);\r\n  }\r\n\r\n  ionViewDidLeave() {\r\n    if (this.markReadTimeout) clearTimeout(this.markReadTimeout);\r\n  }\r\n    \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/notifications/notifications.ts","import { BankSyncMonitor } from \"./bank-sync-monitor\";\r\nimport { Notifications } from \"../services/notifications\";\r\n\r\nexport class BankSyncUtils {\r\n\r\n    static createMonitorWithNotifications(notifications: Notifications): BankSyncMonitor {\r\n        return BankSyncUtils.notificationsOnMonitor(notifications, new BankSyncMonitor());\r\n    }\r\n\r\n    static notificationsOnMonitor(notifications: Notifications, monitor: BankSyncMonitor): BankSyncMonitor {\r\n        monitor.on('error-state-change').subscribe(() => {\r\n            if (!monitor.running) notifications.show({message: 'Bank Sync ' + monitor.bankLink.name + ' Failed with Error ' + monitor.errorMessage, category: 'bank-sync.' + monitor.bankLink.uuid});\r\n        });\r\n        monitor.on('complete-state-change').subscribe(() => {\r\n            notifications.show({message: 'Bank Sync ' + monitor.bankLink.name + ' Complete' + (monitor.errorMessage ? ' With Errors ' + monitor.errorMessage : ''), category: 'bank-sync.' + monitor.bankLink.uuid});\r\n        });\r\n        monitor.on('cancelled-state-change').subscribe(() => {\r\n            notifications.show({message: 'Bank Sync ' + monitor.bankLink.name + ' Cancelled', category: 'bank-sync.' + monitor.bankLink.uuid});        \r\n        });\r\n\r\n        return monitor;\r\n\r\n    }\r\n\r\n    static timeoutWatchdogNotification(notifications: Notifications, monitor: BankSyncMonitor, timeoutSeconds: number) {\r\n        \r\n        if (!monitor.running) {\r\n            // TODO: With observables we should be able to replay this on subscribe...\r\n            monitor.on('running-state-change').subscribe(() => {\r\n                if (monitor.running) {\r\n                    BankSyncUtils.iterateTimeoutWatchdogNotification(notifications, monitor, timeoutSeconds);\r\n                }\r\n            });\r\n        } else {\r\n\r\n        }\r\n\r\n        return monitor;\r\n    }\r\n\r\n    // Note: We are polling here rather than setting a long timeout so we can manage memory tighter (and not end up with long timeouts and dangling references to live bank syncs)\r\n    private static iterateTimeoutWatchdogNotification(notifications: Notifications, monitor: BankSyncMonitor, timeoutSeconds: number) {\r\n        if (!monitor.running) {\r\n            notifications.remove({category: 'bank-sync.' + monitor.bankLink.uuid + '.timeout-watchdog'});\r\n            return;\r\n        }\r\n        if (Date.now() - monitor.startTime > timeoutSeconds * 1000) {\r\n            // TODO: This remove/show should be a single operation in the notifications options\r\n            notifications.remove({category: 'bank-sync.' + monitor.bankLink.uuid + '.timeout-watchdog'});\r\n            notifications.show({message: 'Bank Sync ' + monitor.bankLink.name + ' is taking too long to complete', category: 'bank-sync.' + monitor.bankLink.uuid + '.timeout-watchdog', important: true});\r\n            setTimeout(() => BankSyncUtils.iterateTimeoutWatchdogNotification(notifications, monitor, timeoutSeconds * 2), 5000);            \r\n        } else {\r\n            setTimeout(() => BankSyncUtils.iterateTimeoutWatchdogNotification(notifications, monitor, timeoutSeconds), 5000);\r\n        }\r\n\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-sync-utils.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nimport {LoggerStorageAppender} from '../services/logger-storage-appender';\nimport {LoggerUINotifierAppender} from '../services/logger-ui-notifier-appender';\nimport {Logger} from '../services/logger';\n\nLogger.root.config.addAppender(new LoggerStorageAppender('default'));\nLogger.root.config.addAppender(LoggerUINotifierAppender.instance);\n\n// These are to catch error if angular hasn't initialised yet, so if there is a bootstrap error then these will take care of those...\n// Otherwise the angular error handler will handle the errors and these will be superceeded\n\nwindow.onerror = function(msg, url, line, col, error) {\n   var extra = !col ? '' : '\\ncolumn: ' + col;\n   Logger.get('window').error(msg + '\\nurl: ' + url + '\\nline: ' + line + extra, error);\n\n   return false;\n};\n\n(<any> window).onunhandledrejection = function(event: any) {\n    Logger.get('window').error(\"Unhandled Promise Rejection\", event);\n\n    return false;\n};\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {NgModule, ErrorHandler} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {HttpModule} from '@angular/http';\nimport {IonicApp, IonicModule} from 'ionic-angular';\nimport {App} from './app.component';\nimport {AppReady} from './app-ready';\nimport {AppExceptionHandler} from './app-exception-handler';\nimport {HomePage} from '../pages/home/home';\nimport {BudgetSettingsPage} from '../pages/budget-settings/budget-settings';\nimport {AccountPage} from '../pages/account/account';\nimport {BankAccountPage} from '../pages/bank-account/bank-account';\nimport {BudgetPage} from '../pages/budget/budget';\nimport {AboutPage} from '../pages/about/about';\nimport {CategoryPage, CategoryPopover} from '../pages/category/category';\nimport {SettingsPage} from '../pages/settings/settings';\nimport {DevPage} from '../pages/dev/dev';\nimport {NotificationsPage} from '../pages/notifications/notifications';\nimport {ShareBudgetModal} from '../modals/share-budget/share-budget';\nimport {AddBudgetModal} from '../modals/add-budget/add-budget';\nimport {AddEditCategoryModal} from '../modals/add-edit-category/add-edit-category';\nimport {AddEditCategorySimpleWeeklyModal} from '../modals/add-edit-category-simple-weekly/add-edit-category-simple-weekly';\nimport {AddEditTransactionModal} from '../modals/add-edit-transaction/add-edit-transaction';\nimport {AddEditSplitTransactionModal} from '../modals/add-edit-split-transaction/add-edit-split-transaction';\nimport {AddEditSplitTransactionLineModal} from '../modals/add-edit-split-transaction/add-edit-split-transaction-line';\nimport {AddEditSplitTransferModal} from '../modals/add-edit-split-transfer/add-edit-split-transfer';\nimport {AddEditSplitTransferLineModal} from '../modals/add-edit-split-transfer/add-edit-split-transfer-line';\nimport {AddEditTransferModal} from '../modals/add-edit-transfer/add-edit-transfer';\nimport {AddEditAccountModal} from '../modals/add-edit-account/add-edit-account';\nimport {MainMenuContent} from '../components/main-menu-content/main-menu-content';\nimport {NotificationList} from '../components/notification-list/notification-list';\nimport {MainMenuIcon} from '../components/main-menu-icon/main-menu-icon';\nimport {Dbms} from '../db/dbms';\nimport {PersistenceProviderManager} from '../db/persistence-provider-manager';\nimport {EditorProvider} from '../services/editor-provider';\nimport {Configuration} from '../services/configuration-service';\nimport {BankProviderRegistry} from '../bank/bank-provider-registry';\nimport {StandardHostInterface} from '../bank/standard-host-interface';\nimport {TransactionSync} from '../bank/transaction-sync';\nimport {BankSync} from '../bank/bank-sync';\nimport {Replication} from '../services/replication-service';\nimport {UpdatedCheck} from '../services/updated-check';\nimport {UpdateCheck} from '../services/update-check';\nimport {CurrencyFormatter} from '../services/currency-formatter';\nimport {Notifications} from '../services/notifications';\nimport {TransactionSerializer} from '../db/transaction-serializer';\nimport {EngineFactory} from '../engine/engine-factory';\nimport {CurrencyField} from '../components/currency-field';\nimport {NoFocusDirective} from '../components/no-focus';\nimport {ErrorLabel} from '../components/error-label';\nimport {ReplicationErrorDisplay} from '../components/replication-error-display';\nimport {CurrencyDisplay} from '../components/currency-display';\nimport {DFormatPipe} from '../components/date-format';\nimport {CFormatPipe} from '../components/currency-format';\nimport {CuteProgressBar} from '../components/cute-progress-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SQLite} from '@ionic-native/sqlite';\nimport {Device} from '@ionic-native/device';\nimport {InAppBrowser} from '@ionic-native/in-app-browser';\nimport { Clipboard } from '@ionic-native/clipboard';\nimport { ViewBankTransactionModal } from \"../modals/view-bank-transaction/view-bank-transaction\";\nimport { SecureStorage } from \"@ionic-native/secure-storage\";\nimport { DemoService } from \"../demo/demo-service\";\nimport { DemoSetup } from \"../demo/demo-setup\";\nimport { Autofocus } from \"../services/autofocus\";\nimport { BankLinkPage } from \"../pages/bank-link/bank-link\";\nimport { AddEditBankLinkModal } from \"../modals/add-edit-bank-link/add-edit-bank-link\";\nimport { SecurePrompt } from \"../services/secure-prompt\";\nimport { InAppBrowserInterfaceFactory } from \"../bank/in-app-browser-interface-factory\";\nimport { BankLinkLocal } from \"../bank/bank-link-local\";\nimport { BankAutoSync } from \"../bank/bank-auto-sync\";\nimport { Status } from \"../components/status/status\";\nimport { ReconciliationStatus } from \"../services/reconciliation-status\";\n\n@NgModule({\n  declarations: [\n    App,\n    HomePage,\n    BudgetSettingsPage,\n    AccountPage,\n    BudgetPage,\n    CategoryPage,\n    SettingsPage,\n    DevPage,\n    AboutPage,\n    NotificationsPage,\n    BankAccountPage,\n    ShareBudgetModal,\n    AddBudgetModal,\n    AddEditCategoryModal,\n    AddEditTransactionModal,\n    AddEditSplitTransactionModal,\n    AddEditSplitTransactionLineModal,\n    AddEditSplitTransferModal,\n    AddEditSplitTransferLineModal,\n    AddEditTransferModal,\n    AddEditAccountModal,\n    AddEditCategorySimpleWeeklyModal,\n    ViewBankTransactionModal,\n    CurrencyField,\n    Status,\n    NoFocusDirective,\n    ErrorLabel,\n    ReplicationErrorDisplay,\n    CurrencyDisplay,\n    DFormatPipe,\n    MainMenuContent,\n    CategoryPopover,\n    CFormatPipe,\n    CuteProgressBar,\n    MainMenuIcon,\n    NotificationList,\n    BankLinkPage,\n    AddEditBankLinkModal\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(App, { swipeBackEnabled: false })\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    App,\n    HomePage,\n    BankAccountPage,\n    BudgetSettingsPage,\n    BudgetPage,\n    AccountPage,\n    CategoryPage,\n    SettingsPage,\n    DevPage,\n    AboutPage,\n    NotificationsPage,\n    ShareBudgetModal,\n    AddBudgetModal,\n    AddEditCategoryModal,\n    AddEditTransactionModal,\n    AddEditSplitTransactionModal,\n    AddEditSplitTransactionLineModal,\n    AddEditSplitTransferModal,\n    AddEditSplitTransferLineModal,\n    AddEditTransferModal,\n    AddEditAccountModal,\n    AddEditCategorySimpleWeeklyModal,\n    ViewBankTransactionModal,\n    CategoryPopover,\n    BankLinkPage,\n    AddEditBankLinkModal\n  ],\n  providers: [\n  {provide: ErrorHandler, useClass: AppExceptionHandler},\n  BankAutoSync,\n  BankLinkLocal,\n  StandardHostInterface,\n  BankProviderRegistry,\n  InAppBrowserInterfaceFactory,\n  SecurePrompt,\n  TransactionSync,\n  BankSync,\n  Device,\n  Clipboard,\n  SecureStorage,\n  SQLite,\n  InAppBrowser,\n  SplashScreen,\n  StatusBar,\n  AppReady,\n  UpdatedCheck,\n  UpdateCheck,\n  Notifications,\n  CurrencyFormatter,\n  EditorProvider,\n  Configuration,\n  PersistenceProviderManager,\n  Dbms,\n  TransactionSerializer,\n  EngineFactory,\n  Replication,\n  DemoService,\n  DemoSetup,\n  Autofocus,\n  ReconciliationStatus]\n})\nexport class AppModule {\n  constructor(updatedCheck: UpdatedCheck, updateCheck: UpdateCheck, bankAutoSync: BankAutoSync, reconciliationStatus: ReconciliationStatus) {}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Platform, Nav} from 'ionic-angular';\nimport {ViewChild, Component} from '@angular/core';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {HomePage} from '../pages/home/home';\nimport {BudgetPage} from '../pages/budget/budget';\nimport {Dbms} from '../db/dbms';\nimport {PersistenceProviderManager} from '../db/persistence-provider-manager';\nimport {EditorProvider, ModalProvider} from '../services/editor-provider';\nimport {Configuration} from '../services/configuration-service';\nimport {Replication} from '../services/replication-service';\nimport {TransactionSerializer} from '../db/transaction-serializer';\nimport {Logger} from '../services/logger';\nimport {AppReady} from './app-ready';\nimport {BankProviderRegistry} from '../bank/bank-provider-registry';\n\nimport {InitBudgetTransaction} from '../data/transactions/init-budget-transaction';\nimport {InitCategoryTransaction} from '../data/transactions/init-category-transaction';\nimport {InitSimpleTransaction} from '../data/transactions/init-simple-transaction';\nimport {CreateSplitTransaction} from '../data/transactions/create-split-transaction';\nimport {CreateSplitTransfer} from '../data/transactions/create-split-transfer';\nimport {InitCategoryTransferTransaction} from '../data/transactions/init-category-transfer-transaction';\nimport {InitCategorySimpleWeeklyTransaction} from '../data/transactions/init-category-simple-weekly-transaction';\nimport {CreateAccountTransaction} from '../data/transactions/create-account-transaction';\nimport {MergeBankTransactions} from '../data/transactions/merge-bank-transactions';\n\nimport {AddEditTransferModal} from '../modals/add-edit-transfer/add-edit-transfer';\nimport {AddEditTransactionModal} from '../modals/add-edit-transaction/add-edit-transaction';\nimport {AddEditSplitTransactionModal} from '../modals/add-edit-split-transaction/add-edit-split-transaction';\nimport {AddEditSplitTransferModal} from '../modals/add-edit-split-transfer/add-edit-split-transfer';\n\nimport {AnzMobileWeb1Provider} from '../bank/providers/anz-mobile-web-1';\nimport { MockDataProvider } from '../bank/providers/mock-data-provider';\nimport { CreateTransactionReconciliation } from \"../data/transactions/create-transaction-reconciliation\";\nimport { Utils } from \"../services/utils\";\nimport { DemoService } from \"../demo/demo-service\";\nimport { Autofocus } from \"../services/autofocus\";\nimport { DemoSetup } from \"../demo/demo-setup\";\nimport { CreateBankLink } from \"../data/transactions/create-bank-link\";\nimport { SetAccountBankLink } from \"../data/transactions/set-account-bank-link\";\nimport { BankTransactionIgnore } from \"../data/transactions/bank-transaction-ignore\";\nimport { BankTransactionDelete } from \"../data/transactions/bank-transaction-delete\";\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class App {\n\n  private logger: Logger = Logger.get('App');\n  rootPage: any; // = HomePage;\n  ready: boolean;\n  @ViewChild(Nav) nav: Nav;\n\n  constructor(platform: Platform, private configuration: Configuration, dbms: Dbms, persistenceProviderManager: PersistenceProviderManager, replication: Replication, private transactionSerializer: TransactionSerializer, private editorProvider: EditorProvider, private appReady: AppReady, private statusBar: StatusBar, private splashScreen: SplashScreen, private bankProviderRegistry: BankProviderRegistry, private demoService: DemoService, private autofocus: Autofocus, private demoSetup: DemoSetup) {\n    this.logger.info('Constructing App');\n    \n    platform.ready().then(() => {\n      this.logger.info('Platform Ready');      \n      this.logger.info('Initialising Persistence Provider');\n      persistenceProviderManager.provide().init().then(() => {\n        this.logger.info('Initialising Persistence Provider');\n        this.logger.info('Loading Configuration');\n        \n        return configuration.configure();\n      }).then(() => {\n        this.registerTransactions();\n        this.registerEditorProviders();\n        this.registerBankProviders();\n        this.logger.info('Loading Configuration Done');\n        this.logger.info('Initialising Dbms');\n        return dbms.init();\n      }).then(() => {\n        this.logger.info('Initialising Dbms Done');\n        this.logger.info('Initialising Replication');\n        replication.init();\n        this.logger.info('Initialising Replication Done');\n\n        statusBar.styleDefault();\n        splashScreen.hide(); // TODO: Move this earlier if want to have a splash screen while the db init runs... can nav.setRoot to a \"loading...\" page, then set the real page below... Can maybe even have progress updates with the \"then()\" statements?\n\n        this.ready = true;\n        if (configuration.lastOpenedBudget()) {\n          let lastOpenedBudgetId = configuration.lastOpenedBudget();\n          try {\n            let budget = dbms.getDb(lastOpenedBudgetId);\n            if (!budget) {\n              this.logger.info('Budget ' + lastOpenedBudgetId + ' not found for auto opening');\n              this.nav.setRoot(HomePage);\n            } else {\n              this.nav.setRoot(BudgetPage, {'budget': budget});\n            }\n          } catch (e) {\n            configuration.lastOpenedBudget(null);\n            this.logger.error('Unable to auto open budget ' + lastOpenedBudgetId, e);\n            this.nav.setRoot(HomePage);\n          }\n        } else {\n            this.nav.setRoot(HomePage);\n        }\n\n        appReady.readyResolve();\n\n        if (Utils.getQueryStringValue('demo')) {\n          demoSetup.fadeOut(true);\n          autofocus.setEnabled(false);\n          demoService.start();\n        }\n\n        }).catch(err => {\n          this.logger.error('Error in initialisation', err);\n        });\n\n\n      });\n    \n    \n  }\n  \n  registerEditorProviders() {\n    this.editorProvider.registerModalProvider(new TransactionModalProvider(new InitCategoryTransferTransaction().getTypeId(), AddEditTransferModal));\n    this.editorProvider.registerModalProvider(new TransactionModalProvider(new InitSimpleTransaction().getTypeId(), AddEditTransactionModal));\n    this.editorProvider.registerModalProvider(new TransactionModalProvider(new CreateSplitTransaction().getTypeId(), AddEditSplitTransactionModal));\n    this.editorProvider.registerModalProvider(new TransactionModalProvider(new CreateSplitTransfer().getTypeId(), AddEditSplitTransferModal));\n  }\n\n  registerTransactions() {\n    this.transactionSerializer.registerType(InitCategoryTransaction);\n    this.transactionSerializer.registerType(InitCategoryTransferTransaction);\n    this.transactionSerializer.registerType(InitSimpleTransaction);\n    this.transactionSerializer.registerType(CreateSplitTransaction);\n    this.transactionSerializer.registerType(CreateSplitTransfer);\n    this.transactionSerializer.registerType(InitBudgetTransaction);\n    this.transactionSerializer.registerType(InitCategorySimpleWeeklyTransaction);\n    this.transactionSerializer.registerType(CreateAccountTransaction);\n    this.transactionSerializer.registerType(MergeBankTransactions);\n    this.transactionSerializer.registerType(CreateTransactionReconciliation);\n    this.transactionSerializer.registerType(CreateBankLink);\n    this.transactionSerializer.registerType(SetAccountBankLink);\n    this.transactionSerializer.registerType(BankTransactionIgnore);\n    this.transactionSerializer.registerType(BankTransactionDelete);\n  }\n\n  registerBankProviders() {\n    this.bankProviderRegistry.registerProvider(AnzMobileWeb1Provider);\n    this.bankProviderRegistry.registerProvider(MockDataProvider);\n  }\n\n}\n\nclass TransactionModalProvider extends ModalProvider {\n    \n    constructor(private transactionType: string, private modalClass: any) {\n        super();\n    }\n        \n    provide(params: any): any {\n        if (params.typeId === this.transactionType) return this.modalClass;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {DbPersistenceProvider} from './db-persistence-provider';\r\nimport {Dbms} from './dbms';\r\nimport {DbTransaction} from './transaction';\r\nimport {TransactionProcessor} from './transaction-processor';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport {Logger} from '../services/logger';\r\nimport {ChunkedTask} from '../services/chunked-task';\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { Subscriber } from \"rxjs/Subscriber\";\r\n\r\ntype DbEventType = 'transaction-applied' | 'transaction-undone' | 'db-activated' | 'db-deleted' | 'transaction-batch-start' | 'transaction-batch-end';\r\n\r\nexport interface DbEvent {\r\n    eventName: DbEventType;\r\n    data?: {transaction?: DbTransaction, update?: boolean, originalTransaction?: DbTransaction};\r\n    db?: Db;\r\n}\r\n\r\nexport interface DbEventListener {\r\n    (dbEvent: DbEvent): void;\r\n}\r\n\r\nexport class Db {\r\n    private dbTransactionEventsObserver: Subscriber<DbEvent>;\r\n    private dbTransactionEventsObservable: Observable<DbEvent>;\r\n    private dbEventsObservable: Observable<DbEvent>;\r\n    private dbEventsObserver: Subscriber<DbEvent>;\r\n\r\n    private logger: Logger = Logger.get('Db');\r\n\r\n    private transactions: LokiCollection<DbTransaction>;\r\n    public sortedTransactions: LokiDynamicView<DbTransaction>;\r\n    private active: boolean;\r\n    private batchProcessing: boolean;\r\n    private initialised: boolean;\r\n    private activating: boolean;\r\n    private transactionIdHead: number;\r\n    private eventListeners: Array<DbEventListener>;\r\n    transactionProcessor: TransactionProcessor;\r\n\r\n    toJSON() {\r\n        return this.id;\r\n    }\r\n\r\n    constructor(public id: string, public dbms: Dbms , private persistenceProvider: DbPersistenceProvider, private loki: Loki, private transactionSerializer: TransactionSerializer) {\r\n        this.active = false;\r\n        this.initialised = false;\r\n        this.transactionProcessor = new TransactionProcessor(this, this.loki);\r\n        \r\n        this.transactions = this.loki.addCollection<DbTransaction>('transactions_' + this.id);\r\n        this.transactions.ensureUniqueIndex('id');\r\n        this.eventListeners = [];\r\n\r\n        this.dbEventsObservable = new Observable<DbEvent>(observer => this.dbEventsObserver = observer).share();\r\n        this.dbTransactionEventsObservable = new Observable<DbEvent>(observer => this.dbTransactionEventsObserver = observer).share();\r\n        \r\n    }\r\n\r\n    init(): Promise<void> {\r\n        return this.persistenceProvider.transactions(this.id).then(dbtransactions => {\r\n            dbtransactions.forEach((transaction) => {\r\n                this.transactions.insert(transaction);\r\n            });\r\n            this.sortedTransactions = this.transactions.addDynamicView('sortedTransactions_' + this.id);\r\n            this.sortedTransactions.applySimpleSort('id');\r\n            this.initialised = true;\r\n        });\r\n    }\r\n    \r\n    isActive(): boolean {\r\n        return this.active;\r\n    }\r\n\r\n    isBatchProcessing(): boolean {\r\n        return this.batchProcessing;\r\n    }\r\n    \r\n    activate(progressCallback?: (value: number, of: number) => void): Promise<void> {\r\n        // If already active, then skip and return straight away\r\n        if (this.active) return Promise.resolve();\r\n\r\n        this.logger.info(\"Activating Budget \" + this.name());\r\n\r\n        if (!this.initialised) throw new Error('Activate called when not yet initialised.');\r\n\r\n        if (this.activating) {\r\n            this.logger.info(\"Budget Already Activating \" + this.name());\r\n            return Promise.resolve();\r\n        }\r\n        \r\n        this.activating = true;\r\n        this.batchProcessing = true;\r\n        this.fireEvent({eventName: 'transaction-batch-start'});\r\n\r\n        let p = ChunkedTask.execute((iterator, resolve, reject) => {\r\n            // Can update this to just pass in the array... Put it in the initialiser...\r\n            // Or: Can move the: \"Size\" to a property and just have a single statement here...\r\n            if (iterator.getValue() === 0) {\r\n                // To handle when the array is empty\r\n                if (this.sortedTransactions.data().length == 0) {\r\n                    resolve();\r\n                    return;\r\n                }\r\n                iterator.setExpectedSize(this.sortedTransactions.data().length);\r\n            }\r\n            this.applyTransaction(this.sortedTransactions.data()[iterator.getValue()]);\r\n            if (iterator.getValue() == this.sortedTransactions.data().length - 1) resolve();\r\n        }, {progressCallback: progressCallback}).then(() => {\r\n            this.activating = false;\r\n            this.active = true;\r\n            this.logger.info(\"Activated Budget \" + this.name());                \r\n            this.fireEvent({eventName: 'db-activated'});\r\n            this.batchProcessing = false;\r\n            this.fireEvent({eventName: 'transaction-batch-end'});\r\n        }).catch(reason => {\r\n            this.activating = false;\r\n            this.active = false;\r\n            this.batchProcessing = false;\r\n            this.logger.error(\"Error activating db\", reason);\r\n        });\r\n\r\n        return p;\r\n    }\r\n    \r\n    isActivating() {\r\n        return this.activating;\r\n    }\r\n    \r\n    deactivate() {\r\n        if (! this.active) return;\r\n        \r\n        // TODO: Delete tables (not transactions, but generated tables)\r\n        this.active = false;\r\n    }\r\n\r\n    name(name?: string): string {\r\n        return this.localSetting('name', name);\r\n    }\r\n    \r\n    transactionIdLocalGen(localGenId?: any): number {\r\n        var id = this.localSetting('localGenId', localGenId);\r\n        if (!id) return 1;\r\n        if (parseInt(id) < 1 || parseInt(id) > 999) throw new Error('localGenId must be between 1 - 999 inclusive. Value is: ' + localGenId);\r\n        return parseInt(id);\r\n    }\r\n\r\n    localSetting(key: string, valueString?: string): string {\r\n        return this.persistenceProvider.keyStore(this.id, key, valueString);\r\n    }\r\n    \r\n    // Returns the next transaction Id above the head transaction (So does not increment, incrementing occurs on processing)\r\n    nextTransactionId() {\r\n        return ~~((~~((this.transactionIdHead ? this.transactionIdHead : 0) / 1000) + 1) * 1000) + this.transactionIdLocalGen();\r\n    }\r\n\r\n    extractTransactionLocalGenId(transactionId: number): number {\r\n        return transactionId % 1000;\r\n    }\r\n\r\n    private updateTransactionIdHead(transaction: DbTransaction) {\r\n        if (!this.transactionIdHead || transaction.id > this.transactionIdHead) this.transactionIdHead = transaction.id;\r\n    }\r\n    \r\n    /**\r\n     * Applying a transaction will execute it and persist it in the database.\r\n     * \r\n     * The transaction must be a new one, or attached to a database, not a clone\r\n     */\r\n    applyTransaction(transaction: DbTransaction) {\r\n\r\n        try {\r\n\r\n            // Updated works like the following:-\r\n            // If active, then it is updated if a transaction is already applied\r\n            // If inactive, then it is updated if a transaction is already in the database\r\n            // In both cases, the previous version is fetched from the database, to be passed to the event\r\n            // In the already active case, the previous version is also passed to the transaction update (although it could also collect info from the \"records\")\r\n            let updated = false;\r\n            let updatedOriginalTransaction: DbTransaction;\r\n\r\n            if (transaction.id) this.updateTransactionIdHead(transaction);\r\n            \r\n            // Ignore deleted transactions\r\n            if (transaction.deleted) {\r\n                if (! transaction.id) {\r\n                    // Ignore this, it's been deleted and never persisted...\r\n                    return;\r\n                } else if (!transaction.applied) {\r\n                    // If it's not applied and it's deleted, that is the final state we want for the transaction, so lets leave it here...\r\n                    // Save the transaction still unless we are activating\r\n                    if (!this.activating) this.deleteTransaction(transaction);\r\n                    return;\r\n                } else {\r\n                    // It's deleted AND applied, so we need to processes the deletion\r\n                    this.deleteTransaction(transaction);\r\n                    // Transaction applied is called in delete...\r\n                    return;\r\n                }\r\n            } else {\r\n                // Give a new transaction an Id\r\n\r\n                if (!transaction.id) {\r\n                    transaction.id = this.nextTransactionId();\r\n                    this.updateTransactionIdHead(transaction);\r\n                }\r\n                \r\n                // Process transactions\r\n                if (this.active || this.activating) {\r\n                    if (!transaction.applied) {\r\n                        transaction.apply(this.transactionProcessor);\r\n                        transaction.applied = true;\r\n                        \r\n                    } else {\r\n                        updated = true;\r\n                        updatedOriginalTransaction = this.persistenceProvider.getTransaction(this.id, transaction.id); \r\n                        transaction.update(this.transactionProcessor, updatedOriginalTransaction);\r\n                    }\r\n                }\r\n                if (!this.activating) {\r\n                    updated = updated || (!this.active && (<any>transaction).$loki != null);\r\n                    if (updated && !updatedOriginalTransaction) updatedOriginalTransaction = this.persistenceProvider.getTransaction(this.id, transaction.id);\r\n                    this.saveTransaction(transaction);\r\n                }\r\n            }\r\n\r\n            this.fireEvent({eventName : 'transaction-applied', data: {transaction: transaction, update: updated, originalTransaction: updatedOriginalTransaction}});\r\n        } catch (err) {\r\n            this.logger.info(\"Error applying transaction. Throwing Error.\", transaction, err);\r\n            throw err;\r\n        }\r\n    }\r\n    \r\n    getTransaction<T extends DbTransaction>(transactionId: number): T {\r\n        return <T>this.transactions.by('id', <any> transactionId);\r\n    }\r\n    \r\n    /**\r\n     * Saving a transaction will persist it, but not apply it\r\n     * This should only be called internally, or if extra transaction\r\n     * data is needing to be saved without any modifications to the transaction itself\r\n     * \r\n     * The transaction must be a new one, or attached to a database, not a clone\r\n     */\r\n    saveTransaction(transaction: DbTransaction) {\r\n        // Determine which one... it doesn't matter\r\n        if (this.getTransaction(transaction.id) == null) {\r\n            this.transactions.insert(transaction);\r\n        } else {\r\n            this.transactions.update(transaction);\r\n        }\r\n        \r\n        this.persistenceProvider.saveTransaction(this.id, this.transactionSerializer.cloneTransaction(transaction));\r\n    }\r\n        \r\n    /**\r\n     * Undo a transaction and remove it from the database\r\n     */\r\n    deleteTransaction(transaction: DbTransaction) {\r\n        transaction.deleted = true;\r\n        if (this.getTransaction(transaction.id) == null) {\r\n            this.transactions.insert(transaction);\r\n        } else {\r\n            this.transactions.update(transaction);\r\n        }\r\n\r\n        this.persistenceProvider.saveTransaction(this.id, this.transactionSerializer.cloneTransaction(transaction));\r\n        this.undoTransaction(transaction);\r\n    }\r\n    \r\n    undoTransaction(transaction: DbTransaction) {\r\n        if (!transaction.applied) return;\r\n        transaction.undo(this.transactionProcessor);\r\n        transaction.applied = false;\r\n        this.fireEvent({eventName: 'transaction-undone', data: {transaction: transaction}});\r\n    }\r\n    \r\n    \r\n    \r\n    addEventListener(listener: DbEventListener) {\r\n        this.eventListeners.push(listener);\r\n    }\r\n\r\n    on(event: DbEventType): Observable<DbEvent> {\r\n        if (event === 'db-activated' || event === 'db-deleted') return this.dbEventsObservable.filter(dbEvent => dbEvent.eventName === event);\r\n        return this.dbTransactionEventsObservable.filter(dbEvent => dbEvent.eventName === event);\r\n    }\r\n    \r\n    deleteInternal() {\r\n        this.fireEvent({eventName: 'db-deleted'});\r\n        this.eventListeners.length = 0;\r\n    }\r\n\r\n    fireEvent(dbEvent: DbEvent) {\r\n        if (!dbEvent.db) dbEvent.db = this;\r\n\r\n        this.logger.debug(() => dbEvent);\r\n        this.eventListeners.forEach((listener) => {listener(dbEvent)});\r\n        if (this.dbEventsObserver && dbEvent.eventName === 'db-activated' || dbEvent.eventName === 'db-deleted') this.dbEventsObserver.next(dbEvent);\r\n        else if (this.dbTransactionEventsObserver) this.dbTransactionEventsObserver.next(dbEvent);\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/db.ts","import {Db} from './db';\r\nimport {Record} from './record';\r\nimport {DbTransaction} from './transaction';\r\n\r\nexport class TransactionProcessor {\r\n\r\n    private loki: Loki;\r\n    public db: Db;\r\n\r\n    constructor(db: Db, loki: Loki) {\r\n        this.loki = loki;\r\n        this.db = db;\r\n    }\r\n    \r\n    private tableByName<T extends Record<any>>(tableName: string, type: {new(): T}): LokiCollection<T> {\r\n        let collection = this.loki.getCollection<T>(tableName + '_' + this.db.id);\r\n        if (collection == null) {\r\n            collection = this.loki.addCollection<T>(tableName + '_' + this.db.id, new type().tableCreationOptions);\r\n            new type().initTable(collection);\r\n        } \r\n        return collection;\r\n    }\r\n\r\n    table<T extends Record<any>>(type: {new(): T}): LokiCollection<T> {\r\n        return this.tableByName<T>(new type().tableName(), type);\r\n    }\r\n\r\n    single<T extends Record<any>>(type: {new(): T} ): T {\r\n        let table = this.tableByName<T>(new type().tableName(), type);\r\n        if (!table.data.length) {\r\n            table.insert(new type());\r\n        }\r\n        return table.data[0];\r\n    }\r\n\r\n\r\n    unmapTransactionAndRecord(transaction: DbTransaction, record: Record<any>) {\r\n        if (transaction.records && transaction.records.indexOf(record) != -1) transaction.records.splice(transaction.records.indexOf(record), 1);\r\n        if (record.transactions && record.transactions.indexOf(transaction) != -1) record.transactions.splice(record.transactions.indexOf(transaction), 1);\r\n    }\r\n\r\n    mapTransactionAndRecord(transaction: DbTransaction, record: Record<any>) {\r\n        if (!transaction.records) transaction.records = new Array<Record<any>>();\r\n        if (transaction.records.indexOf(record) == -1) transaction.records.push(record);\r\n\r\n        if (!record.transactions) record.transactions = new Array<DbTransaction>();\r\n        if (record.transactions.indexOf(transaction) == -1) record.transactions.push(transaction);\r\n    }\r\n\r\n    findAllTransactionsForRecord(record: Record<any>): Array<DbTransaction> {\r\n        return record.transactions;\r\n    }\r\n\r\n    findTransactionsForRecord<T extends DbTransaction>(record: Record<any>, type: {new(): T}): Array<T> {\r\n        let typeId = new type().getTypeId();\r\n        return <T[]> record.transactions.filter((t) => t.getTypeId() === typeId);\r\n    }\r\n\r\n    findAllRecordsForTransaction<T extends Record<any>>(transaction: DbTransaction): Array<Record<any>> {\r\n        return transaction.records == null ? [] : transaction.records;\r\n    }\r\n\r\n    findRecordsForTransaction<T extends Record<any>>(transaction: DbTransaction, type: {new(): T}): Array<T> {\r\n        if (transaction.records == null) return [];\r\n        return <T[]> transaction.records.filter((r) => r instanceof type);\r\n    }\r\n\r\n\r\n    unsupported() {\r\n        throw new Error('Unsupported Transaction Operation');\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/transaction-processor.ts","export class ChunkedTask {\r\n\r\n    public static execute(executor: (iterator: ChunkedTaskIterator, resolve: (value?: any) => void, reject: (reason?: any) => void) => void, iteratorData?: {progressCallback: (value: number, of?: number) => void}): Promise<any> {\r\n        let p = new Promise((promiseResolve, promiseReject) => {\r\n\r\n            let iterator = new ChunkedTaskIterator();\r\n            iterator.setValue(0);\r\n            if (iteratorData) {\r\n                iterator.progressCallback = iteratorData.progressCallback;\r\n\r\n            }\r\n            let func = () => executor(\r\n                iterator, \r\n                (value?: any) => {\r\n                    iterator.end();\r\n                    promiseResolve(value);\r\n                }, \r\n                (reason?: any) => {\r\n                    iterator.end();\r\n                    promiseReject(reason);\r\n                }\r\n            );\r\n\r\n            iterator.setIterateFunction(func);\r\n            \r\n            iterator.start();\r\n\r\n        });\r\n\r\n        return p;\r\n    }\r\n}\r\n\r\nclass ChunkedTaskIterator {\r\n    private value;\r\n    private func: (any);\r\n    public iterationCount;\r\n    private iterationStartTime: number;\r\n    private ended: boolean;\r\n    private expectedSize: number;\r\n    private breaktime = this.useRequestAnimationFrame() ? 30 : 60;\r\n\r\n    public useRequestAnimationFrame(): boolean {\r\n        return \"requestAnimationFrame\" in window;\r\n    }\r\n    \r\n    progressCallback: (value: number, of?: number) => void;\r\n\r\n    public end(): void {\r\n        this.ended = true;\r\n    }\r\n\r\n    public setValue(value: any): void {\r\n        this.value = value;\r\n    }\r\n\r\n    public getValue(): any {\r\n        return this.value;\r\n    }\r\n\r\n    public setIterateFunction(func: (any)): void {\r\n        this.func = func;\r\n    }\r\n\r\n    public iterateWithValue(value: any) {\r\n        this.setValue(value);\r\n        this.iterate();\r\n    }\r\n\r\n    public start() {\r\n        this.execute();\r\n    }\r\n\r\n    public iterate() {\r\n\r\n        if (!this.needsBreak()) {\r\n            this.execute();\r\n        }\r\n        \r\n        if (\"hidden\" in document && document.hidden) {\r\n            this.execute();\r\n            if (this.progressCallback) this.progressCallback(this.value, this.expectedSize);\r\n        } else if (this.useRequestAnimationFrame()) {\r\n            window.requestAnimationFrame(() => {\r\n                this.execute();\r\n                if (this.progressCallback) this.progressCallback(this.value, this.expectedSize);\r\n            });\r\n        } else {\r\n            setTimeout(() => {\r\n                this.execute();\r\n                if (this.progressCallback) this.progressCallback(this.value, this.expectedSize);\r\n            }, 4);\r\n        }\r\n    }\r\n\r\n    public setExpectedSize(value: number) {\r\n        this.expectedSize = value;\r\n    }\r\n\r\n    private execute() {\r\n        this.iterationStartTime = Date.now();\r\n\r\n        while (!this.needsBreak() && !this.ended) {\r\n            // TODO: counters\r\n            this.func();\r\n\r\n            this.value++;\r\n        }\r\n\r\n        if (!this.ended) {\r\n            this.iterate();\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    public needsBreak(): boolean {\r\n        return Date.now() - this.iterationStartTime > this.breaktime;\r\n    }\r\n\r\n    // TODO: Iteration time, iteration count, counter, progress\r\n\r\n\r\n}\r\n\r\nexport class ChunkedTaskTest {\r\n\r\n    test1() {\r\n        ChunkedTask.execute((iterator, resolve, reject) => {\r\n            let count = 0;\r\n            for (let i = iterator.getValue(); i < 10000000; i++) {\r\n                if (count++ % 1000 === 0) return iterator.iterateWithValue(i);\r\n            }\r\n            resolve();\r\n        });\r\n    }\r\n\r\n\r\n    test2() {\r\n        ChunkedTask.execute((iterator, resolve, reject) => {\r\n            let i = iterator.getValue();\r\n            if (i > 1000) resolve();\r\n        });\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/chunked-task.ts","import {DbTransaction} from './transaction';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport {DbPersistenceProvider} from './db-persistence-provider';\r\n\r\nexport class LocalStoragePersistenceProvider implements DbPersistenceProvider {\r\n    \r\n    \r\n    constructor(private storagePrefix: string, private transactionSerializer: TransactionSerializer) {\r\n    }\r\n\r\n    init(): Promise<any> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    dbs(): Array<string> {\r\n        var dbArray = localStorage.getItem(this.storagePrefix + '_dbs');\r\n        if (!dbArray) return [];\r\n        return JSON.parse(dbArray);\r\n    }\r\n    \r\n    addDb(dbId: string): Promise<void> {\r\n        let dbArray = this.dbs();\r\n        if (dbArray.indexOf(dbId) === -1) {\r\n            dbArray.push(dbId);\r\n            localStorage.setItem(this.storagePrefix + '_dbs', JSON.stringify(dbArray));\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    \r\n    unlinkDb(dbId: string) {\r\n        let dbArray = this.dbs();\r\n        if (dbArray.indexOf(dbId) > -1) {\r\n            dbArray.splice(dbArray.indexOf(dbId), 1);\r\n            this.transactionsSync(dbId).forEach(transaction => {\r\n                this.deleteTransaction(dbId, transaction.id);\r\n            });\r\n            localStorage.setItem(this.storagePrefix + '_dbs', JSON.stringify(dbArray));\r\n        }\r\n    }\r\n\r\n    transactionsSync(dbId): Array<DbTransaction> {\r\n        var transactions = [];\r\n        for ( var i = 0, len = localStorage.length; i < len; ++i ) {\r\n            if (localStorage.key( i ).match(this.storagePrefix + '_' + dbId + '_')) {\r\n                var transactionString = localStorage.getItem( localStorage.key( i ) );\r\n                var transaction = this.transactionSerializer.fromJson(transactionString);\r\n                transactions.push(transaction);\r\n            }\r\n        }\r\n        return transactions;\r\n    }\r\n\r\n\r\n\r\n    transactions(dbId): Promise<Array<DbTransaction>> {\r\n        return Promise.resolve(this.transactionsSync(dbId));\r\n    }\r\n    \r\n    \r\n    saveTransaction(dbId: String, transaction: DbTransaction) {\r\n        localStorage.setItem(this.storagePrefix + '_' + dbId + '_' + transaction.id, this.transactionSerializer.toJson(transaction));\r\n    }\r\n\r\n    deleteTransaction(dbId: String, transactionId: number) {\r\n        localStorage.removeItem(this.storagePrefix + '_' + dbId + '_' + transactionId);\r\n    }\r\n\r\n    getTransaction(dbId: String, transactionId: number): DbTransaction {\r\n        let transactionString = localStorage.getItem(this.storagePrefix + '_' + dbId + '_' + transactionId);\r\n        let transaction = this.transactionSerializer.fromJson(transactionString);\r\n        return transaction;\r\n    }\r\n\r\n    keyStore(dbId: string, key: string, value?: string): string {\r\n        var localKey = this.storagePrefix + '_keystore_' + dbId + '_' + key;\r\n        if (typeof value !== 'undefined' )\r\n            localStorage.setItem(localKey, value);\r\n\r\n        return localStorage.getItem(localKey);\r\n\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/local-storage-persistence-provider.ts","import {SQLite, SQLiteObject} from '@ionic-native/sqlite';\r\nimport {DbTransaction} from './transaction';\r\nimport {TransactionSerializer} from './transaction-serializer';\r\nimport {DbPersistenceProvider} from './db-persistence-provider';\r\nimport {Logger} from '../services/logger';\r\n\r\nexport class SqlStoragePersistenceProvider implements DbPersistenceProvider  {\r\n    \r\n   private logger: Logger = Logger.get('SqlStoragePersistenceProvider');\r\n\r\n    private sqlStorage: SQLiteObject;\r\n    private keyStoreCache: Map<string, string>;\r\n    private dbsCache: Array<string>;\r\n    private transactionsCache: Map<string, string>;\r\n\r\n    constructor(private storagePrefix: string, private transactionSerializer: TransactionSerializer, private sqlite: SQLite) {\r\n        this.keyStoreCache = new Map<string, string>();\r\n        this.transactionsCache = new Map<string, string>();\r\n    }\r\n\r\n    init(): Promise<any> {\r\n        return this.sqlite.create({name: this.storagePrefix + '_db', location: 'default'}).then((db: SQLiteObject) => {\r\n            this.sqlStorage = db;\r\n            return this.sqlStorage.executeSql('CREATE TABLE IF NOT EXISTS _keystore (dbid TEXT, key TEXT, keyvalue TEXT, PRIMARY KEY (dbid, key))', []);})\r\n        .then(() => {\r\n            return this.sqlStorage.executeSql('SELECT * FROM _keystore', [])\r\n            .then(result => {\r\n                for (let i = 0; i < result.rows.length; i++) {\r\n                    let item = result.rows.item(i);\r\n                    this.keyStoreCache.set(item.dbid + '_' + item.key, item.keyvalue);\r\n                }\r\n            }).then(() => {\r\n                let dbsValue = this.keyStore(\"_dbs\", \"dbs\");\r\n                this.dbsCache = dbsValue ? JSON.parse(dbsValue) : [];            \r\n                let p = new Array<Promise<void>>();\r\n                this.dbsCache.forEach(dbId => {\r\n                    p.push(this.createDbTables(dbId));\r\n                });\r\n                return Promise.all(p);\r\n            })\r\n        });\r\n    }\r\n\r\n    \r\n    dbs(): Array<string> {\r\n        return this.dbsCache;\r\n    }\r\n    \r\n    createDbTables(dbId): Promise<any> {\r\n        let p = new Array<Promise<void>>();\r\n        p.push(this.sqlStorage.executeSql('CREATE TABLE IF NOT EXISTS db_' + this.sanitise(dbId) + '_transaction (id INTEGER PRIMARY KEY, dbtransaction TEXT)', []));\r\n        return Promise.all(p);\r\n    }\r\n\r\n    addDb(dbId: string): Promise<void> {\r\n        let dbArray = this.dbs();\r\n        if (dbArray.indexOf(dbId) === -1) {\r\n            dbArray.push(dbId);\r\n            return this.createDbTables(dbId).then(() => {\r\n                this.keyStore('_dbs', 'dbs', JSON.stringify(dbArray));\r\n            }).catch(err => {\r\n                this.logger.error('Error adding db', err);\r\n            });\r\n        }\r\n    }\r\n    \r\n    unlinkDb(dbId: string) {\r\n        let dbArray = this.dbs();\r\n        if (dbArray.indexOf(dbId) > -1) {\r\n            dbArray.splice(dbArray.indexOf(dbId), 1);\r\n            this.keyStore('_dbs', 'dbs', JSON.stringify(dbArray));\r\n\r\n            this.sqlStorage.executeSql('DROP TABLE IF EXISTS db_' + this.sanitise(dbId) + '_transaction', []).catch(err => {\r\n                this.logger.error({'msg': 'Error dropping database db_' + dbId + '_transaction', 'err': err});\r\n            });\r\n            this.sqlStorage.executeSql('DROP TABLE IF EXISTS db_' + this.sanitise(dbId) + '_keystore', []).catch(err => {\r\n                this.logger.error({'msg': 'Error dropping database db_' + dbId + '_keystore', 'err': err});\r\n            });\r\n        }\r\n    }\r\n\r\n    transactions(dbId): Promise<Array<DbTransaction>> {\r\n\r\n        return this.sqlStorage.executeSql('SELECT dbtransaction FROM db_' + this.sanitise(dbId) + '_transaction ORDER BY id', []).then(result => {\r\n            let transactions = [];\r\n            for (let i = 0; i < result.rows.length; i++) {\r\n                let transactionString = result.rows.item(i).dbtransaction;\r\n                let transaction = this.transactionSerializer.fromJson(transactionString);\r\n                transactions.push(transaction);\r\n                this.transactionsCache.set(this.sanitise(dbId) + '_' + transaction.id, transactionString);\r\n            }\r\n            return transactions;\r\n        }).catch(err => {\r\n            this.logger.error('Error getting db transactions', err);\r\n            return [];\r\n        });\r\n    }\r\n    \r\n    \r\n    saveTransaction(dbId: string, transaction: DbTransaction) {\r\n        let transactionString = this.transactionSerializer.toJson(transaction);\r\n        this.sqlStorage.executeSql('INSERT OR REPLACE INTO db_' + this.sanitise(dbId) + '_transaction (id, dbtransaction) VALUES (?, ?)',\r\n        [transaction.id, transactionString])\r\n        .catch(err => {\r\n            this.logger.error('Error inserting/replacing transaction in database db_' + dbId + '_transaction for id ' + transaction.id, err);\r\n            // TODO: Application halt ?\r\n\r\n        });\r\n        this.transactionsCache.set(this.sanitise(dbId) + '_' + transaction.id, transactionString);\r\n    }\r\n\r\n    deleteTransaction(dbId: string, transactionId: number) {\r\n        this.sqlStorage.executeSql('DELETE FROM db_' + this.sanitise(dbId) + '_transaction WHERE id = ?', [transactionId])\r\n        .catch(err => {\r\n            this.logger.error('Error deleting transaction in table db_' + dbId + '_transaction for id ' + transactionId, err);\r\n            // TODO: Application halt ?\r\n\r\n        });\r\n        this.transactionsCache.delete(this.sanitise(dbId) + '_' + transactionId);\r\n    }\r\n\r\n    getTransaction(dbId: string, transactionId: number): DbTransaction {\r\n        let transactionString = this.transactionsCache.get(this.sanitise(dbId) + '_' + transactionId);\r\n        let transaction = this.transactionSerializer.fromJson(transactionString);\r\n        return transaction;\r\n    }\r\n\r\n    \r\n    keyStore(dbId: string, key: string, value?: string): string {\r\n        var localKey = dbId + '_' + key;\r\n        if (typeof value !== 'undefined' ) {\r\n            this.keyStoreCache.set(localKey, value);\r\n            this.sqlStorage.executeSql('INSERT OR REPLACE INTO _keystore (dbid, key, keyvalue) VALUES (?, ?, ?)',\r\n            [dbId, key, value])\r\n            .catch(err => {\r\n                this.logger.error('Error inserting/replacing in table _keystore for dbid/key/value ' + dbId + '/' + key + '/' + value, err);\r\n                // TODO: Application halt ? - need to at least stop them doing more - warning - fatal error has occured....\r\n            });\r\n\r\n        }\r\n\r\n        return this.keyStoreCache.get(localKey);\r\n\r\n    }\r\n\r\n    private sanitise(dbId: string): string {\r\n        return dbId.split('-').join('');\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/db/sql-storage-persistence-provider.ts","var map = {\n\t\"./af\": 247,\n\t\"./af.js\": 247,\n\t\"./ar\": 248,\n\t\"./ar-dz\": 249,\n\t\"./ar-dz.js\": 249,\n\t\"./ar-kw\": 250,\n\t\"./ar-kw.js\": 250,\n\t\"./ar-ly\": 251,\n\t\"./ar-ly.js\": 251,\n\t\"./ar-ma\": 252,\n\t\"./ar-ma.js\": 252,\n\t\"./ar-sa\": 253,\n\t\"./ar-sa.js\": 253,\n\t\"./ar-tn\": 254,\n\t\"./ar-tn.js\": 254,\n\t\"./ar.js\": 248,\n\t\"./az\": 255,\n\t\"./az.js\": 255,\n\t\"./be\": 256,\n\t\"./be.js\": 256,\n\t\"./bg\": 257,\n\t\"./bg.js\": 257,\n\t\"./bm\": 258,\n\t\"./bm.js\": 258,\n\t\"./bn\": 259,\n\t\"./bn.js\": 259,\n\t\"./bo\": 260,\n\t\"./bo.js\": 260,\n\t\"./br\": 261,\n\t\"./br.js\": 261,\n\t\"./bs\": 262,\n\t\"./bs.js\": 262,\n\t\"./ca\": 263,\n\t\"./ca.js\": 263,\n\t\"./cs\": 264,\n\t\"./cs.js\": 264,\n\t\"./cv\": 265,\n\t\"./cv.js\": 265,\n\t\"./cy\": 266,\n\t\"./cy.js\": 266,\n\t\"./da\": 267,\n\t\"./da.js\": 267,\n\t\"./de\": 268,\n\t\"./de-at\": 269,\n\t\"./de-at.js\": 269,\n\t\"./de-ch\": 270,\n\t\"./de-ch.js\": 270,\n\t\"./de.js\": 268,\n\t\"./dv\": 271,\n\t\"./dv.js\": 271,\n\t\"./el\": 272,\n\t\"./el.js\": 272,\n\t\"./en-au\": 273,\n\t\"./en-au.js\": 273,\n\t\"./en-ca\": 274,\n\t\"./en-ca.js\": 274,\n\t\"./en-gb\": 275,\n\t\"./en-gb.js\": 275,\n\t\"./en-ie\": 276,\n\t\"./en-ie.js\": 276,\n\t\"./en-nz\": 277,\n\t\"./en-nz.js\": 277,\n\t\"./eo\": 278,\n\t\"./eo.js\": 278,\n\t\"./es\": 279,\n\t\"./es-do\": 280,\n\t\"./es-do.js\": 280,\n\t\"./es-us\": 281,\n\t\"./es-us.js\": 281,\n\t\"./es.js\": 279,\n\t\"./et\": 282,\n\t\"./et.js\": 282,\n\t\"./eu\": 283,\n\t\"./eu.js\": 283,\n\t\"./fa\": 284,\n\t\"./fa.js\": 284,\n\t\"./fi\": 285,\n\t\"./fi.js\": 285,\n\t\"./fo\": 286,\n\t\"./fo.js\": 286,\n\t\"./fr\": 287,\n\t\"./fr-ca\": 288,\n\t\"./fr-ca.js\": 288,\n\t\"./fr-ch\": 289,\n\t\"./fr-ch.js\": 289,\n\t\"./fr.js\": 287,\n\t\"./fy\": 290,\n\t\"./fy.js\": 290,\n\t\"./gd\": 291,\n\t\"./gd.js\": 291,\n\t\"./gl\": 292,\n\t\"./gl.js\": 292,\n\t\"./gom-latn\": 293,\n\t\"./gom-latn.js\": 293,\n\t\"./gu\": 294,\n\t\"./gu.js\": 294,\n\t\"./he\": 295,\n\t\"./he.js\": 295,\n\t\"./hi\": 296,\n\t\"./hi.js\": 296,\n\t\"./hr\": 297,\n\t\"./hr.js\": 297,\n\t\"./hu\": 298,\n\t\"./hu.js\": 298,\n\t\"./hy-am\": 299,\n\t\"./hy-am.js\": 299,\n\t\"./id\": 300,\n\t\"./id.js\": 300,\n\t\"./is\": 301,\n\t\"./is.js\": 301,\n\t\"./it\": 302,\n\t\"./it.js\": 302,\n\t\"./ja\": 303,\n\t\"./ja.js\": 303,\n\t\"./jv\": 304,\n\t\"./jv.js\": 304,\n\t\"./ka\": 305,\n\t\"./ka.js\": 305,\n\t\"./kk\": 306,\n\t\"./kk.js\": 306,\n\t\"./km\": 307,\n\t\"./km.js\": 307,\n\t\"./kn\": 308,\n\t\"./kn.js\": 308,\n\t\"./ko\": 309,\n\t\"./ko.js\": 309,\n\t\"./ky\": 310,\n\t\"./ky.js\": 310,\n\t\"./lb\": 311,\n\t\"./lb.js\": 311,\n\t\"./lo\": 312,\n\t\"./lo.js\": 312,\n\t\"./lt\": 313,\n\t\"./lt.js\": 313,\n\t\"./lv\": 314,\n\t\"./lv.js\": 314,\n\t\"./me\": 315,\n\t\"./me.js\": 315,\n\t\"./mi\": 316,\n\t\"./mi.js\": 316,\n\t\"./mk\": 317,\n\t\"./mk.js\": 317,\n\t\"./ml\": 318,\n\t\"./ml.js\": 318,\n\t\"./mr\": 319,\n\t\"./mr.js\": 319,\n\t\"./ms\": 320,\n\t\"./ms-my\": 321,\n\t\"./ms-my.js\": 321,\n\t\"./ms.js\": 320,\n\t\"./mt\": 322,\n\t\"./mt.js\": 322,\n\t\"./my\": 323,\n\t\"./my.js\": 323,\n\t\"./nb\": 324,\n\t\"./nb.js\": 324,\n\t\"./ne\": 325,\n\t\"./ne.js\": 325,\n\t\"./nl\": 326,\n\t\"./nl-be\": 327,\n\t\"./nl-be.js\": 327,\n\t\"./nl.js\": 326,\n\t\"./nn\": 328,\n\t\"./nn.js\": 328,\n\t\"./pa-in\": 329,\n\t\"./pa-in.js\": 329,\n\t\"./pl\": 330,\n\t\"./pl.js\": 330,\n\t\"./pt\": 331,\n\t\"./pt-br\": 332,\n\t\"./pt-br.js\": 332,\n\t\"./pt.js\": 331,\n\t\"./ro\": 333,\n\t\"./ro.js\": 333,\n\t\"./ru\": 334,\n\t\"./ru.js\": 334,\n\t\"./sd\": 335,\n\t\"./sd.js\": 335,\n\t\"./se\": 336,\n\t\"./se.js\": 336,\n\t\"./si\": 337,\n\t\"./si.js\": 337,\n\t\"./sk\": 338,\n\t\"./sk.js\": 338,\n\t\"./sl\": 339,\n\t\"./sl.js\": 339,\n\t\"./sq\": 340,\n\t\"./sq.js\": 340,\n\t\"./sr\": 341,\n\t\"./sr-cyrl\": 342,\n\t\"./sr-cyrl.js\": 342,\n\t\"./sr.js\": 341,\n\t\"./ss\": 343,\n\t\"./ss.js\": 343,\n\t\"./sv\": 344,\n\t\"./sv.js\": 344,\n\t\"./sw\": 345,\n\t\"./sw.js\": 345,\n\t\"./ta\": 346,\n\t\"./ta.js\": 346,\n\t\"./te\": 347,\n\t\"./te.js\": 347,\n\t\"./tet\": 348,\n\t\"./tet.js\": 348,\n\t\"./th\": 349,\n\t\"./th.js\": 349,\n\t\"./tl-ph\": 350,\n\t\"./tl-ph.js\": 350,\n\t\"./tlh\": 351,\n\t\"./tlh.js\": 351,\n\t\"./tr\": 352,\n\t\"./tr.js\": 352,\n\t\"./tzl\": 353,\n\t\"./tzl.js\": 353,\n\t\"./tzm\": 354,\n\t\"./tzm-latn\": 355,\n\t\"./tzm-latn.js\": 355,\n\t\"./tzm.js\": 354,\n\t\"./uk\": 356,\n\t\"./uk.js\": 356,\n\t\"./ur\": 357,\n\t\"./ur.js\": 357,\n\t\"./uz\": 358,\n\t\"./uz-latn\": 359,\n\t\"./uz-latn.js\": 359,\n\t\"./uz.js\": 358,\n\t\"./vi\": 360,\n\t\"./vi.js\": 360,\n\t\"./x-pseudo\": 361,\n\t\"./x-pseudo.js\": 361,\n\t\"./yo\": 362,\n\t\"./yo.js\": 362,\n\t\"./zh-cn\": 363,\n\t\"./zh-cn.js\": 363,\n\t\"./zh-hk\": 364,\n\t\"./zh-hk.js\": 364,\n\t\"./zh-tw\": 365,\n\t\"./zh-tw.js\": 365\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 484;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 484\n// module chunks = 0","import {Db} from '../db/db';\r\nimport {Record} from '../db/record';\r\nimport {Category} from '../data/records/category';\r\nimport {Account} from '../data/records/account';\r\nimport {Notifications} from '../services/notifications';\r\nimport { Configuration } from '../services/configuration-service';\r\nimport { Transaction } from \"../data/records/transaction\";\r\nimport { Utils } from \"../services/utils\";\r\nimport { BankLink } from \"../data/records/bank-link\";\r\nimport { BankTransaction } from \"../data/records/bank-transaction\";\r\n\r\nexport class Engine {\r\n\r\n    categorySortedAlphabeticalDynamicView: LokiDynamicView<Category>;\r\n    transactionUnreconciledDynamicView: LokiDynamicView<Transaction>;\r\n    bankTransactionUnreconciledDynamicView: LokiDynamicView<BankTransaction>;\r\n    currentDate: string;\r\n\r\n    constructor(public db: Db, notifications: Notifications, configuration: Configuration) {\r\n        db.addEventListener(dbEvent => {\r\n            if (dbEvent.db && dbEvent.db.isBatchProcessing()) {\r\n                // Only process at batch end, which isBatchProcessing is false\r\n            } else {\r\n                let message: string;\r\n                if (dbEvent.eventName === 'transaction-batch-end') this.runAllProcessors();\r\n                if (dbEvent.eventName === 'transaction-applied') {\r\n                    this.runAllProcessors();\r\n                    message = dbEvent.data.transaction.toHumanisedString({action: dbEvent.data.update ? 'update' : 'apply', currencyFormatter: notifications.formatCurrency, originalTransaction: dbEvent.data.originalTransaction});\r\n                }\r\n                if (dbEvent.eventName === 'transaction-undone') {\r\n                    message = dbEvent.data.transaction.toHumanisedString({action: 'undo', currencyFormatter: notifications.formatCurrency});\r\n                    this.runAllProcessors();\r\n                } \r\n\r\n                // TODO: Move this out of the engine and into another listener\r\n                if (message && configuration.option('experimental.transaction.notifications')) {\r\n                    notifications.show({message: message, popup: false, silent: dbEvent.data.transaction && dbEvent.db.transactionIdLocalGen() === dbEvent.db.extractTransactionLocalGenId(dbEvent.data.transaction.id), important: false, category: 'transactions.' + this.db.id});\r\n                }\r\n            }\r\n        });\r\n        \r\n        this.categorySortedAlphabeticalDynamicView = this.db.transactionProcessor.table(Category).addDynamicView(\"CategorySortedAlphabetical\");\r\n        this.categorySortedAlphabeticalDynamicView.applySort(((a, b) => (a.name+''.toLocaleLowerCase()).localeCompare(b.name+''.toLocaleLowerCase())));\r\n\r\n        this.transactionUnreconciledDynamicView = this.db.transactionProcessor.table(Transaction).addDynamicView(\"TransactionUnreconciled\");\r\n        this.transactionUnreconciledDynamicView.applyWhere(t => !t.x.reconciled);\r\n        this.transactionUnreconciledDynamicView.applySimpleSort('date', true);\r\n\r\n        this.bankTransactionUnreconciledDynamicView = this.db.transactionProcessor.table(BankTransaction).addDynamicView(\"BankTransactionUnreconciled\");\r\n        this.bankTransactionUnreconciledDynamicView.applyWhere(t => !t.x.reconciled && !t.x.ignored);\r\n        this.bankTransactionUnreconciledDynamicView.applySimpleSort('date', true);\r\n\r\n        this.initMidnightWatch();\r\n    }\r\n\r\n    initMidnightWatch() {\r\n\r\n        let nowDate = Utils.nowYYYYMMDD();\r\n        if (this.currentDate !== nowDate) {\r\n            this.currentDate = nowDate;\r\n            this.runAllProcessors();\r\n        }\r\n\r\n        setTimeout(() => this.initMidnightWatch(), 60000);        \r\n    }\r\n    \r\n    runAllProcessors() {\r\n        this.db.transactionProcessor.table(Category).data.forEach(category => {\r\n           category.engine.processors.forEach(processor => {\r\n              processor.execute(this.db.transactionProcessor);\r\n           });\r\n        });\r\n        this.db.transactionProcessor.table(Account).data.forEach(account => {\r\n           account.processors.forEach(processor => {\r\n              processor.execute(this.db.transactionProcessor);\r\n           });\r\n        });\r\n    }\r\n\r\n    getCategories(order: \"alphabetical\" | \"natural\" = \"natural\"): Array<Category> {\r\n        \r\n        if (order == \"alphabetical\") return this.categorySortedAlphabeticalDynamicView.data();\r\n        return this.db.transactionProcessor.table(Category).chain().data();\r\n    }\r\n\r\n    getTransactionsUnreconciledView() {\r\n        return this.transactionUnreconciledDynamicView;\r\n    }\r\n\r\n    getCategory(categoryId: any): Category {\r\n        return this.db.transactionProcessor.table(Category).by('id', categoryId);\r\n    }\r\n\r\n    getAccounts(): Account[] {\r\n        return this.db.transactionProcessor.table(Account).chain().simplesort('name').data();\r\n    }\r\n\r\n    getBankLinks(): BankLink[] {\r\n        return this.db.transactionProcessor.table(BankLink).chain().simplesort('name').data();\r\n    }\r\n\r\n    getRecordById<T extends Record<any>>(type: {new(): T}, id: any): T {\r\n        return this.db.transactionProcessor.table(type).by('id', id);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/engine/engine.ts","import {Processor} from '../../engine/processor';\r\nimport moment from 'moment';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Category} from '../records/category';\r\nimport {Transaction} from '../records/transaction';\r\nimport { Big } from 'big.js';\r\nimport { Utils } from \"../../services/utils\";\r\n\r\nexport class CategorySimpleWeeklyProcessor extends Processor {\r\n    \r\n    category: Category;\r\n    balanceDate: string;\r\n    weeklyAmount: Big;\r\n    balance: Big;\r\n    transactionId: number;\r\n    \r\n    getTypeId(): String {\r\n        return 'CategorySimpleWeeklyProcessor';\r\n    }\r\n        \r\n    execute(tp: TransactionProcessor) {\r\n        \r\n        let currentDate = Utils.nowYYYYMMDD(); // TODO: Replace with engine current Date ?\r\n\r\n        var transactions = <Array<Transaction>> <any> tp.table(Transaction).find({'categoryId': this.category.id});\r\n        var weekDiff, startBalance;\r\n        try {\r\n            weekDiff = moment(this.balanceDate, 'YYYYMMDD').startOf('week').diff(moment(), 'week');\r\n            startBalance = new Big(weekDiff).abs().times(this.weeklyAmount).plus(this.balance);\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n        this.category.balance = transactions.filter(t => !t.status || (t.status === 'realised' && t.date >= currentDate)).reduce((a, b) => {\r\n            if (b.date < this.balanceDate) return a;\r\n            return a.minus(b.amount);\r\n        }, startBalance);\r\n        \r\n        tp.table(Category).update(this.category);\r\n    }\r\n    \r\n    // TODO: Trigger when this occurs - transactions changed or the category record changed\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/processors/category-simple-weekly-processor.ts","import {Processor} from '../../engine/processor';\r\nimport moment from 'moment';\r\nimport {TransactionProcessor} from '../../db/transaction-processor';\r\nimport {Account} from '../records/account';\r\nimport {Category} from '../records/category';\r\nimport {Transaction} from '../records/transaction';\r\nimport { Big } from 'big.js';\r\nimport { Utils } from \"../../services/utils\";\r\n\r\nexport class AccountBalanceProcessor extends Processor {\r\n    \r\n    constructor(public account: Account) {\r\n        super();\r\n    }\r\n    \r\n    getTypeId(): String {\r\n        return 'AccountBalance';\r\n    }\r\n        \r\n    execute(tp: TransactionProcessor) {\r\n\r\n        let currentDate = Utils.nowYYYYMMDD();\r\n\r\n        let categoriesMap = new Map<number, Category>();\r\n        let categoryTable = tp.table(Category);\r\n        categoryTable.data.forEach(c => {\r\n            categoriesMap.set(c.id, c);\r\n            if (!c.x.accountBalances) c.x.accountBalances = new Map<number, Big>();\r\n            c.x.accountBalances.clear();\r\n        });\r\n        let accountTransactions = <Transaction[]> <any> tp.table(Transaction).find({'accountId': this.account.id});\r\n        this.account.balance = accountTransactions.filter(t => !t.status || (t.status === 'realised' && t.date >= currentDate)).reduce((total, transaction) => {\r\n\r\n            let accountBalances = categoriesMap.get(transaction.categoryId).x.accountBalances;\r\n            let categoryTotal = accountBalances.get(transaction.accountId || null) || new Big(\"0\")\r\n            accountBalances.set(transaction.accountId || null, categoryTotal.minus(transaction.amount));\r\n\r\n            return total.minus(transaction.amount);\r\n        }, this.account.initialBalance || new Big('0'));\r\n        \r\n        tp.table(Account).update(this.account);\r\n        categoryTable.data.forEach(c => categoryTable.update(c));\r\n\r\n    }\r\n        \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/processors/account-balance.ts","import {ProviderInterface, BankAccount, BankAccountTransaction, ProviderSchema} from '../provider-interface';\r\nimport {HostInterface} from '../host-interface';\r\nimport {InAppBrowserObject} from '@ionic-native/in-app-browser';\r\nimport {Logger} from '../../services/logger';\r\nimport moment from 'moment';\r\nimport {Utils} from '../../services/utils'\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\nimport { SecureAccessor } from \"../../services/configuration-service\";\r\nimport { ProviderRequiresBrowser, BrowserInterface } from \"../browser-interface\";\r\n\r\nexport class AnzMobileWeb1Provider implements ProviderInterface, ProviderRequiresBrowser {\r\n    browser: BrowserInterface;\r\n\r\n    secureAccessor: SecureAccessor;\r\n    bankLink: BankLink;\r\n\r\n    private logger = Logger.get('AnzMobileWeb1Provider');\r\n    \r\n    // TODO: Move this to some kind of helper\r\n\r\n    connected: boolean;\r\n    hostInterface: HostInterface;\r\n    interruptFlag: boolean;\r\n\r\n    getSchema(): ProviderSchema {\r\n        let s = new ProviderSchema();\r\n        s.name = \"ANZ\";\r\n        s.perAccountFields = [\"Account Number\"];\r\n        s.secureConfigurationFields = [\"CRN\", \"Password\"];\r\n        s.requireBrowser = true;\r\n        return s;\r\n    }\r\n\r\n    accountMatch(perAccountFieldValues: object, bankAccount: BankAccount): boolean {\r\n        return perAccountFieldValues[\"Account Number\"] === bankAccount.accountNumber;\r\n    }\r\n\r\n    interrupt() {\r\n        this.interruptFlag = true;\r\n    }\r\n\r\n    configure(bankLink: BankLink, secureAccessor: SecureAccessor, hostInterface: HostInterface): void {\r\n        this.bankLink = bankLink;\r\n        this.secureAccessor = secureAccessor;\r\n        this.hostInterface = hostInterface;\r\n    }\r\n\r\n    setBrowser(browser: BrowserInterface) {\r\n        this.browser = browser;\r\n    }\r\n\r\n    getBrowser(): BrowserInterface {\r\n        return this.browser;\r\n    }\r\n\r\n    async connect(): Promise<void> {\r\n\r\n        await this.browser.navigate('https://www.anz.com/INETBANK/bankmain.asp');\r\n        let crn = await this.secureAccessor.getSecure('CRN');\r\n        let password = await this.secureAccessor.getSecure('Password');\r\n\r\n        /*\r\n        Note: determining current state can take into account clicks, scanning the page for familiar elements, window.location, timeout, etc. Also state can be a sure match, or unknown...\r\n        Should be able to put criteria to determine the state, then also what to do in different situations\r\n        So rather than this watcher business, define our states, then determine out state, and base our actions off the state...\r\n\r\n        let loggedInWatcher = this.browser.watch(\"var ele = document.getElementsByTagName('H1')[0]; ele ? ele.textContent.trim().toLowerCase() : '';\").for(val => val == 'your accounts').then(() => {\r\n\r\n            this.browser.endInteractive();\r\n\r\n        });\r\n\r\n        let reloginWatcher = this.browser.watch(\"var ele = document.getElementsByTagName('H1')[0]; ele ? ele.textContent.trim().toLowerCase() : '';\").for(val => val == 'your accounts').then(() => {\r\n            \r\n        });\r\n            \r\n        let loggedInWatcher\r\n\r\n        this.browser.execute(\"document.location.href\"}).then(val => {\r\n            if (val.match('relogin')) this.hostInterface.showBrowser();\r\n        });\r\n        loggedInWatcher.cancel();\r\n\r\n        */\r\n\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n\r\n            let code = '';\r\n            if (crn) code += \"document.getElementById('main').contentWindow.document.getElementById('crn').value = '\" + Utils.javaScriptEscape(crn) + \"';\";\r\n            if (password) code += \"document.getElementById('main').contentWindow.document.getElementById('Password').value = '\" + Utils.javaScriptEscape(password) + \"';\";\r\n            if (crn && password) {\r\n                code += \"document.getElementById('main').contentWindow.document.getElementById('SignonButton').click();\";\r\n                this.browser.execute(code);\r\n            } else {\r\n                this.browser.startInteractive(); \r\n                this.browser.onLoadStart().then(ev => {\r\n                    this.browser.endInteractive();\r\n                });\r\n            }                    \r\n\r\n\r\n            let checker = setInterval(() => {\r\n                this.browser.execute(\"var ele = document.getElementsByTagName('H1')[0]; ele ? ele.textContent.trim().toLowerCase() : '';\").then(val => {                        \r\n                    if (this.interruptFlag) {\r\n                        clearInterval(checker);\r\n                    }\r\n                    if (val == 'your accounts') {\r\n                        // TODO: And the browser has stopped loading check (maybe record a browser \"idle\" ?), and wait for some idle time?, also check on browser finished loading... (the interval will get ajax calls..., not sure if they are triggered by cordova...)\r\n                        // So make a function to encapsulate that logic...\r\n                        this.connected = true;\r\n                        setTimeout(() => resolve(), 500); // Delay for page to render? - Seems to load accounts via ajax calls... need to really wait and check for those! - or wait until loading has stopped for X seconds (ie. page is \"stable\")\r\n                        clearInterval(checker);\r\n                    } else {\r\n                        this.browser.execute(\"document.location.href\").then(val => {\r\n                            if (val.match('relogin')) {\r\n                                this.browser.startInteractive(); \r\n                                this.browser.onLoadStart().then(ev => {\r\n                                    this.browser.endInteractive();\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }, 1000);\r\n        });\r\n\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return this.connected;\r\n    }\r\n\r\n    getAccounts(): Promise<BankAccount[]> {\r\n        // TODO: make sure on accounts listing page, OR nav to that page\r\n        \r\n        return this.browser.execute('document.getElementsByClassName(\"normalLayoutAccounts\")[0].innerHTML').then((val) => {\r\n            let dom = new DOMParser().parseFromString(val, 'text/html');\r\n            let bankAccounts : BankAccount[] = []; \r\n            Array.from(dom.getElementsByClassName('listViewAccountWrapperYourAccounts')).forEach(ele => {\r\n                let bankAccount = new BankAccount();\r\n                bankAccount.accountName = ele.getElementsByClassName('accountNameSection')[0].textContent.trim();\r\n                bankAccount.bsb = ele.getElementsByClassName('accountNoSection')[0].textContent.trim().split(' ')[0];\r\n                bankAccount.accountNumber = ele.getElementsByClassName('accountNoSection')[0].textContent.trim().split(' ')[1];\r\n                bankAccount.accountBalance = ele.getElementsByClassName('listViewMobileCurrentBalanceValue')[0].textContent.trim().replace('$','').replace(',','').replace(',','');\r\n                bankAccount.accountAvailableBalance = ele.getElementsByClassName('listViewMobileAvailableBalanceValue')[0].textContent.trim().replace('$','').replace(',','').replace(',','');\r\n                bankAccounts.push(bankAccount);\r\n            });\r\n            return bankAccounts;\r\n        });\r\n    }\r\n\r\n\r\n    async getTransactions(account: BankAccount): Promise<BankAccountTransaction[]> {\r\n        // TODO: state tracking... At the moment, always click \"home\", then nav to account (document.getElementById(accountName).click())\r\n        \r\n        // TODO: these shoudl be in a \r\n        await this.browser.execute(\"document.querySelector('li.menuLiClass:nth-child(1) > a').click();\");\r\n        await this.browser.onLoadStop();\r\n\r\n        await this.browser.sleep(1000);\r\n\r\n        await this.browser.execute(\"document.querySelector('#\" + account.accountName.split(' ').join('') + \" > a').click();\");\r\n        await this.browser.onLoadStop();\r\n\r\n        // TODO: Sometimes this fires too soon ?\r\n        //await this.browser.execute(\"document.querySelector('.transactionAuthSection > a:nth-child(1)').click();\");\r\n        //await this.browser.onLoadStop();\r\n\r\n\r\n        return this.browser.execute('document.getElementsByClassName(\"tabsContainerAcctTranAuth\")[0].innerHTML').then((val) => {\r\n            try {\r\n                return this.parseTransactionPage(val);\r\n            } catch (e) {\r\n                this.logger.info('Error parsing transaction list', e, val);\r\n                throw e;\r\n            }\r\n        });\r\n\r\n        /*return this.browser.execute('JSON.stringify(processedTransactionsSingleSet)'}).then((txnList) => {\r\n\r\n            JSON.parse(txnList[0]).forEach(txnObj => {\r\n                let bankAccountTransaction = new BankAccountTransaction();\r\n                bankAccountTransaction.description = txnObj.getTxnDesc;\r\n                bankAccountTransaction.amount = txnObj.getTxnAmt;\r\n                bankAccountTransaction.transactionDate = moment().month(txnObj.month).date(txnObj.day).year(txnObj.year).format(Utils.STANDARD_DATE_FORMAT);\r\n                // TODO: Some kind of ordering so we can match / compare next time...\r\n\r\n                //txnObj.txnType;\r\n                //txnObj.getTxnBalance;\r\n                bankAccountTransactions.push(bankAccountTransaction);\r\n            });\r\n            return bankAccountTransactions;\r\n        });*/\r\n\r\n    }\r\n\r\n    private parseTransactionPage(html: string) : BankAccountTransaction[] {\r\n        let bankAccountTransactions : BankAccountTransaction[] = []; \r\n        let dom = new DOMParser().parseFromString(html, 'text/html');\r\n        Array.from(dom.getElementsByClassName('displayTable')).forEach(ele => {\r\n\r\n            let bankAccountTransaction = new BankAccountTransaction();\r\n\r\n            bankAccountTransaction.description = ele.querySelector('[class*=\"desc\"]').textContent.trim().split(/\\s+/).join(' ');\r\n            bankAccountTransaction.amount = ele.querySelector('.tran-amount-div').textContent.trim().replace(\"$\", \"\").replace(\",\", '').replace(',','').replace('+', '');\r\n            bankAccountTransaction.balance = (ele.querySelector('.tran-balance-div').textContent.replace('Balance', '').trim().match(/\\S+/g) || [''])[0].replace(\"$\", \"\").replace(\",\", '').replace(',','');\r\n\r\n            let dateMonthParts = ele.querySelector('.dateNmonthSection').textContent.match(/\\S+/g) || [];\r\n\r\n            let lastParentElement = ele.parentElement;\r\n            while (lastParentElement.parentElement.getElementsByClassName('monthYearDisplay').length == 0) lastParentElement = lastParentElement.parentElement;\r\n            let previousSibling = lastParentElement.previousElementSibling;\r\n            while (previousSibling && previousSibling.getElementsByClassName('monthYearDisplay').length != 1) previousSibling = previousSibling.previousElementSibling;\r\n            let monthYearParts = previousSibling ? previousSibling.getElementsByClassName('monthYearDisplay')[0].textContent.match(/\\S+/g) || [] : [];\r\n            if (monthYearParts.length == 0) monthYearParts = lastParentElement.parentElement.getElementsByClassName('monthYearDisplay')[0].textContent.match(/\\S+/g) || [];\r\n            \r\n\r\n            if (!bankAccountTransaction.balance && dateMonthParts.length == 2) {\r\n\r\n                bankAccountTransaction.status = 'authorised';\r\n                let testDate = moment().month(dateMonthParts[1]).date(Number(dateMonthParts[0]));\r\n                if (testDate.format(Utils.STANDARD_DATE_FORMAT) > moment().format(Utils.STANDARD_DATE_FORMAT)) testDate.subtract(1, 'years');\r\n                bankAccountTransaction.transactionDate = testDate.format(Utils.STANDARD_DATE_FORMAT);\r\n\r\n            } else if (dateMonthParts.length == 0 && monthYearParts.length == 1 && monthYearParts[0] == 'Recent') {\r\n\r\n                bankAccountTransaction.status = 'recent';\r\n                bankAccountTransaction.transactionDate = null;\r\n\r\n            } else if (dateMonthParts.length == 2 && monthYearParts.length == 2) {\r\n\r\n                bankAccountTransaction.status = 'processed';\r\n                let dateMonth = moment().month(dateMonthParts[1]).date(Number(dateMonthParts[0]));\r\n                let monthYear = moment().year(Number(monthYearParts[1])).month(monthYearParts[0]);\r\n                if (dateMonth.month() != monthYear.month()) {/* TODO: Error */}\r\n                bankAccountTransaction.transactionDate = dateMonth.year(monthYear.year()).format(Utils.STANDARD_DATE_FORMAT);\r\n\r\n            } else {\r\n                // Invalid / Error\r\n                this.logger.info(\"Unable to determine status and date for transaction\", bankAccountTransaction);\r\n            }\r\n\r\n            bankAccountTransactions.push(bankAccountTransaction);\r\n\r\n        });\r\n\r\n        bankAccountTransactions.reverse();\r\n        return bankAccountTransactions;\r\n    }\r\n\r\n    async close() {\r\n        // TODO: Logout (if possible) and close the browser object\r\n        // TODO: Host needs to close any open browser objects here and log it if was left dangling\r\n        // TODO: Note: logging out successfully should remove the window listener\r\n        await this.browser.execute(\"document.querySelector('.button-logout').click();\");\r\n        await this.browser.onLoadStop();\r\n        this.connected = false;\r\n        // TODO: If Not logged out, then force quit below...\r\n        this.browser.close();\r\n\r\n        // Force quit...\r\n        /*\r\n        this.browser.execute('window.onbeforeunload = null;'}).then(() => {\r\n            this.browser.close();\r\n        }, () => {\r\n            this.browser.close();\r\n        });\r\n        return Promise.resolve();\r\n        */\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/providers/anz-mobile-web-1.ts","import {ProviderInterface, BankAccount, BankAccountTransaction, ProviderSchema} from '../provider-interface';\r\nimport {HostInterface} from '../host-interface';\r\nimport { BankLink } from \"../../data/records/bank-link\";\r\nimport { SecureAccessor } from \"../../services/configuration-service\";\r\n\r\nexport class MockDataProvider implements ProviderInterface {\r\n\r\n    accounts : BankAccount[] = [{accountName: \"Mock Account\", accountNumber: \"12345678\", accountBalance: \"1430.00\", accountAvailableBalance: \"1400.00\", bsb: \"555666\"}];\r\n\r\n    data : BankAccountTransaction[][] = <any> [\r\n            [\r\n                {\"description\":\"VISA DEBIT AUTHORISATION COLES EXPRESS 2010 BUSSELTON AU Card Used 9038\",\"amount\":\"-1.50\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170427\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION BEST AND LESS BUSSELTON AU Card Used 9020\",\"amount\":\"-28.00\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170427\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION CALLOWS CORNER NEWS BUSSELTON AU Card Used 9020\",\"amount\":\"-40.95\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170427\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION FOOTBALL FEDERATIO N AUSTRSYDNEYAU Card Used 9020\",\"amount\":\"-110.00\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170426\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION HARMONY HAIR AND BEAUT BUSSELTON AU Card Used 9038\",\"amount\":\"-15.00\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170426\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION WOOLWORTHS 4416 BUSSELTON AU Card Used 9038\",\"amount\":\"-28.57\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170425\"},\r\n                {\"description\":\"VISA DEBIT AUTHORISATION TERRY WHITE CHEMISTS BUSSELTON AU Card Used 9020\",\"amount\":\"-108.55\",\"balance\":\"\",\"status\":\"authorised\",\"transactionDate\":\"20170424\"},\r\n\r\n                {\"description\":\"EFTPOS Cape Chiropract3227592 \\\\BUSSELTON06\",\"amount\":\"-55.00\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170428\"},\r\n                {\"description\":\"EFTPOS THE REJECT SHOP 610 BUSSELTON AU\",\"amount\":\"-6.00\",\"balance\":\"\",\"status\":\"recent\",\"transactionDate\":null},\r\n\r\n                {\"description\":\"ANZ INTERNET BANKING FUNDS TFER DAY CARE MAMA BIRD\",\"amount\":\"62.50\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170427\"},\r\n                {\"description\":\"VISA DEBIT PURCHASE CARD 9038 COLES EXPRESS 2010 BUSSELTON\",\"amount\":\"-1.50\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170427\"},\r\n                {\"description\":\"ANZ INTERNET BANKING BPAY TAX OFFICE PAYMENT {238536},\",\"amount\":\"-907.00\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170424\"},\r\n                {\"description\":\"ANZ INTERNET BANKING BPAY SGIO INSURANCE {240659},\",\"amount\":\"-653.60\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170424\"},\r\n                {\"description\":\"VISA DEBIT PURCHASE CARD 9020 DYNAMIC ORGANIC (WA) MANDURAH\",\"amount\":\"-45.00\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170421\"},\r\n                {\"description\":\"VISA DEBIT PURCHASE CARD 9038 COLES EXPRESS 2010 BUSSELTON\",\"amount\":\"-1.50\",\"balance\":\"\",\"status\":\"processed\",\"transactionDate\":\"20170418\"}\r\n            ], []\r\n\r\n    ];\r\n\r\n    getSchema(): ProviderSchema {\r\n        let s = new ProviderSchema();\r\n        s.name = \"Mock\";\r\n        s.perAccountFields = [\"Account Number\"];\r\n        s.secureConfigurationFields = [\"CRN\", \"Password\"];\r\n        return s;\r\n    }\r\n\r\n    accountMatch(perAccountFieldValues: object, bankAccount: BankAccount): boolean {\r\n        return true;\r\n    }\r\n\r\n    interrupt() {\r\n    }\r\n\r\n    configure(bankLink: BankLink, secureAccessor: SecureAccessor, hostInterface: HostInterface): void {\r\n        \r\n    }\r\n\r\n    connect(): Promise<void> {\r\n        return Promise.resolve();\r\n    }\r\n\r\n    isConnected(): boolean {\r\n        return true;\r\n    }\r\n\r\n    getAccounts(): Promise<BankAccount[]> {\r\n        return Promise.resolve(this.accounts);\r\n    }\r\n\r\n    getTransactions(account: BankAccount): Promise<BankAccountTransaction[]> {\r\n\r\n        // TODO: Increment / multiple versions of the data for test cases\r\n\r\n        return Promise.resolve(this.data[0]);\r\n    }\r\n\r\n    close(): Promise<void> {\r\n        return Promise.resolve();\r\n    }   \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/providers/mock-data-provider.ts","import {Record} from '../../db/record';\r\nimport { Big } from \"big.js\";\r\n\r\nexport class TransactionReconciliation extends Record<TransactionReconciliation> {\r\n    \r\n    public id: number;\r\n    public transactionId: number;\r\n    public bankTransactionId: number;\r\n    public amount: Big;\r\n    public transactionAmountOverride: boolean;\r\n\r\n    tableName(): string {\r\n        return 'TransactionReconciliation';\r\n    }\r\n\r\n    initTable(table: LokiCollection<TransactionReconciliation>) {\r\n        table.ensureUniqueIndex('id');\r\n    }\r\n    \r\n    tableCreationOptions(): any {\r\n        return {'indices': ['transactionId', 'bankTransactionId']};\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/data/records/transaction-reconciliation.ts","import {Logger} from '../services/logger';\r\nimport {ErrorHandler} from '@angular/core';\r\n\r\nexport class AppExceptionHandler implements ErrorHandler {\r\n\r\n    handleError(error: any) : void {\r\n        // TODO: Handle the error in the logger better\r\n        if (error.originalError) {\r\n            Logger.get('error').info(error);\r\n            Logger.get('error').error(error.originalError);\r\n        } else {\r\n            Logger.get('error').error(error);\r\n        }\r\n        \r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-exception-handler.ts","import { BrowserInterface } from \"./browser-interface\";\r\nimport { InAppBrowserObject } from \"@ionic-native/in-app-browser\";\r\nimport { Logger } from \"../services/logger\";\r\nimport { Notifications } from \"../services/notifications\";\r\nimport { BankSyncMonitor } from \"./bank-sync-monitor\";\r\n\r\nexport class InAppBrowserInterface extends BrowserInterface {\r\n    loading: boolean;\r\n    logger: Logger;\r\n    notifications: Notifications;\r\n    backgroundMode: boolean;\r\n    monitor: BankSyncMonitor;\r\n\r\n    startInteractive() {\r\n        if (this.backgroundMode && !this.interactive) {\r\n            this.notifications.show({\r\n                message: 'The Bank Sync for ' + this.monitor.bankLink.name + ' requires your input to continue',\r\n                important: true,\r\n                popup: true,\r\n                category: 'bank-sync.' + this.monitor.bankLink.uuid + '.interactive',\r\n                clickAction: {type: 'custom', data: () => this.confirmInteractive()}\r\n            });\r\n        } else {\r\n            super.startInteractive();\r\n        }\r\n    }\r\n\r\n    confirmInteractive() {\r\n        super.startInteractive();\r\n        this.notifications.remove({category: 'bank-sync.' + this.monitor.bankLink.uuid + '.interactive'});\r\n    }\r\n\r\n    updateVisbility() {\r\n\r\n        if (this.visible()) {\r\n            this.logger.debug(\"Browser visible\");\r\n            this.inAppBrowserObject.show();\r\n        } else {\r\n            this.logger.debug(\"Browser hidden\");\r\n            this.inAppBrowserObject.hide();\r\n        }\r\n    }\r\n\r\n    onLoadStop(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let subscription = this.inAppBrowserObject.on('loadstop').subscribe(ev => {\r\n                subscription.unsubscribe();\r\n                resolve();\r\n            });\r\n        });        \r\n    }\r\n\r\n    onLoadStart(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let subscription = this.inAppBrowserObject.on('loadstart').subscribe(ev => {\r\n                subscription.unsubscribe();\r\n                resolve();\r\n            });\r\n        });        \r\n    }\r\n    onClose(): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            let subscription = this.inAppBrowserObject.on('exit').subscribe(ev => {\r\n                subscription.unsubscribe();\r\n                resolve();\r\n            });\r\n        });        \r\n    }\r\n    onLoadError(): Promise<any> {\r\n        return new Promise<any>(resolve => {\r\n            let subscription = this.inAppBrowserObject.on('loaderror').subscribe(ev => {\r\n                subscription.unsubscribe();\r\n                resolve(ev.message);\r\n            });\r\n        });        \r\n    }\r\n\r\n    isLoading() {\r\n        return this.loading;\r\n    }\r\n\r\n    constructor(private inAppBrowserObject: InAppBrowserObject, logger: Logger, notifications: Notifications, backgroundMode: boolean, monitor: BankSyncMonitor) {\r\n        super();\r\n        this.logger = logger;\r\n        this.notifications = notifications;\r\n        this.monitor = monitor;\r\n        inAppBrowserObject.on('loadstart').subscribe(ev => {\r\n            this.loading = true;\r\n            this.logger.debug(\"Browser Load Start\");\r\n        });\r\n        inAppBrowserObject.on('loadstop').subscribe(ev => {\r\n            this.loading = false;\r\n            this.logger.debug(\"Browser Load Stop\");\r\n        });\r\n        \r\n        \r\n    }\r\n\r\n    execute(script: string): Promise<any> {\r\n        this.logger.debug('Executing Script: ' + script);\r\n        let wrappedCode = \"try {\" + script + \"}catch(err){'Error: ' + err + ' ' + JSON.stringify(err, Object.getOwnPropertyNames(err))}\";\r\n        return this.inAppBrowserObject.executeScript({code: wrappedCode}).then((result) => {\r\n            if ((<string> result[0] + '').startsWith('Error: ')) {\r\n                this.logger.info('Error in executed script', script, result[0]);\r\n                return null;\r\n            }\r\n            return result[0];\r\n        }).catch(reason => {\r\n            this.logger.info('Error executing script in browser', script, reason);            \r\n        });\r\n\r\n    }\r\n\r\n    close() {\r\n        this.notifications.remove({category: 'bank-sync.' + this.monitor.bankLink.uuid + '.interactive'});\r\n        this.inAppBrowserObject.close();\r\n        this.logger.debug(\"Closed\");\r\n        this.closed = true;\r\n    }\r\n\r\n    \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/in-app-browser-interface.ts","import { Logger } from \"../services/logger\";\r\n\r\nexport interface ProviderRequiresBrowser {\r\n    setBrowser(browser: BrowserInterface);\r\n    getBrowser(): BrowserInterface;\r\n}\r\n\r\nexport abstract class BrowserInterface {\r\n    abstract execute(javascript: string): Promise<any>;\r\n    abstract onLoadStop(): Promise<void>;\r\n    abstract onLoadStart(): Promise<void>;\r\n\r\n    // These should be handled by the bank sync to do any cleanup / cancelling the flow\r\n    abstract onClose(): Promise<void>;\r\n    abstract onLoadError(): Promise<void>;\r\n\r\n    abstract close();\r\n    abstract isLoading();\r\n\r\n    abstract updateVisbility();\r\n\r\n    interactive: boolean;\r\n    shown: boolean;\r\n    abstract logger: Logger;\r\n    closed: boolean;\r\n\r\n    visible(): boolean {\r\n        return this.interactive || this.shown;\r\n    }\r\n\r\n    userShow() {\r\n        this.shown = true;\r\n        this.updateVisbility();\r\n    }\r\n\r\n    userHide() {\r\n        this.shown = false;        \r\n        this.updateVisbility();\r\n    }\r\n\r\n    startInteractive() {\r\n        this.interactive = true;        \r\n        this.updateVisbility();\r\n    }\r\n\r\n    endInteractive() {\r\n        this.interactive = false;        \r\n        this.updateVisbility();\r\n    }\r\n    \r\n    navigate(url: string): Promise<void> {\r\n        this.logger.debug(\"Navigating to \" + url);\r\n        return this.execute(\"window.location='\" + encodeURI(url) + \"'\")\r\n        .then(() => this.onLoadStop())\r\n        .then(() => this.logger.debug(\"Navigated to \" + url));\r\n\r\n    }\r\n\r\n    sleep(millis: number): Promise<void> {\r\n        return new Promise<void>(resolve => {\r\n            setTimeout(() => {\r\n                resolve();\r\n            }, millis);\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/browser-interface.ts","import {ModalController, Menu, Nav, App, AlertController, ToastController} from 'ionic-angular';\r\nimport {Component, Input, ApplicationRef} from '@angular/core';\r\nimport {Dbms} from '../../db/dbms';\r\nimport {Db} from '../../db/db';\r\nimport {BudgetSettingsPage} from '../../pages/budget-settings/budget-settings';\r\nimport {Configuration} from '../../services/configuration-service';\r\nimport {Replication} from '../../services/replication-service';\r\nimport {Notifications} from '../../services/notifications';\r\nimport {BudgetPage} from '../../pages/budget/budget';\r\nimport {HomePage} from '../../pages/home/home';\r\nimport {InitBudgetTransaction} from '../../data/transactions/init-budget-transaction';\r\nimport {AddBudgetModal} from '../../modals/add-budget/add-budget';\r\nimport {DevPage} from '../../pages/dev/dev';\r\nimport {SettingsPage} from '../../pages/settings/settings';\r\nimport {AboutPage} from '../../pages/about/about';\r\nimport {NotificationsPage} from '../../pages/notifications/notifications';\r\nimport {ShareBudgetModal} from '../../modals/share-budget/share-budget';\r\nimport { BankSync } from \"../../bank/bank-sync\";\r\nimport { BankSyncMonitor } from \"../../bank/bank-sync-monitor\";\r\nimport { EngineFactory } from \"../../engine/engine-factory\";\r\nimport { Engine } from \"../../engine/engine\";\r\nimport { BankSyncUtils } from \"../../bank/bank-sync-utils\";\r\n\r\n@Component({\r\n  selector: 'main-menu-content',\r\n  templateUrl: 'main-menu-content.html'\r\n})\r\n\r\nexport class MainMenuContent {\r\n  \r\n  @Input()\r\n  menu: Menu;\r\n  @Input()\r\n  public nav: Nav;\r\n  \r\n  budgets: Db[];\r\n  window: Window = window;\r\n  markReadTimeout: number;\r\n\r\n  private syncing: boolean;\r\n\r\n  constructor(private dbms: Dbms, private app: App, private configuration: Configuration, private replication: Replication, private modalController: ModalController, private alertController: AlertController, private toastCtrl: ToastController, private notifications: Notifications, private applicationRef: ApplicationRef, private bankSync: BankSync, private engineFactory: EngineFactory) {\r\n    this.dbms = dbms;\r\n    this.budgets = dbms.dbs;\r\n    this.app = app;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.menu.ionOpen.subscribe(() => {\r\n      this.markReadTimeout = setTimeout(() => {\r\n        this.notifications.markRead(3);\r\n        this.markReadTimeout = 0;\r\n        this.applicationRef.tick();\r\n      }, 3000);\r\n    });\r\n\r\n    this.menu.ionClose.subscribe(() => {\r\n      if (this.markReadTimeout) clearTimeout(this.markReadTimeout);\r\n    });\r\n  }\r\n\r\n  isBudgetPageOpen(): boolean {\r\n    return this.nav.getActive().component === BudgetPage;\r\n  }\r\n  \r\n  budgetName(budget: Db): string {\r\n    return budget.name() || 'New Budget (' + budget.id + ')';\r\n  }\r\n  \r\n  openBudget(budget: Db) {\r\n    this.nav.setRoot(BudgetPage, {'budget': budget});\r\n  }\r\n\r\n  engine(): Engine {\r\n    return this.engineFactory.getEngine(this.lastOpenedBudget());\r\n  }\r\n\r\n  lastOpenedBudget(): Db {\r\n    // TODO: Cache the budget - or just have a \"currentBudget\" in the configuration or app or something....\r\n\r\n    let budgetId = this.configuration.lastOpenedBudget();\r\n    if (!budgetId) return;\r\n    let budget = this.dbms.getDb(budgetId);\r\n    return budget;\r\n  }\r\n  \r\n  goHome() {\r\n    this.nav.setRoot(HomePage);\r\n  }\r\n  \r\n  goDev() {\r\n    this.nav.setRoot(DevPage);\r\n  }\r\n\r\n  goSettings() {\r\n    this.nav.setRoot(SettingsPage);\r\n  }\r\n\r\n  goBudgetSettings() {\r\n    this.nav.setRoot(BudgetSettingsPage, {budgetId: this.lastOpenedBudget().id});\r\n  }\r\n\r\n  goAbout() {\r\n    this.nav.setRoot(AboutPage);\r\n  }\r\n\r\n  addBudget() {\r\n    let modal = this.modalController.create(AddBudgetModal);\r\n\r\n    // TODO: Refactor with HomePage. Move to AddBudgetModal...\r\n    modal.onDidDismiss((data) => {\r\n      if (data && data.budgetName !== '') {\r\n        this.dbms.createDb().then(db => {\r\n          db.activate().then(() => {\r\n            let t = new InitBudgetTransaction();\r\n            t.budgetName = data.budgetName;\r\n            db.applyTransaction(t);\r\n            db.deactivate();\r\n\r\n            this.nav.setRoot(BudgetPage, {'budget': db});\r\n            });\r\n        });\r\n      }\r\n    });\r\n  \r\n    modal.present();\r\n\r\n  }\r\n\r\n  // -- //\r\n  \r\n  shareBudget() {\r\n    let modal = this.modalController.create(ShareBudgetModal, {budgetId: this.lastOpenedBudget().id});\r\n    modal.present();\r\n  }\r\n\r\n  get shared(): boolean {\r\n    return this.replication.enabled(this.lastOpenedBudget());\r\n  }\r\n\r\n  linkBudget() {\r\n    let modal = this.modalController.create(ShareBudgetModal);\r\n    modal.onDidDismiss((data) => {\r\n      if (data && data.newBudget) {\r\n        this.nav.setRoot(BudgetPage, {'budget': data.newBudget});\r\n      }\r\n    });\r\n    modal.present();\r\n  }\r\n\r\n  sync(event) {\r\n    this.syncing = true;\r\n    setTimeout(() =>\r\n      this.replication.sync().then(\r\n        () => { this.syncing = false; this.toastCtrl.create({message: 'Budget is up to date',duration: 3000}).present(); },\r\n        () => { this.syncing = false;}\r\n      ),\r\n    1000);\r\n  }\r\n\r\n  // -- //\r\n\r\n  clearNotifications() {\r\n    this.notifications.clear(3);\r\n  }\r\n\r\n  goNotifications() {\r\n    this.nav.setRoot(NotificationsPage);\r\n  }\r\n\r\n  isCurrentValidAutomaticBankLinks() {\r\n    // TODO\r\n    // And need a \"cheap\" way to get this value - perhaps update it off transactions. Basically we want a few criteria - a bank link is set up, it is linked to an account and all credentials are in there so it is automatic...\r\n    // Note: Maybe not the automatic thing, coz we will have a prompting mechanism...\r\n    // Really we can just getAccounts() and find bankLinkId != null\r\n    // But also if it is valid for this particular \"device\" (and the user of the device)\r\n\r\n    return true;\r\n\r\n  }\r\n\r\n  runBankLinks() {\r\n\r\n    // TODO: Combine the notifications / status for these to running and complete and complete / with errors\r\n\r\n\r\n    this.engine().getBankLinks().forEach(bl => {\r\n      let monitor = BankSyncUtils.createMonitorWithNotifications(this.notifications);\r\n      this.bankSync.sync(bl, this.engine(), undefined, monitor, true);\r\n    });\r\n  }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/main-menu-content/main-menu-content.ts","import {Component, Input} from '@angular/core';\r\nimport {Notifications, Notification} from '../../services/notifications'\r\nimport { NavController } from \"ionic-angular\";\r\n\r\n@Component({\r\n  selector: 'notification-list',\r\n  templateUrl: 'notification-list.html'\r\n})\r\n\r\nexport class NotificationList {\r\n \r\n  @Input()\r\n  limit: number = Number.MAX_SAFE_INTEGER;\r\n\r\n  @Input()\r\n  new: boolean;\r\n\r\n  @Input()\r\n  nav: NavController;\r\n\r\n  notifications: Array<Notification>;\r\n\r\n  constructor(public notificationService: Notifications) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.notifications = this.new ? this.notificationService.newNotifications : this.notificationService.notifications;\r\n  }\r\n\r\n  notificationClicked(notification: Notification) {\r\n    if (notification.clickAction) {\r\n      if (notification.clickAction.type === 'custom') {\r\n        notification.clickAction.data();\r\n      } else if (notification.clickAction.type === 'page-nav') {\r\n        this.nav.push(notification.clickAction.data.page, notification.clickAction.data.params);\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/notification-list/notification-list.ts","import {Component} from '@angular/core';\r\nimport {Notifications} from '../../services/notifications'\r\n\r\n@Component({\r\n  selector: 'main-menu-icon',\r\n  templateUrl: 'main-menu-icon.html'\r\n})\r\n\r\nexport class MainMenuIcon {\r\n \r\n  constructor(public notifications: Notifications) {\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/main-menu-icon/main-menu-icon.ts","import {Injectable} from '@angular/core';\r\nimport {Notifications} from './notifications';\r\nimport {Configuration} from './configuration-service';\r\nimport {AppReady} from '../app/app-ready';\r\nimport {Logger} from './logger';\r\nimport {BuildInfo} from '../app/build-info';\r\nimport { Utils } from \"./utils\";\r\n\r\n@Injectable()\r\nexport class UpdatedCheck {\r\n    \r\n    private logger: Logger = Logger.get('Notifications');\r\n\r\n    constructor(appReady: AppReady, notifications: Notifications, configuration: Configuration) {\r\n\r\n        if (Utils.getQueryStringValue('demo')) return; // Skip this for demos\r\n\r\n        appReady.ready.then(() => {\r\n            let latestVersion = configuration.option('latest-version');\r\n            if (BuildInfo.version !== latestVersion || BuildInfo.version === \"%BUILD_INFO_VERSION%\") {\r\n                configuration.option('latest-version', BuildInfo.version);\r\n                let message = \"Updated to version \" + BuildInfo.version;\r\n                this.logger.info(message);\r\n                notifications.show({message: message, popup: true, silent: true, category: 'app-updated'});\r\n            }\r\n        });\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/updated-check.ts","import {Directive, ElementRef} from '@angular/core';\r\nimport {NgControl} from '@angular/forms';\r\n//import MaskedInput from 'ionic2-input-mask';\r\nimport {Configuration} from '../services/configuration-service';\r\nimport {Platform} from 'ionic-angular';\r\n\r\n@Directive({\r\n  host: {\r\n    '(input)': 'onInput()'\r\n  },\r\n  selector: 'ion-input[currency-field]'\r\n})\r\nexport class CurrencyField {\r\n    \r\n    //maskedInput: MaskedInput;\r\n    htmlInputElement: HTMLInputElement;\r\n\r\n    constructor(private elementRef: ElementRef, private ngControl: NgControl, private platform: Platform, private configuration: Configuration) {\r\n        if (!(this.platform.is('ios') || this.platform.is('android'))) {\r\n//            this.maskedInput = new MaskedInput(elementRef, ngControl);\r\n//            this.maskedInput.textMaskConfig = <any> {mask: this.numberMask.bind(this), placeholderChar: '0'};\r\n        }\r\n    }\r\n    ngAfterViewInit(): void {\r\n        this.htmlInputElement = this.elementRef.nativeElement.children[0];\r\n\r\n        //if (this.maskedInput) {\r\n            //this.maskedInput.ngAfterViewInit();\r\n        //}\r\n        if (this.platform.is('ios') || this.platform.is('android')) {\r\n            this.htmlInputElement.setAttribute('type', 'number');\r\n            this.htmlInputElement.setAttribute('step', '0.01');\r\n        }\r\n\r\n/*        this.htmlInputElement.addEventListener('input', (ev) => {\r\n            let val = this.htmlInputElement.value;\r\n            let parts = val.split('.');\r\n            if (parts.length > 1) {\r\n                let cents = parts[1];\r\n                if (cents.length > 2) cents = cents.substring(0,2);\r\n                val = parts[0] + '.' + cents;\r\n            }\r\n            val = val.replace(/[^0-9.]/g, '');\r\n            if (val !== this.htmlInputElement.value) this.htmlInputElement.value = val;\r\n        });\r\n*/\r\n\r\n        this.htmlInputElement.setAttribute('placeholder', '0.00');\r\n\r\n    }\r\n    onInput(): void {\r\n        let val = this.htmlInputElement.value;\r\n\r\n        val = val.replace(/[^0123456789.]/g, '');\r\n\r\n        let parts = val.split('.');\r\n        if (parts.length > 1) {\r\n            let cents = parts[1];\r\n            if (cents.length > 2) cents = cents.substring(0,2);\r\n            val = parts[0] + '.' + cents;\r\n        }\r\n        if (val !== this.htmlInputElement.value) this.htmlInputElement.value = val;\r\n\r\n        this.ngControl.viewToModelUpdate(this.htmlInputElement.value)\r\n    }\r\n\r\n\r\n\r\n/*\r\n    dollarSign = '$';\r\n    emptyString = '';\r\n    comma = ',';\r\n    period = '.';\r\n    nonDigitsRegExp = /\\D+/g;\r\n    digitRegExp = /\\d/;\r\n\r\n\r\n    numberMask(rawValue) {\r\n        let prefix = this.emptyString;\r\n        let suffix = this.emptyString;\r\n        let includeThousandsSeparator = true;\r\n        let thousandsSeparatorSymbol = this.comma;\r\n        let allowDecimal = true;\r\n        let decimalSymbol = this.period;\r\n        let decimalLimit = 2;\r\n        let requireDecimal = true;\r\n        const rawValueLength = rawValue.length;\r\n\r\n        if (rawValue === this.emptyString || (rawValue[0] === prefix[0] && rawValueLength === 1)) {\r\n            return prefix.split(this.emptyString).concat([<any>this.digitRegExp]).concat(suffix.split(this.emptyString));\r\n        }\r\n\r\n        const indexOfLastDecimal = rawValue.lastIndexOf(decimalSymbol);\r\n        const hasDecimal = indexOfLastDecimal !== -1;\r\n\r\n        let integer;\r\n        let fraction;\r\n        let mask;\r\n\r\n        if (hasDecimal && (allowDecimal || requireDecimal)) {\r\n        integer = rawValue.slice(0, indexOfLastDecimal);\r\n\r\n        fraction = rawValue.slice(indexOfLastDecimal + 1, rawValueLength);\r\n        fraction = this.convertToMask(fraction.replace(this.nonDigitsRegExp, this.emptyString));\r\n        } else {\r\n        integer = rawValue;\r\n        }\r\n\r\n        integer = integer.replace(this.nonDigitsRegExp, this.emptyString);\r\n\r\n        integer = (includeThousandsSeparator) ? this.addThousandsSeparator(integer, thousandsSeparatorSymbol) : integer;\r\n\r\n        mask = this.convertToMask(integer);\r\n\r\n        if ((hasDecimal && allowDecimal) || requireDecimal === true) {\r\n        if (rawValue[indexOfLastDecimal - 1] !== decimalSymbol) {\r\n            mask.push('[]');\r\n        }\r\n\r\n        mask.push(decimalSymbol, '[]');\r\n\r\n        if (fraction) {\r\n            if (typeof decimalLimit === 'number') {\r\n            fraction = fraction.slice(0, decimalLimit);\r\n            }\r\n\r\n            mask = mask.concat(fraction);\r\n        } else if (requireDecimal === true) {\r\n            for (let i = 0; i < decimalLimit; i++) {\r\n            mask.push(this.digitRegExp);\r\n            }\r\n        }\r\n        }\r\n\r\n        if (prefix.length > 0) {\r\n        mask = prefix.split(this.emptyString).concat(mask);\r\n        }\r\n\r\n        if (suffix.length > 0) {\r\n        mask = mask.concat(suffix.split(this.emptyString));\r\n        }\r\n\r\n        return mask;\r\n    }\r\n\r\n    convertToMask(strNumber) {\r\n    return strNumber\r\n        .split(this.emptyString)\r\n        .map((char) => this.digitRegExp.test(char) ? this.digitRegExp : char);\r\n    }\r\n\r\n    // http://stackoverflow.com/a/10899795/604296\r\n    addThousandsSeparator(n, thousandsSeparatorSymbol) {\r\n    return n.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparatorSymbol);\r\n    }\r\n\r\n*/\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-field.ts","import {Directive} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[nofocus]',\r\n  host: {\r\n  '(mousedown)': 'onMouseDown($event)'\r\n    }\r\n})\r\nexport class NoFocusDirective {\r\n        \r\n    onMouseDown(event: any) {\r\n        event.preventDefault();\r\n        return false;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/no-focus.ts","import {Component, Input} from '@angular/core';\r\nimport {ActionSheetController} from 'ionic-angular';\r\nimport {LoggerUINotifierAppender} from '../services/logger-ui-notifier-appender';\r\n\r\n@Component({\r\n  selector: 'error-label',\r\n  template: '<div (click)=\"click()\">{{message}}</div>'\r\n})\r\n\r\nexport class ErrorLabel {\r\n\r\n  public hide: boolean = false;\r\n\r\n  @Input()\r\n  public message;\r\n\r\n  constructor(public actionSheetCtrl: ActionSheetController) {\r\n  }\r\n\r\n\r\n  click() {\r\n    let actionSheet = this.actionSheetCtrl.create({\r\n      title: 'Error',\r\n      buttons: [\r\n        {\r\n          text: 'Send Error Report',\r\n          handler: () => {\r\n            LoggerUINotifierAppender.instance.handler.handle(this.message);\r\n          }\r\n        }, {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    actionSheet.present();\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/error-label.ts","import {Component} from '@angular/core';\r\nimport {Replication} from '../services/replication-service';\r\nimport {ActionSheetController} from 'ionic-angular';\r\nimport {LoggerUINotifierAppender} from '../services/logger-ui-notifier-appender';\r\n\r\n@Component({\r\n  selector: 'replication-error',\r\n  template: '<div *ngIf=\"!hide\" (click)=\"click()\" [class.show]=\"!replication.syncing.lastResultSuccess\" [class.error]=\"replication.syncing.consecutiveErrorCount>2\">{{replicationStatus()}}</div>'\r\n})\r\n\r\nexport class ReplicationErrorDisplay {\r\n\r\n  public hide: boolean = false;\r\n\r\n  constructor(public replication: Replication, public actionSheetCtrl: ActionSheetController) {\r\n  }\r\n\r\n  replicationStatus(): string {\r\n    if (this.replication.syncing.lastResultSuccess) return 'Synchronised';\r\n    return 'Synchronise Error';\r\n  }\r\n\r\n  click() {\r\n    let actionSheet = this.actionSheetCtrl.create({\r\n      title: 'Sync Error',\r\n      buttons: [\r\n        {\r\n          text: 'Hide Sync Error Messages',\r\n          handler: () => {\r\n            this.hide = true;\r\n          }\r\n        }, {\r\n          text: 'Send Error Report',\r\n          handler: () => {\r\n            LoggerUINotifierAppender.instance.handler.handle('Sync Error');\r\n          }\r\n        }, {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          handler: () => {\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    actionSheet.present();\r\n\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/replication-error-display.ts","import {Component, Input} from '@angular/core';\r\nimport {PriceFormat} from './price-format';\r\n@Component({\r\n  selector: 'currency-display',\r\n  template: '<span [class.positive-currency]=\"positive && highlightPositive\" [class.negative-currency]=\"!positive && highlightNegative\">{{formattedCurrencyCached}}</span>'\r\n})\r\n\r\nexport class CurrencyDisplay {\r\n  \r\n  @Input()\r\n  value: any;\r\n  \r\n  checkValue: any;\r\n  formattedCurrencyCached: string;\r\n  positive: boolean;\r\n  \r\n  @Input()\r\n  highlightPositive: boolean;\r\n  \r\n  @Input()\r\n  highlightNegative: boolean;\r\n  \r\n  @Input()\r\n  invertedCurrency: boolean;\r\n\r\n  @Input()\r\n  showPositive: boolean;\r\n\r\n  @Input()\r\n  showNegative: boolean;\r\n\r\n  \r\n  ngOnInit() {\r\n    // this.formatCurrency();\r\n    \r\n  }\r\n  \r\n  ngOnChanges() {\r\n    this.formatCurrency();\r\n  }\r\n  \r\n  formatCurrency() {\r\n\r\n    // If they are defined, then they are true, otherwise they will be falsy\r\n    if (typeof this.highlightPositive !== 'undefined') this.highlightPositive = true;\r\n    if (typeof this.highlightNegative !== 'undefined') this.highlightNegative = true;\r\n    if (typeof this.invertedCurrency !== 'undefined') this.invertedCurrency = true;\r\n    if (typeof this.showPositive !== 'undefined') this.showPositive = true;\r\n    if (typeof this.showNegative !== 'undefined') this.showNegative = true;\r\n\r\n        \r\n    if (this.checkValue === this.value) return this.formattedCurrencyCached;\r\n    this.checkValue = this.value;\r\n    \r\n    let pf = new PriceFormat(<any>{}, <any>{});\r\n    let formattedVal = pf.formatIt(pf.fix_it(this.value));\r\n    formattedVal = formattedVal.replace('-', '');\r\n    \r\n    this.positive = true;\r\n    if (parseFloat(this.value) < 0) {\r\n        this.positive = false;\r\n        if (this.highlightNegative) formattedVal = '(' + formattedVal + ')';\r\n    }\r\n\r\n    if (this.invertedCurrency) this.positive = !this.positive;\r\n\r\n    if (this.positive && this.showPositive && formattedVal !== '0.00') {\r\n        formattedVal = '+' + formattedVal;\r\n    } else if (!this.positive && this.showNegative && formattedVal !== '0.00') {\r\n        formattedVal = '-' + formattedVal;\r\n    }\r\n\r\n\r\n    this.formattedCurrencyCached = formattedVal;\r\n\r\n    return this.formattedCurrencyCached;\r\n\r\n  }\r\n  \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/currency-display.ts","import {ElementRef} from '@angular/core';\r\nimport {NgModel} from '@angular/forms';\r\n\r\nexport class PriceFormat {\r\n\r\n    /* tslint:disable */\r\n\r\n    modelPreviousValue;\r\n    element;\r\n    input;\r\n    displayInput;\r\n\r\n    constructor(private model : NgModel, eleRef : ElementRef) {\r\n        this.element = eleRef.nativeElement;\r\n    }\r\n    \r\n    ngOnInit() {\r\n        if (\"input\" == this.element.tagName.toLowerCase()) this.input = this.element;\r\n        else if (\"ion-input\" == this.element.tagName.toLowerCase()) {\r\n            this.input = this.element.firstChild;\r\n            //this.displayInput = this.input.cloneNode();\r\n            //this.element.insertBefore(this.displayInput, this.input);\r\n        }\r\n        \r\n        if (this.model.valueAccessor) {\r\n            this.model.valueAccessor.writeValue(this.fix_it(this.model.value));\r\n            this.model.viewToModelUpdate(this.fix_it(this.model.value));\r\n        } else {\r\n            throw new Error(\"price-format requires NgModel to function correctly\");\r\n            //(<Control>this.ctrl.control).updateValue(this.fix_it(this.model.value));\r\n        }\r\n\r\n\r\n    }\r\n    \r\n    onInput() {\r\n        this.input.value = this.formatIt(this.input.value);\r\n    }\r\n    \r\n    onNgModelChange(nv : any) {\r\n        nv = this.formatIt(nv);\r\n        if (this.model.value !== nv.toUpperCase() && this.model.value !== this.modelPreviousValue) {\r\n            this.modelPreviousValue = this.model.value;\r\n            this.model.valueAccessor.writeValue(nv);\r\n            this.model.viewToModelUpdate(nv);\r\n            //if (this.displayInput) this.displayInput.value = nv;\r\n        }\r\n    }\r\n\r\n    formatIt(value: string): string {\r\n        return this.price_format(value, false);\r\n    }\r\n\r\n\r\n\tis_number = /[0-9]/;\r\n    centsLimit = 2;\r\n    clearOnEmpty = false;\r\n    centsSeparator = \".\";\r\n    thousandsSeparator = \",\";\r\n    allowNegative = true;\r\n    insertPlusSign = false;\r\n    prefix = \"\";\r\n    suffix = \"\";\r\n\r\n    to_numbers(str) {\r\n        var formatted = '';\r\n        for (var i = 0; i < (str.length); i++) {\r\n            let char_ = str.charAt(i);\r\n            if (formatted.length == 0 && char_ == 0) char_ = false;\r\n\r\n            if (char_ && char_.match(this.is_number)) {\r\n                //if (limit) {\r\n                //    if (formatted.length < limit) formatted = formatted + char_;\r\n                //}\r\n                //else {\r\n                formatted = formatted + char_;\r\n                //}\r\n            }\r\n        }\r\n\r\n        return formatted;\r\n    }\r\n\r\n    // format to fill with zeros to complete cents chars\r\n    fill_with_zeroes(str) {\r\n        while (str.length < (this.centsLimit + 1)) str = '0' + str;\r\n        return str;\r\n    }\r\n    \r\n    fix_it(str1) : string {\r\n        let str = str1 ? str1 + \"\" : \"0\";\r\n        let parts = str.split(\".\");\r\n        if (parts.length == 1) {\r\n            str = str + this.centsSeparator + Array(this.centsLimit + 1).join(\"0\");\r\n        } else if (parts.length == 2) {\r\n            let cents = parts[1];\r\n            if (parts[1].length > this.centsLimit) cents = parts[1].substring(0,this.centsLimit + 1);\r\n            else if (parts[1].length < this.centsLimit) cents = parts[1] + Array(this.centsLimit - parts[1].length + 1).join(\"0\");\r\n            str = parts[0] + this.centsSeparator + cents;\r\n        }\r\n        return this.price_format(str, false);\r\n    }\r\n\r\n    price_format(str, ignore) {\r\n        str = str + \"\";\r\n        if (!ignore && (str === '' || str == this.price_format('0', true)) && this.clearOnEmpty)\r\n            return '';\r\n\r\n        // formatting settings\r\n        var formatted = this.fill_with_zeroes(this.to_numbers(str));\r\n        var thousandsFormatted = '';\r\n        var thousandsCount = 0;\r\n\r\n        let centsSeparator = this.centsSeparator;\r\n        // Checking CentsLimit\r\n        if (this.centsLimit == 0) {\r\n            centsSeparator = \"\";\r\n            centsVal = \"\";\r\n        }\r\n\r\n        // split integer from cents\r\n        var centsVal = formatted.substr(formatted.length - this.centsLimit, this.centsLimit);\r\n        var integerVal = formatted.substr(0, formatted.length - this.centsLimit);\r\n\r\n        // apply cents pontuation\r\n        formatted = (this.centsLimit == 0) ? integerVal : integerVal + centsSeparator + centsVal;\r\n\r\n        // apply thousands pontuation\r\n        if (this.thousandsSeparator) {\r\n            for (var j = integerVal.length; j > 0; j--) {\r\n                let char_ = integerVal.substr(j - 1, 1);\r\n                thousandsCount++;\r\n                if (thousandsCount % 3 == 0) char_ = this.thousandsSeparator + char_;\r\n                thousandsFormatted = char_ + thousandsFormatted;\r\n            }\r\n\r\n            //\r\n            if (thousandsFormatted.substr(0, 1) == this.thousandsSeparator) thousandsFormatted = thousandsFormatted.substring(1, thousandsFormatted.length);\r\n            formatted = (this.centsLimit == 0) ? thousandsFormatted : thousandsFormatted + centsSeparator + centsVal;\r\n        }\r\n\r\n        // if the string contains a dash, it is negative - add it to the begining (except for zero)\r\n        if (this.allowNegative && (integerVal != 0 || centsVal != 0)) {\r\n            if (str.indexOf('-') != -1 && str.indexOf('+') < str.indexOf('-')) {\r\n                formatted = '-' + formatted;\r\n            }\r\n            else {\r\n                if (!this.insertPlusSign)\r\n                    formatted = '' + formatted;\r\n                else\r\n                    formatted = '+' + formatted;\r\n            }\r\n        }\r\n\r\n        // apply the prefix\r\n        if (this.prefix) formatted = this.prefix + formatted;\r\n\r\n        // apply the suffix\r\n        if (this.suffix) formatted = formatted + this.suffix;\r\n\r\n        return formatted;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/price-format.ts","import {Pipe} from '@angular/core';\r\nimport moment from 'moment';\r\n\r\n\r\n@Pipe({\r\n    name: 'dFormat'\r\n})\r\nexport class DFormatPipe {\r\n\r\n    transform(val, args) {\r\n        var m = moment(val, 'YYYYMMDD');\r\n        if (m.year() === new Date().getFullYear()) {\r\n            return m.format('DD MMM');\r\n        } else {\r\n            return m.format('DD MMM YYYY');\r\n        }\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/date-format.ts","import {Component, Input} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cute-progress-bar',\r\n  template: '<div class=\"cute-progress-indicator\" [style.left]=\"cssWidth()\"></div>'\r\n})\r\n\r\nexport class CuteProgressBar {\r\n\r\n  @Input(\"value\") value: number;\r\n  @Input(\"of\") of: number;\r\n\r\n  cssWidth() : String {\r\n\r\n    // TODO: Need a way to immediately update this, perhaps instead of binding, have a method which will update the DOM directly...\r\n    // TODO: Or need a way to trigger angular to run immediately, and not in a setTimeout()...\r\n\r\n    if (this.of > 0) return (this.value / this.of * 100) + \"%\";\r\n    return \"0\"; // TODO: Trigger an indeterminate animation\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/cute-progress-bar.ts","import { Injectable } from \"@angular/core\";\r\nimport { BankLinkLocal } from \"./bank-link-local\";\r\nimport { AppReady } from \"../app/app-ready\";\r\nimport { EngineFactory } from \"../engine/engine-factory\";\r\nimport { Dbms } from \"../db/dbms\";\r\nimport { Db } from \"../db/db\";\r\nimport { BankSync } from \"./bank-sync\";\r\nimport { BankSyncUtils } from \"./bank-sync-utils\";\r\nimport { Notifications } from \"../services/notifications\";\r\nimport { Logger } from \"../services/logger\";\r\n\r\n@Injectable()\r\nexport class BankAutoSync {\r\n\r\n    private log = Logger.get('bank-auto-sync');\r\n\r\n    constructor(private bankLinkLocal: BankLinkLocal, appReady: AppReady, private engineFactory: EngineFactory, private dbms: Dbms, private bankSync: BankSync, private notifications: Notifications) {\r\n        appReady.ready.then(() => {\r\n            setTimeout(() => {\r\n                this.log.info(\"Starting auto sync scheduler\");\r\n                this.scheduleBankAutoSync();\r\n            }, 10000);\r\n        });\r\n    }\r\n\r\n    private scheduleBankAutoSync() {\r\n        setTimeout(() => this.scheduleBankAutoSync(), 60000);            \r\n\r\n        this.dbms.dbs.forEach(db => {\r\n            if (db.isActive()) {\r\n                this.autoSync(db);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Runs the auto bank sync for all bank links with autosync for the DB< if they are past their scheduled time\r\n     */\r\n    public autoSync(db: Db) {\r\n        let engine = this.engineFactory.getEngine(db);\r\n        let bankLinks = engine.getBankLinks();\r\n        bankLinks.forEach(bankLink => {\r\n            let info = this.bankLinkLocal.getInfo(bankLink.uuid);\r\n            let timeDiffHours = info.lastSync == null ? Date.now() : (Date.now() - info.lastSync) / (1000 * 60 * 60);\r\n            if (info.autoSync && !info.pauseAutoSync && timeDiffHours > 12 && this.bankSync.activeSyncs.find(m => m.bankLink.uuid === bankLink.uuid) === undefined) {\r\n                this.log.info(\"Auto syncing bank link \" + bankLink.name);\r\n                let monitor = BankSyncUtils.createMonitorWithNotifications(this.notifications);\r\n                monitor.on('running-state-change').subscribe(() => {\r\n                    if (monitor.running) this.notifications.show({message: 'Syncing Bank Link ' + monitor.bankLink.name, category: 'bank-sync.' + monitor.bankLink.uuid});\r\n                });\r\n                this.bankSync.sync(bankLink, engine, undefined, monitor, true);\r\n            }\r\n            if (info.autoSync && info.pauseAutoSync && timeDiffHours > 24) {\r\n                this.notifications.show({message: 'Bank Link Syncing Paused for ' + bankLink.name, category: 'bank-sync.' + bankLink.uuid + 'auto-sync-paused'});                \r\n            }\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/bank/bank-auto-sync.ts","import {Component, Input} from '@angular/core';\r\nimport {Notifications, Notification} from '../../services/notifications'\r\n\r\n@Component({\r\n  selector: 'status',\r\n  templateUrl: 'status.html'\r\n})\r\n\r\nexport class Status {\r\n \r\n  @Input()\r\n  header: HTMLElement\r\n\r\n  constructor(public notificationService: Notifications) {\r\n    \r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/components/status/status.ts","import { Injectable } from \"@angular/core\";\r\nimport { Notifications } from \"./notifications\";\r\nimport { Configuration } from \"./configuration-service\";\r\nimport { EngineFactory } from \"../engine/engine-factory\";\r\nimport { Dbms } from \"../db/dbms\";\r\nimport { Engine } from \"../engine/engine\";\r\nimport { BankAccountPage } from \"../pages/bank-account/bank-account\";\r\n\r\n@Injectable()\r\nexport class ReconciliationStatus {\r\n\r\n    constructor(private notifications: Notifications, private configuration: Configuration, private dbms: Dbms, private engineFactory: EngineFactory) {\r\n\r\n        dbms.dbInitialisedObservable().subscribe(db => {\r\n            let engine = this.engineFactory.getEngine(db);\r\n\r\n            engine.bankTransactionUnreconciledDynamicView.on('rebuild', e => {\r\n                if (!db.isActive()) return;\r\n                this.notifyReconciliationChange(engine);\r\n            });\r\n\r\n            db.on('db-activated').subscribe(dbEvent => {\r\n                if (engine.bankTransactionUnreconciledDynamicView.data().length > 0) {\r\n                    this.notifyReconciliationChange(engine);\r\n                }\r\n            })\r\n\r\n        });\r\n\r\n    }\r\n\r\n    notifyReconciliationChange(engine: Engine): any {\r\n\r\n        // TODO: Going to have to group and remember these by account!\r\n        // Or set up and manage a few views with where clauses and monitor each one, I wonder how good our \"rebuild\" is.\r\n        let accountId = engine.bankTransactionUnreconciledDynamicView.data().length > 0 ? engine.bankTransactionUnreconciledDynamicView.data()[0].accountId : null;\r\n        let clickAction = accountId != null ? {type: 'page-nav', data: {page: BankAccountPage, params: {budgetId: engine.db.id, accountId: accountId}}} : undefined;\r\n\r\n        this.notifications.show({\r\n            message: engine.bankTransactionUnreconciledDynamicView.data().length + ' bank transactions to reconcile',\r\n            category: 'reconciliation-status',\r\n            budgetId: engine.db.id,\r\n            clickAction: <any> clickAction\r\n        });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/reconciliation-status.ts"],"sourceRoot":""}